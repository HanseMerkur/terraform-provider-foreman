{
  "swagger": "2.0",
  "info": {
    "version": "2",
    "title": "Foreman",
    "description": "<p>Foreman API v2 is currently the default API version.</p>",
    "contact": {}
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/ansible_roles/{id}": {
      "get": {
        "description": "Show role",
        "summary": "get_ansible_roles_id",
        "tags": [
          "ansible_roles"
        ],
        "operationId": "AnsibleRolesByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Deletes Ansible role",
        "summary": "delete_ansible_roles_id",
        "tags": [
          "ansible_roles"
        ],
        "operationId": "AnsibleRolesByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/ansible_roles": {
      "get": {
        "description": "List Ansible roles",
        "summary": "get_ansible_roles",
        "tags": [
          "ansible_roles"
        ],
        "operationId": "AnsibleRolesGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/ansible_roles/import": {
      "put": {
        "description": "Import Ansible roles",
        "summary": "put_ansible_roles_import",
        "tags": [
          "ansible_roles"
        ],
        "operationId": "AnsibleRolesImportPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body165"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/ansible_roles/obsolete": {
      "put": {
        "description": "Obsolete Ansible roles",
        "summary": "put_ansible_roles_obsolete",
        "tags": [
          "ansible_roles"
        ],
        "operationId": "AnsibleRolesObsoletePut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body166"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/ansible_roles/fetch": {
      "get": {
        "description": "Fetch Ansible roles available to be imported",
        "summary": "get_ansible_roles_fetch",
        "tags": [
          "ansible_roles"
        ],
        "operationId": "AnsibleRolesFetchGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "proxy_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Smart Proxy to fetch from"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/architectures": {
      "get": {
        "description": "List all architectures",
        "summary": "get_architectures",
        "tags": [
          "architectures"
        ],
        "operationId": "ArchitecturesGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          },
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of operating system"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create an architecture",
        "summary": "post_architectures",
        "tags": [
          "architectures"
        ],
        "operationId": "ArchitecturesPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body40"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/operatingsystems/{operatingsystem_id}/architectures": {
      "get": {
        "description": "List all architectures for operating system",
        "summary": "get_operatingsystems_operatingsystem_id_architectures",
        "tags": [
          "architectures"
        ],
        "operationId": "OperatingsystemsArchitecturesByOperatingsystemIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/architectures/{id}": {
      "get": {
        "description": "Show an architecture",
        "summary": "get_architectures_id",
        "tags": [
          "architectures"
        ],
        "operationId": "ArchitecturesByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update an architecture",
        "summary": "put_architectures_id",
        "tags": [
          "architectures"
        ],
        "operationId": "ArchitecturesByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body41"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete an architecture",
        "summary": "delete_architectures_id",
        "tags": [
          "architectures"
        ],
        "operationId": "ArchitecturesByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/audits": {
      "get": {
        "description": "List all audits",
        "summary": "get_audits",
        "tags": [
          "audits"
        ],
        "operationId": "AuditsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{host_id}/audits": {
      "get": {
        "description": "List all audits for a given host",
        "summary": "get_hosts_host_id_audits",
        "tags": [
          "audits"
        ],
        "operationId": "HostsAuditsByHostIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/audits/{id}": {
      "get": {
        "description": "Show an audit",
        "summary": "get_audits_id",
        "tags": [
          "audits"
        ],
        "operationId": "AuditsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/auth_source_externals": {
      "get": {
        "description": "List external authentication sources",
        "summary": "get_auth_source_externals",
        "tags": [
          "auth_source_externals"
        ],
        "operationId": "AuthSourceExternalsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/locations/{location_id}/auth_source_externals": {
      "get": {
        "description": "List external authentication sources per location",
        "summary": "get_locations_location_id_auth_source_externals",
        "tags": [
          "auth_source_externals"
        ],
        "operationId": "LocationsAuthSourceExternalsByLocationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organization_id}/auth_source_externals": {
      "get": {
        "description": "List external authentication sources per organization",
        "summary": "get_organizations_organization_id_auth_source_externals",
        "tags": [
          "auth_source_externals"
        ],
        "operationId": "OrganizationsAuthSourceExternalsByOrganizationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/auth_source_externals/{id}": {
      "get": {
        "description": "Show an external authentication source",
        "summary": "get_auth_source_externals_id",
        "tags": [
          "auth_source_externals"
        ],
        "operationId": "AuthSourceExternalsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update an external authentication source",
        "summary": "put_auth_source_externals_id",
        "tags": [
          "auth_source_externals"
        ],
        "operationId": "AuthSourceExternalsByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body127"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/auth_source_internals": {
      "get": {
        "description": "List internal authentication sources",
        "summary": "get_auth_source_internals",
        "tags": [
          "auth_source_internals"
        ],
        "operationId": "AuthSourceInternalsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/auth_source_internals/{id}": {
      "get": {
        "description": "Show an internal authentication source",
        "summary": "get_auth_source_internals_id",
        "tags": [
          "auth_source_internals"
        ],
        "operationId": "AuthSourceInternalsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/auth_source_ldaps": {
      "get": {
        "description": "List all LDAP authentication sources",
        "summary": "get_auth_source_ldaps",
        "tags": [
          "auth_source_ldaps"
        ],
        "operationId": "AuthSourceLdapsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create an LDAP authentication source",
        "summary": "post_auth_source_ldaps",
        "tags": [
          "auth_source_ldaps"
        ],
        "operationId": "AuthSourceLdapsPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body132"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/locations/{location_id}/auth_source_ldaps": {
      "get": {
        "description": "List LDAP authentication sources per location",
        "summary": "get_locations_location_id_auth_source_ldaps",
        "tags": [
          "auth_source_ldaps"
        ],
        "operationId": "LocationsAuthSourceLdapsByLocationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organization_id}/auth_source_ldaps": {
      "get": {
        "description": "List LDAP authentication sources per organization",
        "summary": "get_organizations_organization_id_auth_source_ldaps",
        "tags": [
          "auth_source_ldaps"
        ],
        "operationId": "OrganizationsAuthSourceLdapsByOrganizationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/auth_source_ldaps/{id}": {
      "get": {
        "description": "Show an LDAP authentication source",
        "summary": "get_auth_source_ldaps_id",
        "tags": [
          "auth_source_ldaps"
        ],
        "operationId": "AuthSourceLdapsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update an LDAP authentication source",
        "summary": "put_auth_source_ldaps_id",
        "tags": [
          "auth_source_ldaps"
        ],
        "operationId": "AuthSourceLdapsByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body133"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete an LDAP authentication source",
        "summary": "delete_auth_source_ldaps_id",
        "tags": [
          "auth_source_ldaps"
        ],
        "operationId": "AuthSourceLdapsByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/auth_source_ldaps/{id}/test": {
      "put": {
        "description": "Test LDAP connection",
        "summary": "put_auth_source_ldaps_id_test",
        "tags": [
          "auth_source_ldaps"
        ],
        "operationId": "AuthSourceLdapsTestByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/auth_sources": {
      "get": {
        "description": "List all authentication sources",
        "summary": "get_auth_sources",
        "tags": [
          "auth_sources"
        ],
        "operationId": "AuthSourcesGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/locations/{location_id}/auth_sources": {
      "get": {
        "description": "List all authentication sources per location",
        "summary": "get_locations_location_id_auth_sources",
        "tags": [
          "auth_sources"
        ],
        "operationId": "LocationsAuthSourcesByLocationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organization_id}/auth_sources": {
      "get": {
        "description": "List all authentication sources per organization",
        "summary": "get_organizations_organization_id_auth_sources",
        "tags": [
          "auth_sources"
        ],
        "operationId": "OrganizationsAuthSourcesByOrganizationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/smart_proxies/smart_proxy_id/autosign": {
      "get": {
        "description": "List all autosign entries",
        "summary": "get_smart_proxies_smart_proxy_id_autosign",
        "tags": [
          "autosign"
        ],
        "operationId": "SmartProxiesSmartProxyIdAutosignGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/smart_proxies/{smart_proxy_id}/autosign": {
      "post": {
        "description": "Create autosign entry",
        "summary": "post_smart_proxies_smart_proxy_id_autosign",
        "tags": [
          "autosign"
        ],
        "operationId": "SmartProxiesAutosignBySmartProxyIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "smart_proxy_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body118"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/smart_proxies/{smart_proxy_id}/autosign/{id}": {
      "delete": {
        "description": "Delete autosign entry",
        "summary": "delete_smart_proxies_smart_proxy_id_autosign_id",
        "tags": [
          "autosign"
        ],
        "operationId": "SmartProxiesAutosignBySmartProxyIdAndIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "smart_proxy_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Autosign entry name"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/bookmarks": {
      "get": {
        "description": "List all bookmarks",
        "summary": "get_bookmarks",
        "tags": [
          "bookmarks"
        ],
        "operationId": "BookmarksGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a bookmark",
        "summary": "post_bookmarks",
        "tags": [
          "bookmarks"
        ],
        "operationId": "BookmarksPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body110"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/bookmarks/{id}": {
      "get": {
        "description": "Show a bookmark",
        "summary": "get_bookmarks_id",
        "tags": [
          "bookmarks"
        ],
        "operationId": "BookmarksByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a bookmark",
        "summary": "put_bookmarks_id",
        "tags": [
          "bookmarks"
        ],
        "operationId": "BookmarksByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body111"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a bookmark",
        "summary": "delete_bookmarks_id",
        "tags": [
          "bookmarks"
        ],
        "operationId": "BookmarksByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/common_parameters": {
      "get": {
        "description": "List all global parameters",
        "summary": "get_common_parameters",
        "tags": [
          "common_parameters"
        ],
        "operationId": "CommonParametersGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a global parameter",
        "summary": "post_common_parameters",
        "tags": [
          "common_parameters"
        ],
        "operationId": "CommonParametersPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body36"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/common_parameters/{id}": {
      "get": {
        "description": "Show a global parameter",
        "summary": "get_common_parameters_id",
        "tags": [
          "common_parameters"
        ],
        "operationId": "CommonParametersByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a global parameter",
        "summary": "put_common_parameters_id",
        "tags": [
          "common_parameters"
        ],
        "operationId": "CommonParametersByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body37"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a global parameter",
        "summary": "delete_common_parameters_id",
        "tags": [
          "common_parameters"
        ],
        "operationId": "CommonParametersByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_resources/{compute_resource_id}/compute_profiles/{compute_profile_id}/compute_attributes": {
      "post": {
        "description": "Create a compute attributes set",
        "summary": "post_compute_resources_compute_resource_id_compute_profiles_compute_profile_id_compute_attributes",
        "tags": [
          "compute_attributes"
        ],
        "operationId": "ComputeResourcesComputeProfilesComputeAttributesByComputeResourceIdAndComputeProfileIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "compute_resource_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "compute_profile_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body134"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_profiles/{compute_profile_id}/compute_resources/{compute_resource_id}/compute_attributes": {
      "post": {
        "description": "Create a compute attributes set",
        "summary": "post_compute_profiles_compute_profile_id_compute_resources_compute_resource_id_compute_attributes",
        "tags": [
          "compute_attributes"
        ],
        "operationId": "ComputeProfilesComputeResourcesComputeAttributesByComputeProfileIdAndComputeResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "compute_resource_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "compute_profile_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body134"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_resources/{compute_resource_id}/compute_attributes": {
      "post": {
        "description": "Create a compute attributes set",
        "summary": "post_compute_resources_compute_resource_id_compute_attributes",
        "tags": [
          "compute_attributes"
        ],
        "operationId": "ComputeResourcesComputeAttributesByComputeResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "compute_resource_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body136"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_profiles/{compute_profile_id}/compute_attributes": {
      "post": {
        "description": "Create a compute attributes set",
        "summary": "post_compute_profiles_compute_profile_id_compute_attributes",
        "tags": [
          "compute_attributes"
        ],
        "operationId": "ComputeProfilesComputeAttributesByComputeProfileIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "compute_profile_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body137"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_attributes": {
      "post": {
        "description": "Create a compute attributes set",
        "summary": "post_compute_attributes",
        "tags": [
          "compute_attributes"
        ],
        "operationId": "ComputeAttributesPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body138"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_resources/{compute_resource_id}/compute_profiles/{compute_profile_id}/compute_attributes/{id}": {
      "put": {
        "description": "Update a compute attributes set",
        "summary": "put_compute_resources_compute_resource_id_compute_profiles_compute_profile_id_compute_attributes_id",
        "tags": [
          "compute_attributes"
        ],
        "operationId": "ComputeResourcesComputeProfilesComputeAttributesIdByComputeResourceIdAndComputeProfileIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "compute_resource_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "compute_profile_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body139"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_profiles/{compute_profile_id}/compute_resources/{compute_resource_id}/compute_attributes/{id}": {
      "put": {
        "description": "Update a compute attributes set",
        "summary": "put_compute_profiles_compute_profile_id_compute_resources_compute_resource_id_compute_attributes_id",
        "tags": [
          "compute_attributes"
        ],
        "operationId": "ComputeProfilesComputeResourcesComputeAttributesIdByComputeProfileIdAndComputeResourceIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "compute_resource_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "compute_profile_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body139"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_resources/{compute_resource_id}/compute_attributes/{id}": {
      "put": {
        "description": "Update a compute attributes set",
        "summary": "put_compute_resources_compute_resource_id_compute_attributes_id",
        "tags": [
          "compute_attributes"
        ],
        "operationId": "ComputeResourcesComputeAttributesByComputeResourceIdAndIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "compute_resource_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body141"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_profiles/{compute_profile_id}/compute_attributes/{id}": {
      "put": {
        "description": "Update a compute attributes set",
        "summary": "put_compute_profiles_compute_profile_id_compute_attributes_id",
        "tags": [
          "compute_attributes"
        ],
        "operationId": "ComputeProfilesComputeAttributesByComputeProfileIdAndIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "compute_profile_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body142"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_attributes/{id}": {
      "put": {
        "description": "Update a compute attributes set",
        "summary": "put_compute_attributes_id",
        "tags": [
          "compute_attributes"
        ],
        "operationId": "ComputeAttributesByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body143"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_profiles": {
      "get": {
        "description": "List of compute profiles",
        "summary": "get_compute_profiles",
        "tags": [
          "compute_profiles"
        ],
        "operationId": "ComputeProfilesGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a compute profile",
        "summary": "post_compute_profiles",
        "tags": [
          "compute_profiles"
        ],
        "operationId": "ComputeProfilesPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body103"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_profiles/{id}": {
      "get": {
        "description": "Show a compute profile",
        "summary": "get_compute_profiles_id",
        "tags": [
          "compute_profiles"
        ],
        "operationId": "ComputeProfilesByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a compute profile",
        "summary": "put_compute_profiles_id",
        "tags": [
          "compute_profiles"
        ],
        "operationId": "ComputeProfilesByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body104"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a compute profile",
        "summary": "delete_compute_profiles_id",
        "tags": [
          "compute_profiles"
        ],
        "operationId": "ComputeProfilesByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_resources": {
      "get": {
        "description": "List all compute resources",
        "summary": "get_compute_resources",
        "tags": [
          "compute_resources"
        ],
        "operationId": "ComputeResourcesGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a compute resource",
        "summary": "post_compute_resources",
        "tags": [
          "compute_resources"
        ],
        "operationId": "ComputeResourcesPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body144"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_resources/{id}": {
      "get": {
        "description": "Show a compute resource",
        "summary": "get_compute_resources_id",
        "tags": [
          "compute_resources"
        ],
        "operationId": "ComputeResourcesByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a compute resource",
        "summary": "put_compute_resources_id",
        "tags": [
          "compute_resources"
        ],
        "operationId": "ComputeResourcesByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body145"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a compute resource",
        "summary": "delete_compute_resources_id",
        "tags": [
          "compute_resources"
        ],
        "operationId": "ComputeResourcesByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_resources/{id}/available_images": {
      "get": {
        "description": "List available images for a compute resource",
        "summary": "get_compute_resources_id_available_images",
        "tags": [
          "compute_resources"
        ],
        "operationId": "ComputeResourcesAvailableImagesByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_resources/{id}/available_clusters": {
      "get": {
        "description": "List available clusters for a compute resource",
        "summary": "get_compute_resources_id_available_clusters",
        "tags": [
          "compute_resources"
        ],
        "operationId": "ComputeResourcesAvailableClustersByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_resources/{id}/available_flavors": {
      "get": {
        "description": "List available flavors for a compute resource",
        "summary": "get_compute_resources_id_available_flavors",
        "tags": [
          "compute_resources"
        ],
        "operationId": "ComputeResourcesAvailableFlavorsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_resources/{id}/available_folders": {
      "get": {
        "description": "List available folders for a compute resource",
        "summary": "get_compute_resources_id_available_folders",
        "tags": [
          "compute_resources"
        ],
        "operationId": "ComputeResourcesAvailableFoldersByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_resources/{id}/available_zones": {
      "get": {
        "description": "List available zone for a compute resource",
        "summary": "get_compute_resources_id_available_zones",
        "tags": [
          "compute_resources"
        ],
        "operationId": "ComputeResourcesAvailableZonesByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_resources/{id}/available_networks": {
      "get": {
        "description": "List available networks for a compute resource",
        "summary": "get_compute_resources_id_available_networks",
        "tags": [
          "compute_resources"
        ],
        "operationId": "ComputeResourcesAvailableNetworksByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_resources/{id}/available_clusters/{cluster_id}/available_networks": {
      "get": {
        "description": "List available networks for a compute resource cluster",
        "summary": "get_compute_resources_id_available_clusters_cluster_id_available_networks",
        "tags": [
          "compute_resources"
        ],
        "operationId": "ComputeResourcesAvailableClustersAvailableNetworksByIdAndClusterIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_resources/{id}/available_clusters/{cluster_id}/available_resource_pools": {
      "get": {
        "description": "List resource pools for a compute resource cluster",
        "summary": "get_compute_resources_id_available_clusters_cluster_id_available_resource_pools",
        "tags": [
          "compute_resources"
        ],
        "operationId": "ComputeResourcesAvailableClustersAvailableResourcePoolsByIdAndClusterIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_resources/{id}/available_storage_domains": {
      "get": {
        "description": "List storage domains for a compute resource",
        "summary": "get_compute_resources_id_available_storage_domains",
        "tags": [
          "compute_resources"
        ],
        "operationId": "ComputeResourcesAvailableStorageDomainsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "storage_domain",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_resources/{id}/available_storage_domains/{storage_domain}": {
      "get": {
        "description": "List attributes for a given storage domain",
        "summary": "get_compute_resources_id_available_storage_domains_storage_domain",
        "tags": [
          "compute_resources"
        ],
        "operationId": "ComputeResourcesAvailableStorageDomainsByIdAndStorageDomainGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storage_domain",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_resources/{id}/available_storage_pods": {
      "get": {
        "description": "List storage pods for a compute resource",
        "summary": "get_compute_resources_id_available_storage_pods",
        "tags": [
          "compute_resources"
        ],
        "operationId": "ComputeResourcesAvailableStoragePodsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "storage_pod",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_resources/{id}/available_storage_pods/{storage_pod}": {
      "get": {
        "description": "List attributes for a given storage pod",
        "summary": "get_compute_resources_id_available_storage_pods_storage_pod",
        "tags": [
          "compute_resources"
        ],
        "operationId": "ComputeResourcesAvailableStoragePodsByIdAndStoragePodGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storage_pod",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_resources/{id}/available_security_groups": {
      "get": {
        "description": "List available security groups for a compute resource",
        "summary": "get_compute_resources_id_available_security_groups",
        "tags": [
          "compute_resources"
        ],
        "operationId": "ComputeResourcesAvailableSecurityGroupsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_resources/{id}/associate": {
      "put": {
        "description": "Associate VMs to Hosts",
        "summary": "put_compute_resources_id_associate",
        "tags": [
          "compute_resources"
        ],
        "operationId": "ComputeResourcesAssociateByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_resources/{id}/refresh_cache": {
      "put": {
        "description": "Refresh Compute Resource Cache",
        "summary": "put_compute_resources_id_refresh_cache",
        "tags": [
          "compute_resources"
        ],
        "operationId": "ComputeResourcesRefreshCacheByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/config_groups": {
      "get": {
        "description": "List of config groups",
        "summary": "get_config_groups",
        "tags": [
          "config_groups"
        ],
        "operationId": "ConfigGroupsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a config group",
        "summary": "post_config_groups",
        "tags": [
          "config_groups"
        ],
        "operationId": "ConfigGroupsPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body66"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/config_groups/{id}": {
      "get": {
        "description": "Show a config group",
        "summary": "get_config_groups_id",
        "tags": [
          "config_groups"
        ],
        "operationId": "ConfigGroupsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a config group",
        "summary": "put_config_groups_id",
        "tags": [
          "config_groups"
        ],
        "operationId": "ConfigGroupsByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body67"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a config group",
        "summary": "delete_config_groups_id",
        "tags": [
          "config_groups"
        ],
        "operationId": "ConfigGroupsByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/config_reports": {
      "get": {
        "description": "List all reports",
        "summary": "get_config_reports",
        "tags": [
          "config_reports"
        ],
        "operationId": "ConfigReportsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a report",
        "summary": "post_config_reports",
        "tags": [
          "config_reports"
        ],
        "operationId": "ConfigReportsPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body113"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/config_reports/{id}": {
      "get": {
        "description": "Show a report",
        "summary": "get_config_reports_id",
        "tags": [
          "config_reports"
        ],
        "operationId": "ConfigReportsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a report",
        "summary": "delete_config_reports_id",
        "tags": [
          "config_reports"
        ],
        "operationId": "ConfigReportsByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{host_id}/config_reports/last": {
      "get": {
        "description": "Show the last report for a host",
        "summary": "get_hosts_host_id_config_reports_last",
        "tags": [
          "config_reports"
        ],
        "operationId": "HostsConfigReportsLastByHostIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "host_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/config_templates": {
      "get": {
        "description": "List provisioning templates",
        "summary": "get_config_templates",
        "tags": [
          "config_templates"
        ],
        "operationId": "ConfigTemplatesGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a provisioning template",
        "summary": "post_config_templates",
        "tags": [
          "config_templates"
        ],
        "operationId": "ConfigTemplatesPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body57"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/operatingsystems/{operatingsystem_id}/config_templates": {
      "get": {
        "description": "List provisioning templates per operating system",
        "summary": "get_operatingsystems_operatingsystem_id_config_templates",
        "tags": [
          "config_templates"
        ],
        "operationId": "OperatingsystemsConfigTemplatesByOperatingsystemIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/locations/{location_id}/config_templates": {
      "get": {
        "description": "List provisioning templates per location",
        "summary": "get_locations_location_id_config_templates",
        "tags": [
          "config_templates"
        ],
        "operationId": "LocationsConfigTemplatesByLocationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organization_id}/config_templates": {
      "get": {
        "description": "List provisioning templates per organization",
        "summary": "get_organizations_organization_id_config_templates",
        "tags": [
          "config_templates"
        ],
        "operationId": "OrganizationsConfigTemplatesByOrganizationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/config_templates/{id}": {
      "get": {
        "description": "Show provisioning template details",
        "summary": "get_config_templates_id",
        "tags": [
          "config_templates"
        ],
        "operationId": "ConfigTemplatesByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a provisioning template",
        "summary": "put_config_templates_id",
        "tags": [
          "config_templates"
        ],
        "operationId": "ConfigTemplatesByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body58"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a provisioning template",
        "summary": "delete_config_templates_id",
        "tags": [
          "config_templates"
        ],
        "operationId": "ConfigTemplatesByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/config_templates/revision": {
      "get": {
        "summary": "get_config_templates_revision",
        "tags": [
          "config_templates"
        ],
        "operationId": "ConfigTemplatesRevisionGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "template version"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/config_templates/build_pxe_default": {
      "post": {
        "description": "Update the default PXE menu on all configured TFTP servers",
        "summary": "post_config_templates_build_pxe_default",
        "tags": [
          "config_templates"
        ],
        "operationId": "ConfigTemplatesBuildPxeDefaultPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/config_templates/{id}/clone": {
      "post": {
        "description": "Clone a provision template",
        "summary": "post_config_templates_id_clone",
        "tags": [
          "config_templates"
        ],
        "operationId": "ConfigTemplatesCloneByIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body59"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/dashboard": {
      "get": {
        "description": "Get dashboard details",
        "summary": "get_dashboard",
        "tags": [
          "dashboard"
        ],
        "operationId": "DashboardGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/domains": {
      "get": {
        "description": "List of domains",
        "summary": "get_domains",
        "tags": [
          "domains"
        ],
        "operationId": "DomainsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subnet_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of subnet"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "\n<p>The <strong>fullname</strong> field is used for human readability in\nreports and other pages that refer to domains, and also available as an\nexternal node parameter</p>\n",
        "summary": "post_domains",
        "tags": [
          "domains"
        ],
        "operationId": "DomainsPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body125"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/subnets/{subnet_id}/domains": {
      "get": {
        "description": "List of domains per subnet",
        "summary": "get_subnets_subnet_id_domains",
        "tags": [
          "domains"
        ],
        "operationId": "SubnetsDomainsBySubnetIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subnet_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of subnet"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/locations/{location_id}/domains": {
      "get": {
        "description": "List of domains per location",
        "summary": "get_locations_location_id_domains",
        "tags": [
          "domains"
        ],
        "operationId": "LocationsDomainsByLocationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subnet_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of subnet"
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organization_id}/domains": {
      "get": {
        "description": "List of domains per organization",
        "summary": "get_organizations_organization_id_domains",
        "tags": [
          "domains"
        ],
        "operationId": "OrganizationsDomainsByOrganizationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subnet_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of subnet"
          },
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/domains/{id}": {
      "get": {
        "description": "Show a domain",
        "summary": "get_domains_id",
        "tags": [
          "domains"
        ],
        "operationId": "DomainsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Numerical ID or domain name"
          },
          {
            "name": "show_hidden_parameters",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden parameter values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a domain",
        "summary": "put_domains_id",
        "tags": [
          "domains"
        ],
        "operationId": "DomainsByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body126"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a domain",
        "summary": "delete_domains_id",
        "tags": [
          "domains"
        ],
        "operationId": "DomainsByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/environments": {
      "get": {
        "description": "List all environments",
        "summary": "get_environments",
        "tags": [
          "environments"
        ],
        "operationId": "EnvironmentsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "puppetclass_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of Puppet class"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create an environment",
        "summary": "post_environments",
        "tags": [
          "environments"
        ],
        "operationId": "EnvironmentsPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body27"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/puppetclasses/{puppetclass_id}/environments": {
      "get": {
        "description": "List environments of Puppet class",
        "summary": "get_puppetclasses_puppetclass_id_environments",
        "tags": [
          "environments"
        ],
        "operationId": "PuppetclassesEnvironmentsByPuppetclassIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "puppetclass_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of Puppet class"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/locations/{location_id}/environments": {
      "get": {
        "description": "List environments per location",
        "summary": "get_locations_location_id_environments",
        "tags": [
          "environments"
        ],
        "operationId": "LocationsEnvironmentsByLocationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "puppetclass_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of Puppet class"
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organization_id}/environments": {
      "get": {
        "description": "List environments per organization",
        "summary": "get_organizations_organization_id_environments",
        "tags": [
          "environments"
        ],
        "operationId": "OrganizationsEnvironmentsByOrganizationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "puppetclass_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of Puppet class"
          },
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/environments/{id}": {
      "get": {
        "description": "Show an environment",
        "summary": "get_environments_id",
        "tags": [
          "environments"
        ],
        "operationId": "EnvironmentsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update an environment",
        "summary": "put_environments_id",
        "tags": [
          "environments"
        ],
        "operationId": "EnvironmentsByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body28"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete an environment",
        "summary": "delete_environments_id",
        "tags": [
          "environments"
        ],
        "operationId": "EnvironmentsByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/usergroups/{usergroup_id}/external_usergroups": {
      "get": {
        "description": "List all external user groups for user group",
        "summary": "get_usergroups_usergroup_id_external_usergroups",
        "tags": [
          "external_usergroups"
        ],
        "operationId": "UsergroupsExternalUsergroupsByUsergroupIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "usergroup_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID or name of user group"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create an external user group linked to a user group",
        "summary": "post_usergroups_usergroup_id_external_usergroups",
        "tags": [
          "external_usergroups"
        ],
        "operationId": "UsergroupsExternalUsergroupsByUsergroupIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "usergroup_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID or name of user group"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body14"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/auth_source_ldaps/{auth_source_ldap_id}/external_usergroups": {
      "get": {
        "description": "List all external user groups for LDAP authentication source",
        "summary": "get_auth_source_ldaps_auth_source_ldap_id_external_usergroups",
        "tags": [
          "external_usergroups"
        ],
        "operationId": "AuthSourceLdapsExternalUsergroupsByAuthSourceLdapIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "usergroup_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID or name of user group"
          },
          {
            "name": "auth_source_ldap_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/usergroups/{usergroup_id}/external_usergroups/{id}": {
      "get": {
        "description": "Show an external user group for user group",
        "summary": "get_usergroups_usergroup_id_external_usergroups_id",
        "tags": [
          "external_usergroups"
        ],
        "operationId": "UsergroupsExternalUsergroupsByUsergroupIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID or name of external user group"
          },
          {
            "name": "usergroup_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID or name of user group"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update external user group",
        "summary": "put_usergroups_usergroup_id_external_usergroups_id",
        "tags": [
          "external_usergroups"
        ],
        "operationId": "UsergroupsExternalUsergroupsByUsergroupIdAndIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID or name of external user group"
          },
          {
            "name": "usergroup_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID or name of user group"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body15"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete an external user group",
        "summary": "delete_usergroups_usergroup_id_external_usergroups_id",
        "tags": [
          "external_usergroups"
        ],
        "operationId": "UsergroupsExternalUsergroupsByUsergroupIdAndIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID or name external user group"
          },
          {
            "name": "usergroup_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID or name of user group"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/auth_source_ldaps/{auth_source_ldap_id}/external_usergroups/{id}": {
      "get": {
        "description": "Show an external user group for LDAP authentication source",
        "summary": "get_auth_source_ldaps_auth_source_ldap_id_external_usergroups_id",
        "tags": [
          "external_usergroups"
        ],
        "operationId": "AuthSourceLdapsExternalUsergroupsByAuthSourceLdapIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "usergroup_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID or name of user group"
          },
          {
            "name": "auth_source_ldap_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID or name of external user group"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/usergroups/{usergroup_id}/external_usergroups/{id}/refresh": {
      "put": {
        "description": "Refresh external user group",
        "summary": "put_usergroups_usergroup_id_external_usergroups_id_refresh",
        "tags": [
          "external_usergroups"
        ],
        "operationId": "UsergroupsExternalUsergroupsRefreshByUsergroupIdAndIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID or name of external user group"
          },
          {
            "name": "usergroup_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID or name of user group"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/fact_values": {
      "get": {
        "description": "List all fact values",
        "summary": "get_fact_values",
        "tags": [
          "fact_values"
        ],
        "operationId": "FactValuesGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{host_id}/facts": {
      "get": {
        "description": "List all fact values of a given host",
        "summary": "get_hosts_host_id_facts",
        "tags": [
          "fact_values"
        ],
        "operationId": "HostsFactsByHostIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/filters": {
      "get": {
        "description": "List all filters",
        "summary": "get_filters",
        "tags": [
          "filters"
        ],
        "operationId": "FiltersGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a filter",
        "summary": "post_filters",
        "tags": [
          "filters"
        ],
        "operationId": "FiltersPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/filters/{id}": {
      "get": {
        "description": "Show a filter",
        "summary": "get_filters_id",
        "tags": [
          "filters"
        ],
        "operationId": "FiltersByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a filter",
        "summary": "put_filters_id",
        "tags": [
          "filters"
        ],
        "operationId": "FiltersByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body33"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a filter",
        "summary": "delete_filters_id",
        "tags": [
          "filters"
        ],
        "operationId": "FiltersByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/templates/{template_id}/foreign_input_sets": {
      "get": {
        "description": "List foreign input sets",
        "summary": "get_templates_template_id_foreign_input_sets",
        "tags": [
          "foreign_input_sets"
        ],
        "operationId": "TemplatesForeignInputSetsByTemplateIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a foreign input set",
        "summary": "post_templates_template_id_foreign_input_sets",
        "tags": [
          "foreign_input_sets"
        ],
        "operationId": "TemplatesForeignInputSetsByTemplateIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body161"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/templates/{template_id}/foreign_input_sets/{id}": {
      "get": {
        "description": "Show foreign input set details",
        "summary": "get_templates_template_id_foreign_input_sets_id",
        "tags": [
          "foreign_input_sets"
        ],
        "operationId": "TemplatesForeignInputSetsByTemplateIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a foreign input set",
        "summary": "delete_templates_template_id_foreign_input_sets_id",
        "tags": [
          "foreign_input_sets"
        ],
        "operationId": "TemplatesForeignInputSetsByTemplateIdAndIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a foreign input set",
        "summary": "put_templates_template_id_foreign_input_sets_id",
        "tags": [
          "foreign_input_sets"
        ],
        "operationId": "TemplatesForeignInputSetsByTemplateIdAndIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body162"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/tasks/summary": {
      "get": {
        "description": "Show task summary",
        "summary": "get_tasks_summary",
        "tags": [
          "foreman_tasks"
        ],
        "operationId": "TasksSummaryGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "description": "Show task details",
        "summary": "get_tasks_id",
        "tags": [
          "foreman_tasks"
        ],
        "operationId": "TasksByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "UUID of the task"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/tasks/bulk_search": {
      "post": {
        "description": "\n<p>For every search it returns the list of tasks that satisfty the condition.\nThe reason for supporting multiple searches is the UI that might be ending\nneeding periodic updates on task status for various searches at the same\ntime. This way, it is possible to get all the task statuses with one\nrequest.</p>\n",
        "summary": "post_tasks_bulk_search",
        "tags": [
          "foreman_tasks"
        ],
        "operationId": "TasksBulkSearchPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body149"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/tasks/bulk_resume": {
      "post": {
        "description": "Resume all paused error tasks",
        "summary": "post_tasks_bulk_resume",
        "tags": [
          "foreman_tasks"
        ],
        "operationId": "TasksBulkResumePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body150"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "description": "List tasks",
        "summary": "get_tasks",
        "tags": [
          "foreman_tasks"
        ],
        "operationId": "TasksGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Search string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double",
            "description": "Page number, starting at 1"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double",
            "description": "Number of results per page to return"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, e.g. 'name DESC'"
          },
          {
            "name": "sort[by]",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Field to sort the results on"
          },
          {
            "name": "sort[order]",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "How to order the sorted results (e.g. ASC for ascending)"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/tasks/callback": {
      "post": {
        "description": "Send data to the task from external executor (such as smart_proxy_dynflow)",
        "summary": "post_tasks_callback",
        "tags": [
          "foreman_tasks"
        ],
        "operationId": "TasksCallbackPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body151"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/": {
      "get": {
        "description": "Show available API links",
        "summary": "get",
        "tags": [
          "home"
        ],
        "operationId": "UnnammedEndpointGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/status": {
      "get": {
        "description": "Show status",
        "summary": "get_status",
        "tags": [
          "home"
        ],
        "operationId": "StatusGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{host_id}/puppetclass_ids": {
      "get": {
        "description": "List all Puppet class IDs for host",
        "summary": "get_hosts_host_id_puppetclass_ids",
        "tags": [
          "host_classes"
        ],
        "operationId": "HostsPuppetclassIdsByHostIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Add a Puppet class to host",
        "summary": "post_hosts_host_id_puppetclass_ids",
        "tags": [
          "host_classes"
        ],
        "operationId": "HostsPuppetclassIdsByHostIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body29"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{host_id}/puppetclass_ids/{id}": {
      "delete": {
        "description": "Remove a Puppet class from host",
        "summary": "delete_hosts_host_id_puppetclass_ids_id",
        "tags": [
          "host_classes"
        ],
        "operationId": "HostsPuppetclassIdsByHostIdAndIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of Puppet class"
          },
          {
            "name": "host_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hostgroups/{hostgroup_id}/puppetclass_ids": {
      "get": {
        "description": "List all Puppet class IDs for host group",
        "summary": "get_hostgroups_hostgroup_id_puppetclass_ids",
        "tags": [
          "hostgroup_classes"
        ],
        "operationId": "HostgroupsPuppetclassIdsByHostgroupIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostgroup_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Add a Puppet class to host group",
        "summary": "post_hostgroups_hostgroup_id_puppetclass_ids",
        "tags": [
          "hostgroup_classes"
        ],
        "operationId": "HostgroupsPuppetclassIdsByHostgroupIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostgroup_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body29"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hostgroups/{hostgroup_id}/puppetclass_ids/{id}": {
      "delete": {
        "description": "Remove a Puppet class from host group",
        "summary": "delete_hostgroups_hostgroup_id_puppetclass_ids_id",
        "tags": [
          "hostgroup_classes"
        ],
        "operationId": "HostgroupsPuppetclassIdsByHostgroupIdAndIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of Puppet class"
          },
          {
            "name": "hostgroup_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hostgroups": {
      "post": {
        "description": "Create a host group",
        "summary": "post_hostgroups",
        "tags": [
          "hostgroups"
        ],
        "operationId": "HostgroupsPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body9"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hostgroups/{id}": {
      "get": {
        "description": "Show a host group",
        "summary": "get_hostgroups_id",
        "tags": [
          "hostgroups"
        ],
        "operationId": "HostgroupsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "show_hidden_parameters",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden parameter values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a host group",
        "summary": "put_hostgroups_id",
        "tags": [
          "hostgroups"
        ],
        "operationId": "HostgroupsByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body10"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a host group",
        "summary": "delete_hostgroups_id",
        "tags": [
          "hostgroups"
        ],
        "operationId": "HostgroupsByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hostgroups/{id}/clone": {
      "post": {
        "description": "Clone a host group",
        "summary": "post_hostgroups_id_clone",
        "tags": [
          "hostgroups"
        ],
        "operationId": "HostgroupsCloneByIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body11"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hostgroups/{id}/rebuild_config": {
      "put": {
        "description": "Rebuild orchestration config",
        "summary": "put_hostgroups_id_rebuild_config",
        "tags": [
          "hostgroups"
        ],
        "operationId": "HostgroupsRebuildConfigByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body12"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hostgroups/{id}/play_roles": {
      "post": {
        "description": "Plays Ansible roles on a hostgroup",
        "summary": "post_hostgroups_id_play_roles",
        "tags": [
          "hostgroups"
        ],
        "operationId": "HostgroupsPlayRolesByIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hostgroups/multiple_play_roles": {
      "post": {
        "description": "Plays Ansible roles on hostgroups",
        "summary": "post_hostgroups_multiple_play_roles",
        "tags": [
          "hostgroups"
        ],
        "operationId": "HostgroupsMultiplePlayRolesPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body13"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hostgroups/{id}/ansible_roles": {
      "get": {
        "description": "List all Ansible roles for a hostgroup",
        "summary": "get_hostgroups_id_ansible_roles",
        "tags": [
          "hostgroups"
        ],
        "operationId": "HostgroupsAnsibleRolesByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts": {
      "get": {
        "description": "List all hosts",
        "summary": "get_hosts",
        "tags": [
          "hosts"
        ],
        "operationId": "HostsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "thin",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Only list ID and name of hosts"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of location"
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of organization"
          },
          {
            "name": "environment_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of environment"
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "enum": [
              "parameters",
              "all_parameters"
            ],
            "type": "string",
            "description": "Array of extra information types to include"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a host",
        "summary": "post_hosts",
        "tags": [
          "hosts"
        ],
        "operationId": "HostsPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hostgroups/{hostgroup_id}/hosts": {
      "get": {
        "description": "List all hosts for a host group",
        "summary": "get_hostgroups_hostgroup_id_hosts",
        "tags": [
          "hosts"
        ],
        "operationId": "HostgroupsHostsByHostgroupIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostgroup_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "thin",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Only list ID and name of hosts"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of location"
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of organization"
          },
          {
            "name": "environment_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of environment"
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "enum": [
              "parameters",
              "all_parameters"
            ],
            "type": "string",
            "description": "Array of extra information types to include"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/locations/{location_id}/hosts": {
      "get": {
        "description": "List hosts per location",
        "summary": "get_locations_location_id_hosts",
        "tags": [
          "hosts"
        ],
        "operationId": "LocationsHostsByLocationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of location"
          },
          {
            "name": "thin",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Only list ID and name of hosts"
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of organization"
          },
          {
            "name": "environment_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of environment"
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "enum": [
              "parameters",
              "all_parameters"
            ],
            "type": "string",
            "description": "Array of extra information types to include"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organization_id}/hosts": {
      "get": {
        "description": "List hosts per organization",
        "summary": "get_organizations_organization_id_hosts",
        "tags": [
          "hosts"
        ],
        "operationId": "OrganizationsHostsByOrganizationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "location_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of location"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of organization"
          },
          {
            "name": "thin",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Only list ID and name of hosts"
          },
          {
            "name": "environment_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of environment"
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "enum": [
              "parameters",
              "all_parameters"
            ],
            "type": "string",
            "description": "Array of extra information types to include"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/environments/{environment_id}/hosts": {
      "get": {
        "description": "List hosts per environment",
        "summary": "get_environments_environment_id_hosts",
        "tags": [
          "hosts"
        ],
        "operationId": "EnvironmentsHostsByEnvironmentIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of location"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "environment_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of environment"
          },
          {
            "name": "thin",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Only list ID and name of hosts"
          },
          {
            "name": "include",
            "in": "query",
            "required": false,
            "enum": [
              "parameters",
              "all_parameters"
            ],
            "type": "string",
            "description": "Array of extra information types to include"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{id}": {
      "get": {
        "description": "Show a host",
        "summary": "get_hosts_id",
        "tags": [
          "hosts"
        ],
        "operationId": "HostsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "show_hidden_parameters",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden parameter values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a host",
        "summary": "put_hosts_id",
        "tags": [
          "hosts"
        ],
        "operationId": "HostsByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a host",
        "summary": "delete_hosts_id",
        "tags": [
          "hosts"
        ],
        "operationId": "HostsByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{id}/enc": {
      "get": {
        "description": "Get ENC values of host",
        "summary": "get_hosts_id_enc",
        "tags": [
          "hosts"
        ],
        "operationId": "HostsEncByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{id}/status": {
      "get": {
        "description": "\n<p>Return value may either be one of the following:</p>\n<ul><li>\n<p>Alerts disabled</p>\n</li><li>\n<p>No reports</p>\n</li><li>\n<p>Error</p>\n</li><li>\n<p>Out of sync</p>\n</li><li>\n<p>Active</p>\n</li><li>\n<p>Pending</p>\n</li><li>\n<p>No changes</p>\n</li></ul>\n",
        "summary": "get_hosts_id_status",
        "tags": [
          "hosts"
        ],
        "operationId": "HostsStatusByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{id}/status/{type}": {
      "get": {
        "description": "\n<p>Returns string representing a host status of a given type</p>\n",
        "summary": "get_hosts_id_status_type",
        "tags": [
          "hosts"
        ],
        "operationId": "HostsStatusByIdAndTypeGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "status type, can be one of\n* global\n* configuration\n* build\n"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{id}/vm_compute_attributes": {
      "get": {
        "description": "\n<p>Return the host&#39;s compute attributes that can be used to create a clone\nof this VM</p>\n",
        "summary": "get_hosts_id_vm_compute_attributes",
        "tags": [
          "hosts"
        ],
        "operationId": "HostsVmComputeAttributesByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{id}/disassociate": {
      "put": {
        "description": "Disassociate the host from a VM",
        "summary": "put_hosts_id_disassociate",
        "tags": [
          "hosts"
        ],
        "operationId": "HostsDisassociateByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{id}/power": {
      "put": {
        "description": "Run a power operation on host",
        "summary": "put_hosts_id_power",
        "tags": [
          "hosts"
        ],
        "operationId": "HostsPowerByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{id}/boot": {
      "put": {
        "description": "Boot host from specified device",
        "summary": "put_hosts_id_boot",
        "tags": [
          "hosts"
        ],
        "operationId": "HostsBootByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body3"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/facts": {
      "post": {
        "description": "Upload facts for a host, creating the host if required",
        "summary": "post_hosts_facts",
        "tags": [
          "hosts"
        ],
        "operationId": "HostsFactsPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{id}/rebuild_config": {
      "put": {
        "description": "Rebuild orchestration config",
        "summary": "put_hosts_id_rebuild_config",
        "tags": [
          "hosts"
        ],
        "operationId": "HostsRebuildConfigByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body5"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{id}/template/{kind}": {
      "get": {
        "description": "Preview rendered provisioning template content",
        "summary": "get_hosts_id_template_kind",
        "tags": [
          "hosts"
        ],
        "operationId": "HostsTemplateByIdAndKindGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "kind",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Template kinds, available values: PXELinux, PXEGrub, PXEGrub2, iPXE, provision, finish, script, user_data, ZTP, POAP"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{id}/play_roles": {
      "post": {
        "description": "Plays Ansible roles on a host",
        "summary": "post_hosts_id_play_roles",
        "tags": [
          "hosts"
        ],
        "operationId": "HostsPlayRolesByIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/multiple_play_roles": {
      "post": {
        "description": "Plays Ansible roles on hosts",
        "summary": "post_hosts_multiple_play_roles",
        "tags": [
          "hosts"
        ],
        "operationId": "HostsMultiplePlayRolesPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body6"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{id}/ansible_roles": {
      "get": {
        "description": "List all Ansible roles for a host",
        "summary": "get_hosts_id_ansible_roles",
        "tags": [
          "hosts"
        ],
        "operationId": "HostsAnsibleRolesByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/http_proxies": {
      "get": {
        "description": "List of HTTP Proxies",
        "summary": "get_http_proxies",
        "tags": [
          "http_proxies"
        ],
        "operationId": "HttpProxiesGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create an HTTP Proxy",
        "summary": "post_http_proxies",
        "tags": [
          "http_proxies"
        ],
        "operationId": "HttpProxiesPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body16"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/http_proxies/{id}": {
      "get": {
        "description": "Show an HTTP Proxy",
        "summary": "get_http_proxies_id",
        "tags": [
          "http_proxies"
        ],
        "operationId": "HttpProxiesByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Numerical ID or HTTP Proxy name"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update an HTTP Proxy",
        "summary": "put_http_proxies_id",
        "tags": [
          "http_proxies"
        ],
        "operationId": "HttpProxiesByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body17"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete an HTTP Proxy",
        "summary": "delete_http_proxies_id",
        "tags": [
          "http_proxies"
        ],
        "operationId": "HttpProxiesByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_resources/{compute_resource_id}/images": {
      "get": {
        "description": "List all images for a compute resource",
        "summary": "get_compute_resources_compute_resource_id_images",
        "tags": [
          "images"
        ],
        "operationId": "ComputeResourcesImagesByComputeResourceIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "compute_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of compute resource"
          },
          {
            "name": "architecture_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of architecture"
          },
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create an image",
        "summary": "post_compute_resources_compute_resource_id_images",
        "tags": [
          "images"
        ],
        "operationId": "ComputeResourcesImagesByComputeResourceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "compute_resource_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body101"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/operatingsystems/{operatingsystem_id}/images": {
      "get": {
        "description": "List all images for operating system",
        "summary": "get_operatingsystems_operatingsystem_id_images",
        "tags": [
          "images"
        ],
        "operationId": "OperatingsystemsImagesByOperatingsystemIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "compute_resource_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of compute resource"
          },
          {
            "name": "operatingsystem_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "architecture_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of architecture"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/architectures/{architecture_id}/images": {
      "get": {
        "description": "List all images for architecture",
        "summary": "get_architectures_architecture_id_images",
        "tags": [
          "images"
        ],
        "operationId": "ArchitecturesImagesByArchitectureIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "compute_resource_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of compute resource"
          },
          {
            "name": "architecture_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of architecture"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/compute_resources/{compute_resource_id}/images/{id}": {
      "get": {
        "description": "Show an image",
        "summary": "get_compute_resources_compute_resource_id_images_id",
        "tags": [
          "images"
        ],
        "operationId": "ComputeResourcesImagesByComputeResourceIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "compute_resource_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of compute resource"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "architecture_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of architecture"
          },
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of operating system"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update an image",
        "summary": "put_compute_resources_compute_resource_id_images_id",
        "tags": [
          "images"
        ],
        "operationId": "ComputeResourcesImagesByComputeResourceIdAndIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "compute_resource_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body102"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete an image",
        "summary": "delete_compute_resources_compute_resource_id_images_id",
        "tags": [
          "images"
        ],
        "operationId": "ComputeResourcesImagesByComputeResourceIdAndIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "compute_resource_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/operatingsystems/{operatingsystem_id}/images/{id}": {
      "get": {
        "description": "Show an image",
        "summary": "get_operatingsystems_operatingsystem_id_images_id",
        "tags": [
          "images"
        ],
        "operationId": "OperatingsystemsImagesByOperatingsystemIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "compute_resource_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of compute resource"
          },
          {
            "name": "operatingsystem_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "architecture_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of architecture"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/architectures/{architecture_id}/images/{id}": {
      "get": {
        "description": "Show an image",
        "summary": "get_architectures_architecture_id_images_id",
        "tags": [
          "images"
        ],
        "operationId": "ArchitecturesImagesByArchitectureIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "compute_resource_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of compute resource"
          },
          {
            "name": "architecture_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of architecture"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{host_id}/interfaces": {
      "get": {
        "description": "List all interfaces for host",
        "summary": "get_hosts_host_id_interfaces",
        "tags": [
          "interfaces"
        ],
        "operationId": "HostsInterfacesByHostIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID or name of host"
          },
          {
            "name": "domain_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID or name of domain"
          },
          {
            "name": "subnet_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID or name of subnet"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create an interface on a host",
        "summary": "post_hosts_host_id_interfaces",
        "tags": [
          "interfaces"
        ],
        "operationId": "HostsInterfacesByHostIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID or name of host"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body7"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/domains/{domain_id}/interfaces": {
      "get": {
        "description": "List all interfaces for domain",
        "summary": "get_domains_domain_id_interfaces",
        "tags": [
          "interfaces"
        ],
        "operationId": "DomainsInterfacesByDomainIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID or name of host"
          },
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID or name of domain"
          },
          {
            "name": "subnet_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID or name of subnet"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/subnets/{subnet_id}/interfaces": {
      "get": {
        "description": "List all interfaces for subnet",
        "summary": "get_subnets_subnet_id_interfaces",
        "tags": [
          "interfaces"
        ],
        "operationId": "SubnetsInterfacesBySubnetIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID or name of domain"
          },
          {
            "name": "host_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID or name of host"
          },
          {
            "name": "subnet_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID or name of subnet"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{host_id}/interfaces/{id}": {
      "get": {
        "description": "Show an interface for host",
        "summary": "get_hosts_host_id_interfaces_id",
        "tags": [
          "interfaces"
        ],
        "operationId": "HostsInterfacesByHostIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID or name of interface"
          },
          {
            "name": "host_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID or name of host"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a host's interface",
        "summary": "put_hosts_host_id_interfaces_id",
        "tags": [
          "interfaces"
        ],
        "operationId": "HostsInterfacesByHostIdAndIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of interface"
          },
          {
            "name": "host_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID or name of host"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body7"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a host's interface",
        "summary": "delete_hosts_host_id_interfaces_id",
        "tags": [
          "interfaces"
        ],
        "operationId": "HostsInterfacesByHostIdAndIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of interface"
          },
          {
            "name": "host_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID or name of host"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/job_invocations": {
      "get": {
        "description": "List job invocations",
        "summary": "get_job_invocations",
        "tags": [
          "job_invocations"
        ],
        "operationId": "JobInvocationsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a job invocation",
        "summary": "post_job_invocations",
        "tags": [
          "job_invocations"
        ],
        "operationId": "JobInvocationsPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body158"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/job_invocations/{id}": {
      "get": {
        "description": "Show job invocation",
        "summary": "get_job_invocations_id",
        "tags": [
          "job_invocations"
        ],
        "operationId": "JobInvocationsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/job_invocations/{id}/hosts/{host_id}": {
      "get": {
        "description": "Get output for a host",
        "summary": "get_job_invocations_id_hosts_host_id",
        "tags": [
          "job_invocations"
        ],
        "operationId": "JobInvocationsHostsByIdAndHostIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "since",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/job_invocations/{id}/hosts/{host_id}/raw": {
      "get": {
        "description": "Get raw output for a host",
        "summary": "get_job_invocations_id_hosts_host_id_raw",
        "tags": [
          "job_invocations"
        ],
        "operationId": "JobInvocationsHostsRawByIdAndHostIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/job_invocations/{id}/cancel": {
      "post": {
        "description": "Cancel job invocation",
        "summary": "post_job_invocations_id_cancel",
        "tags": [
          "job_invocations"
        ],
        "operationId": "JobInvocationsCancelByIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body159"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/job_invocations/{id}/rerun": {
      "post": {
        "description": "Rerun job on failed hosts",
        "summary": "post_job_invocations_id_rerun",
        "tags": [
          "job_invocations"
        ],
        "operationId": "JobInvocationsRerunByIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body160"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/job_templates": {
      "get": {
        "description": "List job templates",
        "summary": "get_job_templates",
        "tags": [
          "job_templates"
        ],
        "operationId": "JobTemplatesGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a job template",
        "summary": "post_job_templates",
        "tags": [
          "job_templates"
        ],
        "operationId": "JobTemplatesPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body153"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/locations/{location_id}/job_templates": {
      "get": {
        "description": "List job templates per location",
        "summary": "get_locations_location_id_job_templates",
        "tags": [
          "job_templates"
        ],
        "operationId": "LocationsJobTemplatesByLocationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organization_id}/job_templates": {
      "get": {
        "description": "List job templates per organization",
        "summary": "get_organizations_organization_id_job_templates",
        "tags": [
          "job_templates"
        ],
        "operationId": "OrganizationsJobTemplatesByOrganizationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/job_templates/import": {
      "post": {
        "description": "Import a job template from ERB",
        "summary": "post_job_templates_import",
        "tags": [
          "job_templates"
        ],
        "operationId": "JobTemplatesImportPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body154"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/job_templates/{id}/export": {
      "get": {
        "description": "Export a job template to ERB",
        "summary": "get_job_templates_id_export",
        "tags": [
          "job_templates"
        ],
        "operationId": "JobTemplatesExportByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/job_templates/{id}": {
      "get": {
        "description": "Show job template details",
        "summary": "get_job_templates_id",
        "tags": [
          "job_templates"
        ],
        "operationId": "JobTemplatesByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a job template",
        "summary": "put_job_templates_id",
        "tags": [
          "job_templates"
        ],
        "operationId": "JobTemplatesByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body155"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a job template",
        "summary": "delete_job_templates_id",
        "tags": [
          "job_templates"
        ],
        "operationId": "JobTemplatesByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/job_templates/revision": {
      "get": {
        "summary": "get_job_templates_revision",
        "tags": [
          "job_templates"
        ],
        "operationId": "JobTemplatesRevisionGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Template version"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/job_templates/{id}/clone": {
      "post": {
        "description": "Clone a provision template",
        "summary": "post_job_templates_id_clone",
        "tags": [
          "job_templates"
        ],
        "operationId": "JobTemplatesCloneByIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body156"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/locations": {
      "get": {
        "description": "List all locations",
        "summary": "get_locations",
        "tags": [
          "locations"
        ],
        "operationId": "LocationsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a location",
        "summary": "post_locations",
        "tags": [
          "locations"
        ],
        "operationId": "LocationsPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body116"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/locations/{id}": {
      "get": {
        "description": "Show a location",
        "summary": "get_locations_id",
        "tags": [
          "locations"
        ],
        "operationId": "LocationsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "show_hidden_parameters",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden parameter values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a location",
        "summary": "put_locations_id",
        "tags": [
          "locations"
        ],
        "operationId": "LocationsByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body117"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a location",
        "summary": "delete_locations_id",
        "tags": [
          "locations"
        ],
        "operationId": "LocationsByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/mail_notifications": {
      "get": {
        "description": "List of email notifications",
        "summary": "get_mail_notifications",
        "tags": [
          "mail_notifications"
        ],
        "operationId": "MailNotificationsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/mail_notifications/{id}": {
      "get": {
        "description": "Show an email notification",
        "summary": "get_mail_notifications_id",
        "tags": [
          "mail_notifications"
        ],
        "operationId": "MailNotificationsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Numerical ID or email notification name"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/media": {
      "get": {
        "description": "List all installation media",
        "summary": "get_media",
        "tags": [
          "media"
        ],
        "operationId": "MediaGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a medium",
        "summary": "post_media",
        "tags": [
          "media"
        ],
        "operationId": "MediaPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body47"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/operatingsystems/{operatingsystem_id}/media": {
      "get": {
        "description": "List all media for an operating system",
        "summary": "get_operatingsystems_operatingsystem_id_media",
        "tags": [
          "media"
        ],
        "operationId": "OperatingsystemsMediaByOperatingsystemIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/locations/{location_id}/media": {
      "get": {
        "description": "List all media per location",
        "summary": "get_locations_location_id_media",
        "tags": [
          "media"
        ],
        "operationId": "LocationsMediaByLocationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organization_id}/media": {
      "get": {
        "description": "List all media per organization",
        "summary": "get_organizations_organization_id_media",
        "tags": [
          "media"
        ],
        "operationId": "OrganizationsMediaByOrganizationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/media/{id}": {
      "get": {
        "description": "Show a medium",
        "summary": "get_media_id",
        "tags": [
          "media"
        ],
        "operationId": "MediaByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a medium",
        "summary": "put_media_id",
        "tags": [
          "media"
        ],
        "operationId": "MediaByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body48"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a medium",
        "summary": "delete_media_id",
        "tags": [
          "media"
        ],
        "operationId": "MediaByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/models": {
      "get": {
        "description": "List all hardware models",
        "summary": "get_models",
        "tags": [
          "models"
        ],
        "operationId": "ModelsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a hardware model",
        "summary": "post_models",
        "tags": [
          "models"
        ],
        "operationId": "ModelsPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body45"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/models/{id}": {
      "get": {
        "description": "Show a hardware model",
        "summary": "get_models_id",
        "tags": [
          "models"
        ],
        "operationId": "ModelsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a hardware model",
        "summary": "put_models_id",
        "tags": [
          "models"
        ],
        "operationId": "ModelsByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body46"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a hardware model",
        "summary": "delete_models_id",
        "tags": [
          "models"
        ],
        "operationId": "ModelsByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/omaha_groups": {
      "get": {
        "description": "List all omaha groups",
        "summary": "get_omaha_groups",
        "tags": [
          "omaha_groups"
        ],
        "operationId": "OmahaGroupsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/omaha_groups/{id}": {
      "get": {
        "description": "Show a Omaha Group",
        "summary": "get_omaha_groups_id",
        "tags": [
          "omaha_groups"
        ],
        "operationId": "OmahaGroupsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of the Omaha Group"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/omaha_reports": {
      "get": {
        "description": "List all omaha reports",
        "summary": "get_omaha_reports",
        "tags": [
          "omaha_reports"
        ],
        "operationId": "OmahaReportsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a omaha report",
        "summary": "post_omaha_reports",
        "tags": [
          "omaha_reports"
        ],
        "operationId": "OmahaReportsPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body152"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/omaha_reports/{id}": {
      "get": {
        "description": "Show a omaha report",
        "summary": "get_omaha_reports_id",
        "tags": [
          "omaha_reports"
        ],
        "operationId": "OmahaReportsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a omaha report",
        "summary": "delete_omaha_reports_id",
        "tags": [
          "omaha_reports"
        ],
        "operationId": "OmahaReportsByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{host_id}/omaha_reports/last": {
      "get": {
        "description": "Show the last report for a host",
        "summary": "get_hosts_host_id_omaha_reports_last",
        "tags": [
          "omaha_reports"
        ],
        "operationId": "HostsOmahaReportsLastByHostIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "host_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/operatingsystems": {
      "get": {
        "description": "List all operating systems",
        "summary": "get_operatingsystems",
        "tags": [
          "operatingsystems"
        ],
        "operationId": "OperatingsystemsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "architecture_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of architecture"
          },
          {
            "name": "medium_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of medium"
          },
          {
            "name": "ptable_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of partition table"
          },
          {
            "name": "config_template_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of template"
          },
          {
            "name": "provisioning_template_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of template"
          },
          {
            "name": "os_parameters_attributes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of parameters"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create an operating system",
        "summary": "post_operatingsystems",
        "tags": [
          "operatingsystems"
        ],
        "operationId": "OperatingsystemsPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body121"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/architectures/{architecture_id}/operatingsystems": {
      "get": {
        "description": "List all operating systems for nested architecture",
        "summary": "get_architectures_architecture_id_operatingsystems",
        "tags": [
          "operatingsystems"
        ],
        "operationId": "ArchitecturesOperatingsystemsByArchitectureIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "architecture_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of architecture"
          },
          {
            "name": "medium_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of medium"
          },
          {
            "name": "ptable_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of partition table"
          },
          {
            "name": "config_template_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of template"
          },
          {
            "name": "provisioning_template_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of template"
          },
          {
            "name": "os_parameters_attributes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of parameters"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/media/{medium_id}/operatingsystems": {
      "get": {
        "description": "List all operating systems for nested medium",
        "summary": "get_media_medium_id_operatingsystems",
        "tags": [
          "operatingsystems"
        ],
        "operationId": "MediaOperatingsystemsByMediumIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "architecture_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of architecture"
          },
          {
            "name": "medium_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of medium"
          },
          {
            "name": "ptable_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of partition table"
          },
          {
            "name": "config_template_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of template"
          },
          {
            "name": "provisioning_template_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of template"
          },
          {
            "name": "os_parameters_attributes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of parameters"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/ptables/{ptable_id}/operatingsystems": {
      "get": {
        "description": "List all operating systems for nested partition table",
        "summary": "get_ptables_ptable_id_operatingsystems",
        "tags": [
          "operatingsystems"
        ],
        "operationId": "PtablesOperatingsystemsByPtableIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "medium_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of medium"
          },
          {
            "name": "architecture_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of architecture"
          },
          {
            "name": "ptable_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of partition table"
          },
          {
            "name": "config_template_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of template"
          },
          {
            "name": "provisioning_template_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of template"
          },
          {
            "name": "os_parameters_attributes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of parameters"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/config_templates/{config_template_id}/operatingsystems": {
      "get": {
        "description": "List all operating systems for nested provisioning template",
        "summary": "get_config_templates_config_template_id_operatingsystems",
        "tags": [
          "operatingsystems"
        ],
        "operationId": "ConfigTemplatesOperatingsystemsByConfigTemplateIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ptable_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of partition table"
          },
          {
            "name": "medium_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of medium"
          },
          {
            "name": "architecture_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of architecture"
          },
          {
            "name": "config_template_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of template"
          },
          {
            "name": "provisioning_template_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of template"
          },
          {
            "name": "os_parameters_attributes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of parameters"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/provisioning_templates/{provisioning_template_id}/operatingsystems": {
      "get": {
        "description": "List all operating systems for nested provisioning template",
        "summary": "get_provisioning_templates_provisioning_template_id_operatingsystems",
        "tags": [
          "operatingsystems"
        ],
        "operationId": "ProvisioningTemplatesOperatingsystemsByProvisioningTemplateIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "config_template_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of template"
          },
          {
            "name": "ptable_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of partition table"
          },
          {
            "name": "medium_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of medium"
          },
          {
            "name": "architecture_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of architecture"
          },
          {
            "name": "provisioning_template_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of template"
          },
          {
            "name": "os_parameters_attributes",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of parameters"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/operatingsystems/{id}": {
      "get": {
        "description": "Show an operating system",
        "summary": "get_operatingsystems_id",
        "tags": [
          "operatingsystems"
        ],
        "operationId": "OperatingsystemsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "show_hidden_parameters",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden parameter values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update an operating system",
        "summary": "put_operatingsystems_id",
        "tags": [
          "operatingsystems"
        ],
        "operationId": "OperatingsystemsByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body122"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete an operating system",
        "summary": "delete_operatingsystems_id",
        "tags": [
          "operatingsystems"
        ],
        "operationId": "OperatingsystemsByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/operatingsystems/{id}/bootfiles": {
      "get": {
        "description": "List boot files for an operating system",
        "summary": "get_operatingsystems_id_bootfiles",
        "tags": [
          "operatingsystems"
        ],
        "operationId": "OperatingsystemsBootfilesByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "medium",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "architecture",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/organizations": {
      "get": {
        "description": "List all organizations",
        "summary": "get_organizations",
        "tags": [
          "organizations"
        ],
        "operationId": "OrganizationsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create an organization",
        "summary": "post_organizations",
        "tags": [
          "organizations"
        ],
        "operationId": "OrganizationsPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body128"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/organizations/{id}": {
      "get": {
        "description": "Show an organization",
        "summary": "get_organizations_id",
        "tags": [
          "organizations"
        ],
        "operationId": "OrganizationsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "show_hidden_parameters",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden parameter values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update an organization",
        "summary": "put_organizations_id",
        "tags": [
          "organizations"
        ],
        "operationId": "OrganizationsByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body129"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete an organization",
        "summary": "delete_organizations_id",
        "tags": [
          "organizations"
        ],
        "operationId": "OrganizationsByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/operatingsystems/{operatingsystem_id}/os_default_templates": {
      "get": {
        "description": "List default templates combinations for an operating system",
        "summary": "get_operatingsystems_operatingsystem_id_os_default_templates",
        "tags": [
          "os_default_templates"
        ],
        "operationId": "OperatingsystemsOsDefaultTemplatesByOperatingsystemIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "config_template_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of provisioning template"
          },
          {
            "name": "provisioning_template_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of provisioning template"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a default template combination for an operating system",
        "summary": "post_operatingsystems_operatingsystem_id_os_default_templates",
        "tags": [
          "os_default_templates"
        ],
        "operationId": "OperatingsystemsOsDefaultTemplatesByOperatingsystemIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body18"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/config_templates/{config_template_id}/os_default_templates": {
      "get": {
        "description": "List operating systems where this template is set as a default",
        "summary": "get_config_templates_config_template_id_os_default_templates",
        "tags": [
          "os_default_templates"
        ],
        "operationId": "ConfigTemplatesOsDefaultTemplatesByConfigTemplateIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "config_template_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of provisioning template"
          },
          {
            "name": "provisioning_template_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of provisioning template"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/provisioning_templates/{provisioning_template_id}/os_default_templates": {
      "get": {
        "description": "List operating systems where this template is set as a default",
        "summary": "get_provisioning_templates_provisioning_template_id_os_default_templates",
        "tags": [
          "os_default_templates"
        ],
        "operationId": "ProvisioningTemplatesOsDefaultTemplatesByProvisioningTemplateIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "config_template_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of provisioning template"
          },
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "provisioning_template_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of provisioning template"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/operatingsystems/{operatingsystem_id}/os_default_templates/{id}": {
      "get": {
        "description": "Show a default template combination for an operating system",
        "summary": "get_operatingsystems_operatingsystem_id_os_default_templates_id",
        "tags": [
          "os_default_templates"
        ],
        "operationId": "OperatingsystemsOsDefaultTemplatesByOperatingsystemIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "operatingsystem_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a default template combination for an operating system",
        "summary": "put_operatingsystems_operatingsystem_id_os_default_templates_id",
        "tags": [
          "os_default_templates"
        ],
        "operationId": "OperatingsystemsOsDefaultTemplatesByOperatingsystemIdAndIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operatingsystem_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body18"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a default template combination for an operating system",
        "summary": "delete_operatingsystems_operatingsystem_id_os_default_templates_id",
        "tags": [
          "os_default_templates"
        ],
        "operationId": "OperatingsystemsOsDefaultTemplatesByOperatingsystemIdAndIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "operatingsystem_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/smart_variables/{smart_variable_id}/override_values": {
      "get": {
        "description": "List of override values for a specific smart variable",
        "summary": "get_smart_variables_smart_variable_id_override_values",
        "tags": [
          "override_values"
        ],
        "operationId": "SmartVariablesOverrideValuesBySmartVariableIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "smart_variable_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "smart_class_parameter_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/smart_class_parameters/{smart_class_parameter_id}/override_values": {
      "get": {
        "description": "List of override values for a specific smart class parameter",
        "summary": "get_smart_class_parameters_smart_class_parameter_id_override_values",
        "tags": [
          "override_values"
        ],
        "operationId": "SmartClassParametersOverrideValuesBySmartClassParameterIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "smart_variable_id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "smart_class_parameter_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/smart_variables/{smart_variable_id}/override_values/{id}": {
      "get": {
        "description": "Show an override value for a specific smart variable",
        "summary": "get_smart_variables_smart_variable_id_override_values_id",
        "tags": [
          "override_values"
        ],
        "operationId": "SmartVariablesOverrideValuesBySmartVariableIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "smart_variable_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "smart_class_parameter_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete an override value for a specific smart variable",
        "summary": "delete_smart_variables_smart_variable_id_override_values_id",
        "tags": [
          "override_values"
        ],
        "operationId": "SmartVariablesOverrideValuesBySmartVariableIdAndIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "smart_variable_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body119"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/smart_class_parameters/{smart_class_parameter_id}/override_values/{id}": {
      "get": {
        "description": "Show an override value for a specific smart class parameter",
        "summary": "get_smart_class_parameters_smart_class_parameter_id_override_values_id",
        "tags": [
          "override_values"
        ],
        "operationId": "SmartClassParametersOverrideValuesBySmartClassParameterIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "smart_variable_id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "smart_class_parameter_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete an override value for a specific smart class parameter",
        "summary": "delete_smart_class_parameters_smart_class_parameter_id_override_values_id",
        "tags": [
          "override_values"
        ],
        "operationId": "SmartClassParametersOverrideValuesBySmartClassParameterIdAndIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "smart_class_parameter_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body120"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{host_id}/parameters": {
      "get": {
        "description": "List all parameters for a host",
        "summary": "get_hosts_host_id_parameters",
        "tags": [
          "parameters"
        ],
        "operationId": "HostsParametersByHostIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "domain_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of domain"
          },
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of location"
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of organization"
          },
          {
            "name": "subnet_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of subnet"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a nested parameter for a host",
        "summary": "post_hosts_host_id_parameters",
        "tags": [
          "parameters"
        ],
        "operationId": "HostsParametersByHostIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body72"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete all nested parameters for a host",
        "summary": "delete_hosts_host_id_parameters",
        "tags": [
          "parameters"
        ],
        "operationId": "HostsParametersByHostIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body73"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hostgroups/{hostgroup_id}/parameters": {
      "get": {
        "description": "List all parameters for a host group",
        "summary": "get_hostgroups_hostgroup_id_parameters",
        "tags": [
          "parameters"
        ],
        "operationId": "HostgroupsParametersByHostgroupIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "hostgroup_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "domain_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of domain"
          },
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of location"
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of organization"
          },
          {
            "name": "subnet_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of subnet"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a nested parameter for a host group",
        "summary": "post_hostgroups_hostgroup_id_parameters",
        "tags": [
          "parameters"
        ],
        "operationId": "HostgroupsParametersByHostgroupIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostgroup_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body74"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete all nested parameters for a host group",
        "summary": "delete_hostgroups_hostgroup_id_parameters",
        "tags": [
          "parameters"
        ],
        "operationId": "HostgroupsParametersByHostgroupIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostgroup_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body75"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/domains/{domain_id}/parameters": {
      "get": {
        "description": "List all parameters for a domain",
        "summary": "get_domains_domain_id_parameters",
        "tags": [
          "parameters"
        ],
        "operationId": "DomainsParametersByDomainIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of domain"
          },
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of location"
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of organization"
          },
          {
            "name": "subnet_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of subnet"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a nested parameter for a domain",
        "summary": "post_domains_domain_id_parameters",
        "tags": [
          "parameters"
        ],
        "operationId": "DomainsParametersByDomainIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of domain"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body76"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete all nested parameters for a domain",
        "summary": "delete_domains_domain_id_parameters",
        "tags": [
          "parameters"
        ],
        "operationId": "DomainsParametersByDomainIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of domain"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body77"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/operatingsystems/{operatingsystem_id}/parameters": {
      "get": {
        "description": "List all parameters for an operating system",
        "summary": "get_operatingsystems_operatingsystem_id_parameters",
        "tags": [
          "parameters"
        ],
        "operationId": "OperatingsystemsParametersByOperatingsystemIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "operatingsystem_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of location"
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of organization"
          },
          {
            "name": "subnet_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of subnet"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a nested parameter for an operating system",
        "summary": "post_operatingsystems_operatingsystem_id_parameters",
        "tags": [
          "parameters"
        ],
        "operationId": "OperatingsystemsParametersByOperatingsystemIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body78"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete all nested parameters for an operating system",
        "summary": "delete_operatingsystems_operatingsystem_id_parameters",
        "tags": [
          "parameters"
        ],
        "operationId": "OperatingsystemsParametersByOperatingsystemIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body79"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/locations/{location_id}/parameters": {
      "get": {
        "description": "List all parameters for a location",
        "summary": "get_locations_location_id_parameters",
        "tags": [
          "parameters"
        ],
        "operationId": "LocationsParametersByLocationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of location"
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of organization"
          },
          {
            "name": "subnet_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of subnet"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a nested parameter for a location",
        "summary": "post_locations_location_id_parameters",
        "tags": [
          "parameters"
        ],
        "operationId": "LocationsParametersByLocationIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of location"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body80"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete all nested parameter for a location",
        "summary": "delete_locations_location_id_parameters",
        "tags": [
          "parameters"
        ],
        "operationId": "LocationsParametersByLocationIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of location"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body81"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organization_id}/parameters": {
      "get": {
        "description": "List all parameters for an organization",
        "summary": "get_organizations_organization_id_parameters",
        "tags": [
          "parameters"
        ],
        "operationId": "OrganizationsParametersByOrganizationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "location_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of organization"
          },
          {
            "name": "subnet_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of subnet"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a nested parameter for an organization",
        "summary": "post_organizations_organization_id_parameters",
        "tags": [
          "parameters"
        ],
        "operationId": "OrganizationsParametersByOrganizationIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of organization"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body82"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete all nested parameter for an organization",
        "summary": "delete_organizations_organization_id_parameters",
        "tags": [
          "parameters"
        ],
        "operationId": "OrganizationsParametersByOrganizationIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of organization"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body83"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/subnets/{subnet_id}/parameters": {
      "get": {
        "description": "List all parameters for a subnet",
        "summary": "get_subnets_subnet_id_parameters",
        "tags": [
          "parameters"
        ],
        "operationId": "SubnetsParametersBySubnetIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "subnet_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of subnet"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a nested parameter for a subnet",
        "summary": "post_subnets_subnet_id_parameters",
        "tags": [
          "parameters"
        ],
        "operationId": "SubnetsParametersBySubnetIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subnet_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of subnet"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body84"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete all nested parameters for a subnet",
        "summary": "delete_subnets_subnet_id_parameters",
        "tags": [
          "parameters"
        ],
        "operationId": "SubnetsParametersBySubnetIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subnet_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of subnet"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body85"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{host_id}/parameters/{id}": {
      "get": {
        "description": "Show a nested parameter for a host",
        "summary": "get_hosts_host_id_parameters_id",
        "tags": [
          "parameters"
        ],
        "operationId": "HostsParametersByHostIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of parameter"
          },
          {
            "name": "host_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "domain_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of domain"
          },
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of location"
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of organization"
          },
          {
            "name": "subnet_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of subnet"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a nested parameter for a host",
        "summary": "put_hosts_host_id_parameters_id",
        "tags": [
          "parameters"
        ],
        "operationId": "HostsParametersByHostIdAndIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of parameter"
          },
          {
            "name": "host_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body86"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a nested parameter for a host",
        "summary": "delete_hosts_host_id_parameters_id",
        "tags": [
          "parameters"
        ],
        "operationId": "HostsParametersByHostIdAndIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of parameter"
          },
          {
            "name": "host_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body73"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hostgroups/{hostgroup_id}/parameters/{id}": {
      "get": {
        "description": "Show a nested parameter for a host group",
        "summary": "get_hostgroups_hostgroup_id_parameters_id",
        "tags": [
          "parameters"
        ],
        "operationId": "HostgroupsParametersByHostgroupIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of parameter"
          },
          {
            "name": "hostgroup_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "domain_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of domain"
          },
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of location"
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of organization"
          },
          {
            "name": "subnet_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of subnet"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a nested parameter for a host group",
        "summary": "put_hostgroups_hostgroup_id_parameters_id",
        "tags": [
          "parameters"
        ],
        "operationId": "HostgroupsParametersByHostgroupIdAndIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of parameter"
          },
          {
            "name": "hostgroup_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body88"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a nested parameter for a host group",
        "summary": "delete_hostgroups_hostgroup_id_parameters_id",
        "tags": [
          "parameters"
        ],
        "operationId": "HostgroupsParametersByHostgroupIdAndIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of parameter"
          },
          {
            "name": "hostgroup_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body75"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/domains/{domain_id}/parameters/{id}": {
      "get": {
        "description": "Show a nested parameter for a domain",
        "summary": "get_domains_domain_id_parameters_id",
        "tags": [
          "parameters"
        ],
        "operationId": "DomainsParametersByDomainIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of parameter"
          },
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of domain"
          },
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of location"
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of organization"
          },
          {
            "name": "subnet_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of subnet"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a nested parameter for a domain",
        "summary": "put_domains_domain_id_parameters_id",
        "tags": [
          "parameters"
        ],
        "operationId": "DomainsParametersByDomainIdAndIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of parameter"
          },
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of domain"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body90"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a nested parameter for a domain",
        "summary": "delete_domains_domain_id_parameters_id",
        "tags": [
          "parameters"
        ],
        "operationId": "DomainsParametersByDomainIdAndIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of parameter"
          },
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of domain"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body77"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/operatingsystems/{operatingsystem_id}/parameters/{id}": {
      "get": {
        "description": "Show a nested parameter for an operating system",
        "summary": "get_operatingsystems_operatingsystem_id_parameters_id",
        "tags": [
          "parameters"
        ],
        "operationId": "OperatingsystemsParametersByOperatingsystemIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of parameter"
          },
          {
            "name": "operatingsystem_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of location"
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of organization"
          },
          {
            "name": "subnet_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of subnet"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a nested parameter for an operating system",
        "summary": "put_operatingsystems_operatingsystem_id_parameters_id",
        "tags": [
          "parameters"
        ],
        "operationId": "OperatingsystemsParametersByOperatingsystemIdAndIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of parameter"
          },
          {
            "name": "operatingsystem_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body92"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a nested parameter for an operating system",
        "summary": "delete_operatingsystems_operatingsystem_id_parameters_id",
        "tags": [
          "parameters"
        ],
        "operationId": "OperatingsystemsParametersByOperatingsystemIdAndIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of parameter"
          },
          {
            "name": "operatingsystem_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body79"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/locations/{location_id}/parameters/{id}": {
      "get": {
        "description": "Show a nested parameter for a location",
        "summary": "get_locations_location_id_parameters_id",
        "tags": [
          "parameters"
        ],
        "operationId": "LocationsParametersByLocationIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of parameter"
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of location"
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of organization"
          },
          {
            "name": "subnet_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of subnet"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a nested parameter for a location",
        "summary": "put_locations_location_id_parameters_id",
        "tags": [
          "parameters"
        ],
        "operationId": "LocationsParametersByLocationIdAndIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of parameter"
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of location"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body94"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a nested parameter for a location",
        "summary": "delete_locations_location_id_parameters_id",
        "tags": [
          "parameters"
        ],
        "operationId": "LocationsParametersByLocationIdAndIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of parameter"
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of location"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body81"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organization_id}/parameters/{id}": {
      "get": {
        "description": "Show a nested parameter for an organization",
        "summary": "get_organizations_organization_id_parameters_id",
        "tags": [
          "parameters"
        ],
        "operationId": "OrganizationsParametersByOrganizationIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "location_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of parameter"
          },
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of organization"
          },
          {
            "name": "subnet_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of subnet"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a nested parameter for an organization",
        "summary": "put_organizations_organization_id_parameters_id",
        "tags": [
          "parameters"
        ],
        "operationId": "OrganizationsParametersByOrganizationIdAndIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of parameter"
          },
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of organization"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body96"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a nested parameter for an organization",
        "summary": "delete_organizations_organization_id_parameters_id",
        "tags": [
          "parameters"
        ],
        "operationId": "OrganizationsParametersByOrganizationIdAndIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of parameter"
          },
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of organization"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body83"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/subnets/{subnet_id}/parameters/{id}": {
      "get": {
        "description": "Show a nested parameter for a subnet",
        "summary": "get_subnets_subnet_id_parameters_id",
        "tags": [
          "parameters"
        ],
        "operationId": "SubnetsParametersBySubnetIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of organization"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of location"
          },
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "domain_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of domain"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of parameter"
          },
          {
            "name": "subnet_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of subnet"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a nested parameter for a subnet",
        "summary": "put_subnets_subnet_id_parameters_id",
        "tags": [
          "parameters"
        ],
        "operationId": "SubnetsParametersBySubnetIdAndIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subnet_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of subnet"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of parameter"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body98"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a nested parameter for a subnet",
        "summary": "delete_subnets_subnet_id_parameters_id",
        "tags": [
          "parameters"
        ],
        "operationId": "SubnetsParametersBySubnetIdAndIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "subnet_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of subnet"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of parameter"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body85"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/permissions": {
      "get": {
        "description": "List all permissions",
        "summary": "get_permissions",
        "tags": [
          "permissions"
        ],
        "operationId": "PermissionsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          },
          {
            "name": "resource_type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/permissions/{id}": {
      "get": {
        "description": "Show a permission",
        "summary": "get_permissions_id",
        "tags": [
          "permissions"
        ],
        "operationId": "PermissionsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/permissions/resource_types": {
      "get": {
        "description": "List available resource types",
        "summary": "get_permissions_resource_types",
        "tags": [
          "permissions"
        ],
        "operationId": "PermissionsResourceTypesGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/users/{user_id}/personal_access_tokens": {
      "get": {
        "description": "List all Personal Access Tokens for a user",
        "summary": "get_users_user_id_personal_access_tokens",
        "tags": [
          "personal_access_tokens"
        ],
        "operationId": "UsersPersonalAccessTokensByUserIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a Personal Access Token for a user",
        "summary": "post_users_user_id_personal_access_tokens",
        "tags": [
          "personal_access_tokens"
        ],
        "operationId": "UsersPersonalAccessTokensByUserIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body60"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/users/{user_id}/personal_access_tokens/{id}": {
      "get": {
        "description": "Show a Personal Access Token for a user",
        "summary": "get_users_user_id_personal_access_tokens_id",
        "tags": [
          "personal_access_tokens"
        ],
        "operationId": "UsersPersonalAccessTokensByUserIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Revoke a Personal Access Token for a user",
        "summary": "delete_users_user_id_personal_access_tokens_id",
        "tags": [
          "personal_access_tokens"
        ],
        "operationId": "UsersPersonalAccessTokensByUserIdAndIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/plugins": {
      "get": {
        "description": "List installed plugins",
        "summary": "get_plugins",
        "tags": [
          "plugins"
        ],
        "operationId": "PluginsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/provisioning_templates": {
      "get": {
        "description": "List provisioning templates",
        "summary": "get_provisioning_templates",
        "tags": [
          "provisioning_templates"
        ],
        "operationId": "ProvisioningTemplatesGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a provisioning template",
        "summary": "post_provisioning_templates",
        "tags": [
          "provisioning_templates"
        ],
        "operationId": "ProvisioningTemplatesPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body20"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/operatingsystems/{operatingsystem_id}/provisioning_templates": {
      "get": {
        "description": "List provisioning templates per operating system",
        "summary": "get_operatingsystems_operatingsystem_id_provisioning_templates",
        "tags": [
          "provisioning_templates"
        ],
        "operationId": "OperatingsystemsProvisioningTemplatesByOperatingsystemIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/locations/{location_id}/provisioning_templates": {
      "get": {
        "description": "List provisioning templates per location",
        "summary": "get_locations_location_id_provisioning_templates",
        "tags": [
          "provisioning_templates"
        ],
        "operationId": "LocationsProvisioningTemplatesByLocationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organization_id}/provisioning_templates": {
      "get": {
        "description": "List provisioning templates per organization",
        "summary": "get_organizations_organization_id_provisioning_templates",
        "tags": [
          "provisioning_templates"
        ],
        "operationId": "OrganizationsProvisioningTemplatesByOrganizationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/provisioning_templates/{id}": {
      "get": {
        "description": "Show provisioning template details",
        "summary": "get_provisioning_templates_id",
        "tags": [
          "provisioning_templates"
        ],
        "operationId": "ProvisioningTemplatesByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a provisioning template",
        "summary": "put_provisioning_templates_id",
        "tags": [
          "provisioning_templates"
        ],
        "operationId": "ProvisioningTemplatesByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body21"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a provisioning template",
        "summary": "delete_provisioning_templates_id",
        "tags": [
          "provisioning_templates"
        ],
        "operationId": "ProvisioningTemplatesByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/provisioning_templates/import": {
      "post": {
        "description": "Import a provisioning template",
        "summary": "post_provisioning_templates_import",
        "tags": [
          "provisioning_templates"
        ],
        "operationId": "ProvisioningTemplatesImportPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body22"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/provisioning_templates/revision": {
      "get": {
        "summary": "get_provisioning_templates_revision",
        "tags": [
          "provisioning_templates"
        ],
        "operationId": "ProvisioningTemplatesRevisionGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "template version"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/provisioning_templates/build_pxe_default": {
      "post": {
        "description": "Update the default PXE menu on all configured TFTP servers",
        "summary": "post_provisioning_templates_build_pxe_default",
        "tags": [
          "provisioning_templates"
        ],
        "operationId": "ProvisioningTemplatesBuildPxeDefaultPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/provisioning_templates/{id}/clone": {
      "post": {
        "description": "Clone a provision template",
        "summary": "post_provisioning_templates_id_clone",
        "tags": [
          "provisioning_templates"
        ],
        "operationId": "ProvisioningTemplatesCloneByIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body23"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/provisioning_templates/{id}/export": {
      "get": {
        "description": "Export a provisioning template to ERB",
        "summary": "get_provisioning_templates_id_export",
        "tags": [
          "provisioning_templates"
        ],
        "operationId": "ProvisioningTemplatesExportByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/ptables": {
      "get": {
        "description": "List all partition tables",
        "summary": "get_ptables",
        "tags": [
          "ptables"
        ],
        "operationId": "PtablesGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a partition table",
        "summary": "post_ptables",
        "tags": [
          "ptables"
        ],
        "operationId": "PtablesPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body68"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/operatingsystems/{operatingsystem_id}/ptables": {
      "get": {
        "description": "List all partition tables for an operating system",
        "summary": "get_operatingsystems_operatingsystem_id_ptables",
        "tags": [
          "ptables"
        ],
        "operationId": "OperatingsystemsPtablesByOperatingsystemIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/locations/{location_id}/ptables": {
      "get": {
        "description": "List all partition tables per location",
        "summary": "get_locations_location_id_ptables",
        "tags": [
          "ptables"
        ],
        "operationId": "LocationsPtablesByLocationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organization_id}/ptables": {
      "get": {
        "description": "List all partition tables per organization",
        "summary": "get_organizations_organization_id_ptables",
        "tags": [
          "ptables"
        ],
        "operationId": "OrganizationsPtablesByOrganizationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operatingsystem_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of operating system"
          },
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/ptables/{id}": {
      "get": {
        "description": "Show a partition table",
        "summary": "get_ptables_id",
        "tags": [
          "ptables"
        ],
        "operationId": "PtablesByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a partition table",
        "summary": "put_ptables_id",
        "tags": [
          "ptables"
        ],
        "operationId": "PtablesByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body69"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a partition table",
        "summary": "delete_ptables_id",
        "tags": [
          "ptables"
        ],
        "operationId": "PtablesByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/ptables/import": {
      "post": {
        "description": "Import a provisioning template",
        "summary": "post_ptables_import",
        "tags": [
          "ptables"
        ],
        "operationId": "PtablesImportPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body70"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/ptables/revision": {
      "get": {
        "summary": "get_ptables_revision",
        "tags": [
          "ptables"
        ],
        "operationId": "PtablesRevisionGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "template version"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/ptables/{id}/clone": {
      "post": {
        "description": "Clone a template",
        "summary": "post_ptables_id_clone",
        "tags": [
          "ptables"
        ],
        "operationId": "PtablesCloneByIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body71"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/ptables/{id}/export": {
      "get": {
        "description": "Export a partition template to ERB",
        "summary": "get_ptables_id_export",
        "tags": [
          "ptables"
        ],
        "operationId": "PtablesExportByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{id}/puppetrun": {
      "put": {
        "description": "Force a Puppet agent run on the host",
        "summary": "put_hosts_id_puppetrun",
        "tags": [
          "puppet_hosts"
        ],
        "operationId": "HostsPuppetrunByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/puppetclasses": {
      "get": {
        "description": "List all Puppet classes",
        "summary": "get_puppetclasses",
        "tags": [
          "puppetclasses"
        ],
        "operationId": "PuppetclassesGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "environment_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of environment"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a Puppet class",
        "summary": "post_puppetclasses",
        "tags": [
          "puppetclasses"
        ],
        "operationId": "PuppetclassesPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body30"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{host_id}/puppetclasses": {
      "get": {
        "description": "List all Puppet classes for a host",
        "summary": "get_hosts_host_id_puppetclasses",
        "tags": [
          "puppetclasses"
        ],
        "operationId": "HostsPuppetclassesByHostIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "environment_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of environment"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hostgroups/{hostgroup_id}/puppetclasses": {
      "get": {
        "description": "List all Puppet classes for a host group",
        "summary": "get_hostgroups_hostgroup_id_puppetclasses",
        "tags": [
          "puppetclasses"
        ],
        "operationId": "HostgroupsPuppetclassesByHostgroupIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "hostgroup_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "environment_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of environment"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/environments/{environment_id}/puppetclasses": {
      "get": {
        "description": "List all Puppet classes for an environment",
        "summary": "get_environments_environment_id_puppetclasses",
        "tags": [
          "puppetclasses"
        ],
        "operationId": "EnvironmentsPuppetclassesByEnvironmentIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "environment_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of environment"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/puppetclasses/{id}": {
      "get": {
        "description": "Show a Puppet class",
        "summary": "get_puppetclasses_id",
        "tags": [
          "puppetclasses"
        ],
        "operationId": "PuppetclassesByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of Puppet class"
          },
          {
            "name": "host_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "environment_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of environment"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a Puppet class",
        "summary": "put_puppetclasses_id",
        "tags": [
          "puppetclasses"
        ],
        "operationId": "PuppetclassesByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body31"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a Puppet class",
        "summary": "delete_puppetclasses_id",
        "tags": [
          "puppetclasses"
        ],
        "operationId": "PuppetclassesByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{host_id}/puppetclasses/{id}": {
      "get": {
        "description": "Show a Puppet class for host",
        "summary": "get_hosts_host_id_puppetclasses_id",
        "tags": [
          "puppetclasses"
        ],
        "operationId": "HostsPuppetclassesByHostIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of Puppet class"
          },
          {
            "name": "host_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "environment_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of environment"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hostgroups/{hostgroup_id}/puppetclasses/{id}": {
      "get": {
        "description": "Show a Puppet class for a host group",
        "summary": "get_hostgroups_hostgroup_id_puppetclasses_id",
        "tags": [
          "puppetclasses"
        ],
        "operationId": "HostgroupsPuppetclassesByHostgroupIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of Puppet class"
          },
          {
            "name": "hostgroup_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "environment_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of environment"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/environments/{environment_id}/puppetclasses/{id}": {
      "get": {
        "description": "Show a Puppet class for an environment",
        "summary": "get_environments_environment_id_puppetclasses_id",
        "tags": [
          "puppetclasses"
        ],
        "operationId": "EnvironmentsPuppetclassesByEnvironmentIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "host_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of Puppet class"
          },
          {
            "name": "environment_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of environment"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/realms": {
      "get": {
        "description": "List of realms",
        "summary": "get_realms",
        "tags": [
          "realms"
        ],
        "operationId": "RealmsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "\n<p>The <strong>name</strong> field is used for the name of the realm.</p>\n",
        "summary": "post_realms",
        "tags": [
          "realms"
        ],
        "operationId": "RealmsPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body114"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/realms/{id}": {
      "get": {
        "description": "Show a realm",
        "summary": "get_realms_id",
        "tags": [
          "realms"
        ],
        "operationId": "RealmsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Numerical ID or realm name"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a realm",
        "summary": "put_realms_id",
        "tags": [
          "realms"
        ],
        "operationId": "RealmsByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body115"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a realm",
        "summary": "delete_realms_id",
        "tags": [
          "realms"
        ],
        "operationId": "RealmsByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/recurring_logics": {
      "get": {
        "description": "List recurring logics",
        "summary": "get_recurring_logics",
        "tags": [
          "recurring_logics"
        ],
        "operationId": "RecurringLogicsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/recurring_logics/{id}": {
      "get": {
        "description": "Show recurring logic details",
        "summary": "get_recurring_logics_id",
        "tags": [
          "recurring_logics"
        ],
        "operationId": "RecurringLogicsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the recurring logic"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update recurring logic",
        "summary": "put_recurring_logics_id",
        "tags": [
          "recurring_logics"
        ],
        "operationId": "RecurringLogicsByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the recurring logic"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body148"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/recurring_logics/{id}/cancel": {
      "post": {
        "description": "Cancel recurring logic",
        "summary": "post_recurring_logics_id_cancel",
        "tags": [
          "recurring_logics"
        ],
        "operationId": "RecurringLogicsCancelByIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the recurring logic"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/remote_execution_features": {
      "get": {
        "description": "List remote execution features",
        "summary": "get_remote_execution_features",
        "tags": [
          "remote_execution_features"
        ],
        "operationId": "RemoteExecutionFeaturesGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/remote_execution_features/{id}": {
      "get": {
        "description": "Show remote execution feature",
        "summary": "get_remote_execution_features_id",
        "tags": [
          "remote_execution_features"
        ],
        "operationId": "RemoteExecutionFeaturesByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a job template",
        "summary": "put_remote_execution_features_id",
        "tags": [
          "remote_execution_features"
        ],
        "operationId": "RemoteExecutionFeaturesByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body157"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/report_templates": {
      "get": {
        "description": "List all report templates",
        "summary": "get_report_templates",
        "tags": [
          "report_templates"
        ],
        "operationId": "ReportTemplatesGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a report template",
        "summary": "post_report_templates",
        "tags": [
          "report_templates"
        ],
        "operationId": "ReportTemplatesPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body105"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/locations/{location_id}/report_templates": {
      "get": {
        "description": "List all report templates per location",
        "summary": "get_locations_location_id_report_templates",
        "tags": [
          "report_templates"
        ],
        "operationId": "LocationsReportTemplatesByLocationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organization_id}/report_templates": {
      "get": {
        "description": "List all report templates per organization",
        "summary": "get_organizations_organization_id_report_templates",
        "tags": [
          "report_templates"
        ],
        "operationId": "OrganizationsReportTemplatesByOrganizationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/report_templates/{id}": {
      "get": {
        "description": "Show a report template",
        "summary": "get_report_templates_id",
        "tags": [
          "report_templates"
        ],
        "operationId": "ReportTemplatesByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a report template",
        "summary": "put_report_templates_id",
        "tags": [
          "report_templates"
        ],
        "operationId": "ReportTemplatesByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body106"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a report template",
        "summary": "delete_report_templates_id",
        "tags": [
          "report_templates"
        ],
        "operationId": "ReportTemplatesByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/report_templates/import": {
      "post": {
        "description": "Import a report template",
        "summary": "post_report_templates_import",
        "tags": [
          "report_templates"
        ],
        "operationId": "ReportTemplatesImportPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body107"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/report_templates/revision": {
      "get": {
        "summary": "get_report_templates_revision",
        "tags": [
          "report_templates"
        ],
        "operationId": "ReportTemplatesRevisionGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "template version"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/report_templates/{id}/clone": {
      "post": {
        "description": "Clone a template",
        "summary": "post_report_templates_id_clone",
        "tags": [
          "report_templates"
        ],
        "operationId": "ReportTemplatesCloneByIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body108"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/report_templates/{id}/export": {
      "get": {
        "description": "Export a report template to ERB",
        "summary": "get_report_templates_id_export",
        "tags": [
          "report_templates"
        ],
        "operationId": "ReportTemplatesExportByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/report_templates/{id}/generate": {
      "post": {
        "description": "Generate a report template",
        "summary": "post_report_templates_id_generate",
        "tags": [
          "report_templates"
        ],
        "operationId": "ReportTemplatesGenerateByIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body109"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/reports": {
      "get": {
        "description": "List all reports",
        "summary": "get_reports",
        "tags": [
          "reports"
        ],
        "operationId": "ReportsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a report",
        "summary": "post_reports",
        "tags": [
          "reports"
        ],
        "operationId": "ReportsPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body130"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/reports/{id}": {
      "get": {
        "description": "Show a report",
        "summary": "get_reports_id",
        "tags": [
          "reports"
        ],
        "operationId": "ReportsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a report",
        "summary": "delete_reports_id",
        "tags": [
          "reports"
        ],
        "operationId": "ReportsByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{host_id}/reports/last": {
      "get": {
        "description": "Show the last report for a host",
        "summary": "get_hosts_host_id_reports_last",
        "tags": [
          "reports"
        ],
        "operationId": "HostsReportsLastByHostIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "host_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/roles": {
      "get": {
        "description": "List all roles",
        "summary": "get_roles",
        "tags": [
          "roles"
        ],
        "operationId": "RolesGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a role",
        "summary": "post_roles",
        "tags": [
          "roles"
        ],
        "operationId": "RolesPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body61"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/roles/{id}": {
      "get": {
        "description": "Show a role",
        "summary": "get_roles_id",
        "tags": [
          "roles"
        ],
        "operationId": "RolesByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a role",
        "summary": "put_roles_id",
        "tags": [
          "roles"
        ],
        "operationId": "RolesByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body62"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a role",
        "summary": "delete_roles_id",
        "tags": [
          "roles"
        ],
        "operationId": "RolesByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/roles/{id}/clone": {
      "post": {
        "description": "Clone a role",
        "summary": "post_roles_id_clone",
        "tags": [
          "roles"
        ],
        "operationId": "RolesCloneByIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body62"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/settings": {
      "get": {
        "description": "List all settings",
        "summary": "get_settings",
        "tags": [
          "settings"
        ],
        "operationId": "SettingsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/settings/{id}": {
      "get": {
        "description": "Show a setting",
        "summary": "get_settings_id",
        "tags": [
          "settings"
        ],
        "operationId": "SettingsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a setting",
        "summary": "put_settings_id",
        "tags": [
          "settings"
        ],
        "operationId": "SettingsByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body44"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/smart_class_parameters": {
      "get": {
        "description": "List all smart class parameters",
        "summary": "get_smart_class_parameters",
        "tags": [
          "smart_class_parameters"
        ],
        "operationId": "SmartClassParametersGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "puppetclass_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "environment_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{host_id}/smart_class_parameters": {
      "get": {
        "description": "List of smart class parameters for a specific host",
        "summary": "get_hosts_host_id_smart_class_parameters",
        "tags": [
          "smart_class_parameters"
        ],
        "operationId": "HostsSmartClassParametersByHostIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "puppetclass_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "environment_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hostgroups/{hostgroup_id}/smart_class_parameters": {
      "get": {
        "description": "List of smart class parameters for a specific host group",
        "summary": "get_hostgroups_hostgroup_id_smart_class_parameters",
        "tags": [
          "smart_class_parameters"
        ],
        "operationId": "HostgroupsSmartClassParametersByHostgroupIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host_id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostgroup_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "puppetclass_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "environment_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/puppetclasses/{puppetclass_id}/smart_class_parameters": {
      "get": {
        "description": "List of smart class parameters for a specific Puppet class",
        "summary": "get_puppetclasses_puppetclass_id_smart_class_parameters",
        "tags": [
          "smart_class_parameters"
        ],
        "operationId": "PuppetclassesSmartClassParametersByPuppetclassIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "host_id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "puppetclass_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/environments/{environment_id}/smart_class_parameters": {
      "get": {
        "description": "List of smart class parameters for a specific environment",
        "summary": "get_environments_environment_id_smart_class_parameters",
        "tags": [
          "smart_class_parameters"
        ],
        "operationId": "EnvironmentsSmartClassParametersByEnvironmentIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "puppetclass_id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "host_id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/environments/{environment_id}/puppetclasses/{puppetclass_id}/smart_class_parameters": {
      "get": {
        "description": "List of smart class parameters for a specific environment/Puppet class combination",
        "summary": "get_environments_environment_id_puppetclasses_puppetclass_id_smart_class_parameters",
        "tags": [
          "smart_class_parameters"
        ],
        "operationId": "EnvironmentsPuppetclassesSmartClassParametersByEnvironmentIdAndPuppetclassIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "host_id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "puppetclass_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/smart_class_parameters/{id}": {
      "get": {
        "description": "Show a smart class parameter",
        "summary": "get_smart_class_parameters_id",
        "tags": [
          "smart_class_parameters"
        ],
        "operationId": "SmartClassParametersByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/smart_proxies/{id}/import_puppetclasses": {
      "post": {
        "description": "Import puppet classes from puppet proxy",
        "summary": "post_smart_proxies_id_import_puppetclasses",
        "tags": [
          "smart_proxies"
        ],
        "operationId": "SmartProxiesImportPuppetclassesByIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body24"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/smart_proxies/{smart_proxy_id}/environments/{id}/import_puppetclasses": {
      "post": {
        "description": "Import puppet classes from puppet proxy for an environment",
        "summary": "post_smart_proxies_smart_proxy_id_environments_id_import_puppetclasses",
        "tags": [
          "smart_proxies"
        ],
        "operationId": "SmartProxiesEnvironmentsImportPuppetclassesBySmartProxyIdAndIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "smart_proxy_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body25"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/environments/{environment_id}/smart_proxies/{id}/import_puppetclasses": {
      "post": {
        "description": "Import puppet classes from puppet proxy for an environment",
        "summary": "post_environments_environment_id_smart_proxies_id_import_puppetclasses",
        "tags": [
          "smart_proxies"
        ],
        "operationId": "EnvironmentsSmartProxiesImportPuppetclassesByEnvironmentIdAndIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "environment_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body26"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/smart_proxies": {
      "get": {
        "description": "List all smart proxies",
        "summary": "get_smart_proxies",
        "tags": [
          "smart_proxies"
        ],
        "operationId": "SmartProxiesGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a smart proxy",
        "summary": "post_smart_proxies",
        "tags": [
          "smart_proxies"
        ],
        "operationId": "SmartProxiesPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/smart_proxies/{id}": {
      "get": {
        "description": "Show a smart proxy",
        "summary": "get_smart_proxies_id",
        "tags": [
          "smart_proxies"
        ],
        "operationId": "SmartProxiesByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a smart proxy",
        "summary": "put_smart_proxies_id",
        "tags": [
          "smart_proxies"
        ],
        "operationId": "SmartProxiesByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body65"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a smart proxy",
        "summary": "delete_smart_proxies_id",
        "tags": [
          "smart_proxies"
        ],
        "operationId": "SmartProxiesByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/smart_proxies/{id}/refresh": {
      "put": {
        "description": "Refresh smart proxy features",
        "summary": "put_smart_proxies_id_refresh",
        "tags": [
          "smart_proxies"
        ],
        "operationId": "SmartProxiesRefreshByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/smart_variables": {
      "get": {
        "description": "List all smart variables",
        "summary": "get_smart_variables",
        "tags": [
          "smart_variables"
        ],
        "operationId": "SmartVariablesGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "puppetclass_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hosts/{host_id}/smart_variables": {
      "get": {
        "description": "List of smart variables for a specific host",
        "summary": "get_hosts_host_id_smart_variables",
        "tags": [
          "smart_variables"
        ],
        "operationId": "HostsSmartVariablesByHostIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "puppetclass_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hostgroups/{hostgroup_id}/smart_variables": {
      "get": {
        "description": "List of smart variables for a specific host group",
        "summary": "get_hostgroups_hostgroup_id_smart_variables",
        "tags": [
          "smart_variables"
        ],
        "operationId": "HostgroupsSmartVariablesByHostgroupIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "host_id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostgroup_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "puppetclass_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/puppetclasses/{puppetclass_id}/smart_variables": {
      "get": {
        "description": "List of smart variables for a specific Puppet class",
        "summary": "get_puppetclasses_puppetclass_id_smart_variables",
        "tags": [
          "smart_variables"
        ],
        "operationId": "PuppetclassesSmartVariablesByPuppetclassIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "host_id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "puppetclass_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/smart_variables/{id}": {
      "get": {
        "description": "Show a smart variable",
        "summary": "get_smart_variables_id",
        "tags": [
          "smart_variables"
        ],
        "operationId": "SmartVariablesByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "show_hidden",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a smart variable",
        "summary": "delete_smart_variables_id",
        "tags": [
          "smart_variables"
        ],
        "operationId": "SmartVariablesByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/users/{user_id}/ssh_keys": {
      "get": {
        "description": "List all SSH keys for a user",
        "summary": "get_users_user_id_ssh_keys",
        "tags": [
          "ssh_keys"
        ],
        "operationId": "UsersSshKeysByUserIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Add an SSH key for a user",
        "summary": "post_users_user_id_ssh_keys",
        "tags": [
          "ssh_keys"
        ],
        "operationId": "UsersSshKeysByUserIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body131"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/users/{user_id}/ssh_keys/{id}": {
      "get": {
        "description": "Show an SSH key from a user",
        "summary": "get_users_user_id_ssh_keys_id",
        "tags": [
          "ssh_keys"
        ],
        "operationId": "UsersSshKeysByUserIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete an SSH key for a user",
        "summary": "delete_users_user_id_ssh_keys_id",
        "tags": [
          "ssh_keys"
        ],
        "operationId": "UsersSshKeysByUserIdAndIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/statistics": {
      "get": {
        "description": "Get statistics",
        "summary": "get_statistics",
        "tags": [
          "statistics"
        ],
        "operationId": "StatisticsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/subnets": {
      "get": {
        "description": "List of subnets",
        "summary": "get_subnets",
        "tags": [
          "subnets"
        ],
        "operationId": "SubnetsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of domain"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a subnet",
        "summary": "post_subnets",
        "tags": [
          "subnets"
        ],
        "operationId": "SubnetsPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body42"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/domains/{domain_id}/subnets": {
      "get": {
        "description": "List of subnets for a domain",
        "summary": "get_domains_domain_id_subnets",
        "tags": [
          "subnets"
        ],
        "operationId": "DomainsSubnetsByDomainIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of domain"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/locations/{location_id}/subnets": {
      "get": {
        "description": "List of subnets per location",
        "summary": "get_locations_location_id_subnets",
        "tags": [
          "subnets"
        ],
        "operationId": "LocationsSubnetsByLocationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of domain"
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organization_id}/subnets": {
      "get": {
        "description": "List of subnets per organization",
        "summary": "get_organizations_organization_id_subnets",
        "tags": [
          "subnets"
        ],
        "operationId": "OrganizationsSubnetsByOrganizationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "domain_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of domain"
          },
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/subnets/{id}": {
      "get": {
        "description": "Show a subnet",
        "summary": "get_subnets_id",
        "tags": [
          "subnets"
        ],
        "operationId": "SubnetsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "show_hidden_parameters",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Display hidden parameter values"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a subnet",
        "summary": "put_subnets_id",
        "tags": [
          "subnets"
        ],
        "operationId": "SubnetsByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double",
            "description": "Subnet numeric identifier"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body43"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a subnet",
        "summary": "delete_subnets_id",
        "tags": [
          "subnets"
        ],
        "operationId": "SubnetsByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double",
            "description": "Subnet numeric identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/subnets/{id}/freeip": {
      "get": {
        "description": "Provides an unused IP address in this subnet",
        "summary": "get_subnets_id_freeip",
        "tags": [
          "subnets"
        ],
        "operationId": "SubnetsFreeipByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "mac",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "MAC address to reuse the IP for this host"
          },
          {
            "name": "excluded_ips",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "IP addresses that should be excluded from suggestion"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/users/{user_id}/table_preferences": {
      "get": {
        "description": "List of table preferences for a user",
        "summary": "get_users_user_id_table_preferences",
        "tags": [
          "table_preferences"
        ],
        "operationId": "UsersTablePreferencesByUserIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Creates a table preference for a given table",
        "summary": "post_users_user_id_table_preferences",
        "tags": [
          "table_preferences"
        ],
        "operationId": "UsersTablePreferencesByUserIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body123"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/users/{user_id}/table_preferences/{name}": {
      "get": {
        "description": "Table preference details of a given table",
        "summary": "get_users_user_id_table_preferences_name",
        "tags": [
          "table_preferences"
        ],
        "operationId": "UsersTablePreferencesByUserIdAndNameGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Updates a table preference for a given table",
        "summary": "put_users_user_id_table_preferences_name",
        "tags": [
          "table_preferences"
        ],
        "operationId": "UsersTablePreferencesByUserIdAndNamePut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body123"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a table preference for a given table",
        "summary": "delete_users_user_id_table_preferences_name",
        "tags": [
          "table_preferences"
        ],
        "operationId": "UsersTablePreferencesByUserIdAndNameDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "name of the table"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/orchestration/{id}/tasks": {
      "get": {
        "description": "List all tasks for a given orchestration event",
        "summary": "get_orchestration_id_tasks",
        "tags": [
          "tasks"
        ],
        "operationId": "OrchestrationTasksByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/templates/import": {
      "post": {
        "description": "Initiate Import",
        "summary": "post_templates_import",
        "tags": [
          "template"
        ],
        "operationId": "TemplatesImportPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body163"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/templates/export": {
      "post": {
        "description": "Initiate Export",
        "summary": "post_templates_export",
        "tags": [
          "template"
        ],
        "operationId": "TemplatesExportPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body164"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/config_templates/{config_template_id}/template_combinations": {
      "get": {
        "description": "List template combination",
        "summary": "get_config_templates_config_template_id_template_combinations",
        "tags": [
          "template_combinations"
        ],
        "operationId": "ConfigTemplatesTemplateCombinationsByConfigTemplateIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "config_template_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of config template"
          },
          {
            "name": "provisioning_template_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of config template"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "environment_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of environment"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Add a template combination",
        "summary": "post_config_templates_config_template_id_template_combinations",
        "tags": [
          "template_combinations"
        ],
        "operationId": "ConfigTemplatesTemplateCombinationsByConfigTemplateIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "config_template_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of config template"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body49"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/provisioning_templates/{provisioning_template_id}/template_combinations": {
      "get": {
        "description": "List template combination",
        "summary": "get_provisioning_templates_provisioning_template_id_template_combinations",
        "tags": [
          "template_combinations"
        ],
        "operationId": "ProvisioningTemplatesTemplateCombinationsByProvisioningTemplateIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "config_template_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of config template"
          },
          {
            "name": "provisioning_template_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of config template"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "environment_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of environment"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Add a template combination",
        "summary": "post_provisioning_templates_provisioning_template_id_template_combinations",
        "tags": [
          "template_combinations"
        ],
        "operationId": "ProvisioningTemplatesTemplateCombinationsByProvisioningTemplateIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "provisioning_template_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of config template"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body50"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hostgroups/{hostgroup_id}/template_combinations": {
      "get": {
        "description": "List template combination",
        "summary": "get_hostgroups_hostgroup_id_template_combinations",
        "tags": [
          "template_combinations"
        ],
        "operationId": "HostgroupsTemplateCombinationsByHostgroupIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "provisioning_template_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of config template"
          },
          {
            "name": "config_template_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of config template"
          },
          {
            "name": "hostgroup_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "environment_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of environment"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Add a template combination",
        "summary": "post_hostgroups_hostgroup_id_template_combinations",
        "tags": [
          "template_combinations"
        ],
        "operationId": "HostgroupsTemplateCombinationsByHostgroupIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostgroup_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body51"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/environments/{environment_id}/template_combinations": {
      "get": {
        "description": "List template combination",
        "summary": "get_environments_environment_id_template_combinations",
        "tags": [
          "template_combinations"
        ],
        "operationId": "EnvironmentsTemplateCombinationsByEnvironmentIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "provisioning_template_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of config template"
          },
          {
            "name": "config_template_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of config template"
          },
          {
            "name": "environment_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of environment"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Add a template combination",
        "summary": "post_environments_environment_id_template_combinations",
        "tags": [
          "template_combinations"
        ],
        "operationId": "EnvironmentsTemplateCombinationsByEnvironmentIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "environment_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of environment"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body52"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/template_combinations/{id}": {
      "get": {
        "description": "Show template combination",
        "summary": "get_template_combinations_id",
        "tags": [
          "template_combinations"
        ],
        "operationId": "TemplateCombinationsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "config_template_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of config template"
          },
          {
            "name": "provisioning_template_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of config template"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "environment_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of environment"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a template combination",
        "summary": "delete_template_combinations_id",
        "tags": [
          "template_combinations"
        ],
        "operationId": "TemplateCombinationsByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/config_templates/{config_template_id}/template_combinations/{id}": {
      "get": {
        "description": "Show template combination",
        "summary": "get_config_templates_config_template_id_template_combinations_id",
        "tags": [
          "template_combinations"
        ],
        "operationId": "ConfigTemplatesTemplateCombinationsByConfigTemplateIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "config_template_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of config template"
          },
          {
            "name": "provisioning_template_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of config template"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "environment_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of environment"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update template combination",
        "summary": "put_config_templates_config_template_id_template_combinations_id",
        "tags": [
          "template_combinations"
        ],
        "operationId": "ConfigTemplatesTemplateCombinationsByConfigTemplateIdAndIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "config_template_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of config template"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body53"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/provisioning_templates/{provisioning_template_id}/template_combinations/{id}": {
      "get": {
        "description": "Show template combination",
        "summary": "get_provisioning_templates_provisioning_template_id_template_combinations_id",
        "tags": [
          "template_combinations"
        ],
        "operationId": "ProvisioningTemplatesTemplateCombinationsByProvisioningTemplateIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "config_template_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of config template"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "provisioning_template_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of config template"
          },
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "environment_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of environment"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update template combination",
        "summary": "put_provisioning_templates_provisioning_template_id_template_combinations_id",
        "tags": [
          "template_combinations"
        ],
        "operationId": "ProvisioningTemplatesTemplateCombinationsByProvisioningTemplateIdAndIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "provisioning_template_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of config template"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body54"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/hostgroups/{hostgroup_id}/template_combinations/{id}": {
      "get": {
        "description": "Show template combination",
        "summary": "get_hostgroups_hostgroup_id_template_combinations_id",
        "tags": [
          "template_combinations"
        ],
        "operationId": "HostgroupsTemplateCombinationsByHostgroupIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "provisioning_template_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of config template"
          },
          {
            "name": "config_template_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of config template"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "hostgroup_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "environment_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of environment"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update template combination",
        "summary": "put_hostgroups_hostgroup_id_template_combinations_id",
        "tags": [
          "template_combinations"
        ],
        "operationId": "HostgroupsTemplateCombinationsByHostgroupIdAndIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostgroup_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body51"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/environments/{environment_id}/template_combinations/{id}": {
      "get": {
        "description": "Show template combination",
        "summary": "get_environments_environment_id_template_combinations_id",
        "tags": [
          "template_combinations"
        ],
        "operationId": "EnvironmentsTemplateCombinationsByEnvironmentIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostgroup_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of host group"
          },
          {
            "name": "provisioning_template_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of config template"
          },
          {
            "name": "config_template_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of config template"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of environment"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update template combination",
        "summary": "put_environments_environment_id_template_combinations_id",
        "tags": [
          "template_combinations"
        ],
        "operationId": "EnvironmentsTemplateCombinationsByEnvironmentIdAndIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "environment_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of environment"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body52"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/templates/{template_id}/template_inputs": {
      "get": {
        "description": "List template inputs",
        "summary": "get_templates_template_id_template_inputs",
        "tags": [
          "template_inputs"
        ],
        "operationId": "TemplatesTemplateInputsByTemplateIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a template input",
        "summary": "post_templates_template_id_template_inputs",
        "tags": [
          "template_inputs"
        ],
        "operationId": "TemplatesTemplateInputsByTemplateIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body146"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/templates/{template_id}/template_inputs/{id}": {
      "get": {
        "description": "Show template input details",
        "summary": "get_templates_template_id_template_inputs_id",
        "tags": [
          "template_inputs"
        ],
        "operationId": "TemplatesTemplateInputsByTemplateIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a template input",
        "summary": "delete_templates_template_id_template_inputs_id",
        "tags": [
          "template_inputs"
        ],
        "operationId": "TemplatesTemplateInputsByTemplateIdAndIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a template input",
        "summary": "put_templates_template_id_template_inputs_id",
        "tags": [
          "template_inputs"
        ],
        "operationId": "TemplatesTemplateInputsByTemplateIdAndIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "template_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body147"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/job_invocations/{job_invocation_id}/template_invocations": {
      "get": {
        "description": "List template invocations belonging to job invocation",
        "summary": "get_job_invocations_job_invocation_id_template_invocations",
        "tags": [
          "template_invocations"
        ],
        "operationId": "JobInvocationsTemplateInvocationsByJobInvocationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "job_invocation_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/template_kinds": {
      "get": {
        "description": "List all template kinds",
        "summary": "get_template_kinds",
        "tags": [
          "template_kinds"
        ],
        "operationId": "TemplateKindsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/trends": {
      "get": {
        "description": "List of trends counters",
        "summary": "get_trends",
        "tags": [
          "trends"
        ],
        "operationId": "TrendsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a trend counter",
        "summary": "post_trends",
        "tags": [
          "trends"
        ],
        "operationId": "TrendsPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body100"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/trends/{id}": {
      "get": {
        "description": "Show a trend",
        "summary": "get_trends_id",
        "tags": [
          "trends"
        ],
        "operationId": "TrendsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "trend_id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a trend counter",
        "summary": "delete_trends_id",
        "tags": [
          "trends"
        ],
        "operationId": "TrendsByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/usergroups": {
      "get": {
        "description": "List all user groups",
        "summary": "get_usergroups",
        "tags": [
          "usergroups"
        ],
        "operationId": "UsergroupsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a user group",
        "summary": "post_usergroups",
        "tags": [
          "usergroups"
        ],
        "operationId": "UsergroupsPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body38"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/usergroups/{id}": {
      "get": {
        "description": "Show a user group",
        "summary": "get_usergroups_id",
        "tags": [
          "usergroups"
        ],
        "operationId": "UsergroupsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "\n<p>User groups linked to external groups (LDAP) are automatically synced with\nthese groups on update. Remember this synchronization will remove any LDAP\nusers manually added to the Foreman user group. Only LDAP users in the\nexternal groups will remain. Internal users can be added or removed freely.</p>\n",
        "summary": "put_usergroups_id",
        "tags": [
          "usergroups"
        ],
        "operationId": "UsergroupsByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body39"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a user group",
        "summary": "delete_usergroups_id",
        "tags": [
          "usergroups"
        ],
        "operationId": "UsergroupsByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/users": {
      "get": {
        "description": "List all users",
        "summary": "get_users",
        "tags": [
          "users"
        ],
        "operationId": "UsersGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "auth_source_ldap_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of LDAP authentication source"
          },
          {
            "name": "usergroup_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of user group"
          },
          {
            "name": "role_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of role"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "post": {
        "description": "\n<p>Adds role &#39;Default role&#39; to the user by default</p>\n",
        "summary": "post_users",
        "tags": [
          "users"
        ],
        "operationId": "UsersPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body34"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/auth_source_ldaps/{auth_source_ldap_id}/users": {
      "get": {
        "description": "List all users for LDAP authentication source",
        "summary": "get_auth_source_ldaps_auth_source_ldap_id_users",
        "tags": [
          "users"
        ],
        "operationId": "AuthSourceLdapsUsersByAuthSourceLdapIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "auth_source_ldap_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of LDAP authentication source"
          },
          {
            "name": "usergroup_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of user group"
          },
          {
            "name": "role_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of role"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/auth_source_externals/{auth_source_external_id}/users": {
      "get": {
        "description": "List all users for external authentication source",
        "summary": "get_auth_source_externals_auth_source_external_id_users",
        "tags": [
          "users"
        ],
        "operationId": "AuthSourceExternalsUsersByAuthSourceExternalIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "auth_source_ldap_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of LDAP authentication source"
          },
          {
            "name": "auth_source_external_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "usergroup_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of user group"
          },
          {
            "name": "role_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of role"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/usergroups/{usergroup_id}/users": {
      "get": {
        "description": "List all users for user group",
        "summary": "get_usergroups_usergroup_id_users",
        "tags": [
          "users"
        ],
        "operationId": "UsergroupsUsersByUsergroupIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "auth_source_ldap_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of LDAP authentication source"
          },
          {
            "name": "usergroup_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of user group"
          },
          {
            "name": "role_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "ID of role"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/roles/{role_id}/users": {
      "get": {
        "description": "List all users for role",
        "summary": "get_roles_role_id_users",
        "tags": [
          "users"
        ],
        "operationId": "RolesUsersByRoleIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "usergroup_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of user group"
          },
          {
            "name": "auth_source_ldap_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of LDAP authentication source"
          },
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of role"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/locations/{location_id}/users": {
      "get": {
        "description": "List all users for location",
        "summary": "get_locations_location_id_users",
        "tags": [
          "users"
        ],
        "operationId": "LocationsUsersByLocationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "role_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of role"
          },
          {
            "name": "usergroup_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of user group"
          },
          {
            "name": "auth_source_ldap_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of LDAP authentication source"
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organization_id}/users": {
      "get": {
        "description": "List all users for organization",
        "summary": "get_organizations_organization_id_users",
        "tags": [
          "users"
        ],
        "operationId": "OrganizationsUsersByOrganizationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "role_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of role"
          },
          {
            "name": "usergroup_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of user group"
          },
          {
            "name": "auth_source_ldap_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "ID of LDAP authentication source"
          },
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "filter results"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sort field and order, eg. ‘id DESC’"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "paginate results"
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "number of entries per request"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "description": "Show a user",
        "summary": "get_users_id",
        "tags": [
          "users"
        ],
        "operationId": "UsersByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "put": {
        "description": "\n<p>Adds role &#39;Default role&#39; to the user if it is not already present.\nOnly another admin can change the admin account attribute.</p>\n",
        "summary": "put_users_id",
        "tags": [
          "users"
        ],
        "operationId": "UsersByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/body35"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a user",
        "summary": "delete_users_id",
        "tags": [
          "users"
        ],
        "operationId": "UsersByIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "headers": {}
          }
        }
      }
    }
  },
  "definitions": {
    "include": {
      "title": "include",
      "example": "parameters",
      "type": "string",
      "enum": [
        "parameters",
        "all_parameters"
      ]
    },
    "body": {
      "title": "body",
      "type": "object",
      "properties": {
        "host": {
          "$ref": "#/definitions/Host"
        }
      },
      "required": [
        "host"
      ]
    },
    "Host": {
      "title": "Host",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "environment_id": {
          "description": "required if host is managed and value is not inherited from host group",
          "type": "string"
        },
        "ip": {
          "description": "not required if using a subnet with DHCP proxy",
          "type": "string"
        },
        "mac": {
          "description": "required for managed host that is bare metal, not required if it's a virtual machine",
          "type": "string"
        },
        "architecture_id": {
          "description": "required if host is managed and value is not inherited from host group",
          "type": "number",
          "format": "double"
        },
        "domain_id": {
          "description": "required if host is managed and value is not inherited from host group",
          "type": "number",
          "format": "double"
        },
        "realm_id": {
          "type": "number",
          "format": "double"
        },
        "puppet_proxy_id": {
          "description": "Puppet proxy ID",
          "type": "number",
          "format": "double"
        },
        "puppet_ca_proxy_id": {
          "description": "Puppet CA proxy ID",
          "type": "number",
          "format": "double"
        },
        "puppetclass_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "config_group_ids": {
          "description": "IDs of associated config groups",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operatingsystem_id": {
          "description": "required if host is managed and value is not inherited from host group",
          "type": "string"
        },
        "medium_id": {
          "description": "required if not imaged based provisioning and host is managed and value is not inherited from host group",
          "type": "string"
        },
        "pxe_loader": {
          "$ref": "#/definitions/PxeLoader"
        },
        "ptable_id": {
          "description": "required if host is managed and custom partition has not been defined",
          "type": "number",
          "format": "double"
        },
        "subnet_id": {
          "description": "required if host is managed and value is not inherited from host group",
          "type": "number",
          "format": "double"
        },
        "compute_resource_id": {
          "description": "nil means host is bare metal",
          "type": "number",
          "format": "double"
        },
        "root_pass": {
          "description": "required if host is managed and value is not inherited from host group or default password in settings",
          "type": "string"
        },
        "model_id": {
          "type": "number",
          "format": "double"
        },
        "hostgroup_id": {
          "type": "number",
          "format": "double"
        },
        "owner_id": {
          "type": "number",
          "format": "double"
        },
        "owner_type": {
          "$ref": "#/definitions/OwnerType"
        },
        "image_id": {
          "type": "number",
          "format": "double"
        },
        "host_parameters_attributes": {
          "description": "Host's parameters (array or indexed hash)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "build": {
          "type": "boolean"
        },
        "enabled": {
          "description": "Include this host within Foreman reporting",
          "type": "boolean"
        },
        "provision_method": {
          "$ref": "#/definitions/ProvisionMethod"
        },
        "managed": {
          "description": "True/False flag whether a host is managed or unmanaged. Note: this value also determines whether several parameters are required or not",
          "type": "boolean"
        },
        "progress_report_id": {
          "description": "UUID to track orchestration tasks status, GET /api/orchestration/:UUID/tasks",
          "type": "string"
        },
        "comment": {
          "description": "Additional information about this host",
          "type": "string"
        },
        "capabilities": {
          "type": "string"
        },
        "compute_profile_id": {
          "type": "number",
          "format": "double"
        },
        "interfaces_attributes": {
          "description": "Host's network interfaces.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "compute_attributes": {
          "description": "Additional compute resource specific attributes.",
          "type": "object"
        },
        "ansible_role_ids": {
          "description": "IDs of associated ansible roles",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "PxeLoader": {
      "title": "PxeLoader",
      "description": "DHCP filename option (Grub2/PXELinux by default)",
      "example": "None",
      "type": "string",
      "enum": [
        "None",
        "PXELinux BIOS",
        "PXELinux UEFI",
        "Grub UEFI",
        "Grub2 UEFI",
        "Grub2 UEFI SecureBoot",
        "Grub2 UEFI HTTP",
        "Grub2 UEFI HTTPS",
        "Grub2 UEFI HTTPS SecureBoot",
        "iPXE Embedded",
        "iPXE UEFI HTTP",
        "iPXE Chain BIOS",
        "iPXE Chain UEFI"
      ]
    },
    "OwnerType": {
      "title": "OwnerType",
      "description": "Host's owner type",
      "example": "User",
      "type": "string",
      "enum": [
        "User",
        "Usergroup"
      ]
    },
    "ProvisionMethod": {
      "title": "ProvisionMethod",
      "description": "The method used to provision the host.",
      "example": "build",
      "type": "string",
      "enum": [
        "build",
        "image"
      ]
    },
    "body1": {
      "title": "body1",
      "type": "object",
      "properties": {
        "host": {
          "$ref": "#/definitions/Host1"
        }
      },
      "required": [
        "host"
      ]
    },
    "Host1": {
      "title": "Host1",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "environment_id": {
          "description": "required if host is managed and value is not inherited from host group",
          "type": "string"
        },
        "ip": {
          "description": "not required if using a subnet with DHCP proxy",
          "type": "string"
        },
        "mac": {
          "description": "required for managed host that is bare metal, not required if it's a virtual machine",
          "type": "string"
        },
        "architecture_id": {
          "description": "required if host is managed and value is not inherited from host group",
          "type": "number",
          "format": "double"
        },
        "domain_id": {
          "description": "required if host is managed and value is not inherited from host group",
          "type": "number",
          "format": "double"
        },
        "realm_id": {
          "type": "number",
          "format": "double"
        },
        "puppet_proxy_id": {
          "description": "Puppet proxy ID",
          "type": "number",
          "format": "double"
        },
        "puppet_ca_proxy_id": {
          "description": "Puppet CA proxy ID",
          "type": "number",
          "format": "double"
        },
        "puppetclass_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "config_group_ids": {
          "description": "IDs of associated config groups",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operatingsystem_id": {
          "description": "required if host is managed and value is not inherited from host group",
          "type": "string"
        },
        "medium_id": {
          "description": "required if not imaged based provisioning and host is managed and value is not inherited from host group",
          "type": "string"
        },
        "pxe_loader": {
          "$ref": "#/definitions/PxeLoader"
        },
        "ptable_id": {
          "description": "required if host is managed and custom partition has not been defined",
          "type": "number",
          "format": "double"
        },
        "subnet_id": {
          "description": "required if host is managed and value is not inherited from host group",
          "type": "number",
          "format": "double"
        },
        "compute_resource_id": {
          "description": "nil means host is bare metal",
          "type": "number",
          "format": "double"
        },
        "root_pass": {
          "description": "required if host is managed and value is not inherited from host group or default password in settings",
          "type": "string"
        },
        "model_id": {
          "type": "number",
          "format": "double"
        },
        "hostgroup_id": {
          "type": "number",
          "format": "double"
        },
        "owner_id": {
          "type": "number",
          "format": "double"
        },
        "owner_type": {
          "$ref": "#/definitions/OwnerType"
        },
        "image_id": {
          "type": "number",
          "format": "double"
        },
        "host_parameters_attributes": {
          "description": "Host's parameters (array or indexed hash)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "build": {
          "type": "boolean"
        },
        "enabled": {
          "description": "Include this host within Foreman reporting",
          "type": "boolean"
        },
        "provision_method": {
          "$ref": "#/definitions/ProvisionMethod"
        },
        "managed": {
          "description": "True/False flag whether a host is managed or unmanaged. Note: this value also determines whether several parameters are required or not",
          "type": "boolean"
        },
        "progress_report_id": {
          "description": "UUID to track orchestration tasks status, GET /api/orchestration/:UUID/tasks",
          "type": "string"
        },
        "comment": {
          "description": "Additional information about this host",
          "type": "string"
        },
        "capabilities": {
          "type": "string"
        },
        "compute_profile_id": {
          "type": "number",
          "format": "double"
        },
        "interfaces_attributes": {
          "description": "Host's network interfaces.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "compute_attributes": {
          "description": "Additional compute resource specific attributes.",
          "type": "object"
        },
        "ansible_role_ids": {
          "description": "IDs of associated ansible roles",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "body2": {
      "title": "body2",
      "type": "object",
      "properties": {
        "power_action": {
          "description": "power action, valid actions are (on/start), (off/stop), (soft/reboot), (cycle/reset), (state/status)",
          "type": "string"
        }
      },
      "required": [
        "power_action"
      ]
    },
    "body3": {
      "title": "body3",
      "type": "object",
      "properties": {
        "device": {
          "description": "boot device, valid devices are disk, cdrom, pxe, bios",
          "type": "string"
        }
      },
      "required": [
        "device"
      ]
    },
    "body4": {
      "title": "body4",
      "type": "object",
      "properties": {
        "name": {
          "description": "hostname of the host",
          "type": "string"
        },
        "facts": {
          "description": "hash containing the facts for the host",
          "type": "object"
        },
        "certname": {
          "description": "optional: certname of the host",
          "type": "string"
        },
        "type": {
          "description": "optional: the STI type of host to create",
          "type": "string"
        }
      },
      "required": [
        "name",
        "facts"
      ]
    },
    "body5": {
      "title": "body5",
      "type": "object",
      "properties": {
        "only": {
          "description": "Limit rebuild steps, valid steps are DHCP, DNS, TFTP",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "body6": {
      "title": "body6",
      "type": "object",
      "properties": {
        "host_ids": {
          "description": "IDs of hosts to play roles on",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "host_ids"
      ]
    },
    "body7": {
      "title": "body7",
      "type": "object",
      "properties": {
        "interface": {
          "$ref": "#/definitions/Interface"
        }
      },
      "required": [
        "interface"
      ]
    },
    "Interface": {
      "title": "Interface",
      "type": "object",
      "properties": {
        "mac": {
          "description": "MAC address of interface. Required for managed interfaces on bare metal.",
          "type": "string"
        },
        "ip": {
          "description": "IPv4 address of interface",
          "type": "string"
        },
        "ip6": {
          "description": "IPv6 address of interface",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "name": {
          "description": "Interface's DNS name",
          "type": "string"
        },
        "subnet_id": {
          "description": "Foreman subnet ID of IPv4 interface",
          "type": "number",
          "format": "double"
        },
        "subnet6_id": {
          "description": "Foreman subnet ID of IPv6 interface",
          "type": "number",
          "format": "double"
        },
        "domain_id": {
          "description": "Foreman domain ID of interface. Required for primary interfaces on managed hosts.",
          "type": "number",
          "format": "double"
        },
        "identifier": {
          "description": "Device identifier, e.g. eth0 or eth1.1",
          "type": "string"
        },
        "managed": {
          "description": "Should this interface be managed via DHCP and DNS smart proxy and should it be configured during provisioning?",
          "type": "boolean"
        },
        "primary": {
          "description": "Should this interface be used for constructing the FQDN of the host? Each managed hosts needs to have one primary interface.",
          "type": "boolean"
        },
        "provision": {
          "description": "Should this interface be used for TFTP of PXELinux (or SSH for image-based hosts)? Each managed hosts needs to have one provision interface.",
          "type": "boolean"
        },
        "username": {
          "description": "Only for BMC interfaces.",
          "type": "string"
        },
        "password": {
          "description": "Only for BMC interfaces.",
          "type": "string"
        },
        "provider": {
          "$ref": "#/definitions/Provider"
        },
        "virtual": {
          "description": "Alias or VLAN device",
          "type": "boolean"
        },
        "tag": {
          "description": "VLAN tag, this attribute has precedence over the subnet VLAN ID. Only for virtual interfaces.",
          "type": "string"
        },
        "mtu": {
          "description": "MTU, this attribute has precedence over the subnet MTU.",
          "type": "number",
          "format": "double"
        },
        "attached_to": {
          "description": "Identifier of the interface to which this interface belongs, e.g. eth1. Only for virtual interfaces.",
          "type": "string"
        },
        "mode": {
          "$ref": "#/definitions/Mode"
        },
        "attached_devices": {
          "description": "Identifiers of attached interfaces, e.g. `['eth1', 'eth2']`. For bond interfaces those are the slaves. Only for bond and bridges interfaces.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bond_options": {
          "description": "Space separated options, e.g. miimon=100. Only for bond interfaces.",
          "type": "string"
        },
        "compute_attributes": {
          "description": "Additional compute resource specific attributes for the interface.",
          "type": "object"
        }
      }
    },
    "Type": {
      "title": "Type",
      "description": "Interface type, e.g. bmc. Default is interface",
      "example": "interface",
      "type": "string",
      "enum": [
        "interface",
        "bmc",
        "bond",
        "bridge"
      ]
    },
    "Provider": {
      "title": "Provider",
      "description": "Interface provider, e.g. IPMI. Only for BMC interfaces.",
      "example": "IPMI",
      "type": "string",
      "enum": [
        "IPMI",
        "SSH"
      ]
    },
    "Mode": {
      "title": "Mode",
      "description": "Bond mode of the interface, e.g. balance-rr. Only for bond interfaces.",
      "example": "balance-rr",
      "type": "string",
      "enum": [
        "balance-rr",
        "active-backup",
        "balance-xor",
        "broadcast",
        "802.3ad",
        "balance-tlb",
        "balance-alb"
      ]
    },
    "body9": {
      "title": "body9",
      "type": "object",
      "properties": {
        "hostgroup": {
          "$ref": "#/definitions/Hostgroup"
        }
      },
      "required": [
        "hostgroup"
      ]
    },
    "Hostgroup": {
      "title": "Hostgroup",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the host group",
          "type": "string"
        },
        "description": {
          "description": "Host group description",
          "type": "string"
        },
        "parent_id": {
          "description": "Parent ID of the host group",
          "type": "number",
          "format": "double"
        },
        "environment_id": {
          "description": "Environment ID",
          "type": "number",
          "format": "double"
        },
        "compute_profile_id": {
          "description": "Compute profile ID",
          "type": "number",
          "format": "double"
        },
        "compute_resource_id": {
          "description": "Compute resource ID",
          "type": "number",
          "format": "double"
        },
        "operatingsystem_id": {
          "description": "Operating system ID",
          "type": "number",
          "format": "double"
        },
        "architecture_id": {
          "description": "Architecture ID",
          "type": "number",
          "format": "double"
        },
        "pxe_loader": {
          "$ref": "#/definitions/PxeLoader"
        },
        "medium_id": {
          "description": "Media ID",
          "type": "number",
          "format": "double"
        },
        "ptable_id": {
          "description": "Partition table ID",
          "type": "number",
          "format": "double"
        },
        "subnet_id": {
          "description": "Subnet ID",
          "type": "number",
          "format": "double"
        },
        "domain_id": {
          "description": "Domain ID",
          "type": "number",
          "format": "double"
        },
        "realm_id": {
          "description": "Realm ID",
          "type": "number",
          "format": "double"
        },
        "config_group_ids": {
          "description": "IDs of associated config groups",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "group_parameters_attributes": {
          "description": "Array of parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "puppet_proxy_id": {
          "description": "Puppet proxy ID",
          "type": "number",
          "format": "double"
        },
        "puppet_ca_proxy_id": {
          "description": "Puppet CA proxy ID",
          "type": "number",
          "format": "double"
        },
        "root_pass": {
          "description": "Root password on provisioned hosts",
          "type": "string"
        },
        "ansible_role_ids": {
          "description": "IDs of associated ansible roles",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "body10": {
      "title": "body10",
      "type": "object",
      "properties": {
        "hostgroup": {
          "$ref": "#/definitions/Hostgroup1"
        }
      },
      "required": [
        "hostgroup"
      ]
    },
    "Hostgroup1": {
      "title": "Hostgroup1",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the host group",
          "type": "string"
        },
        "description": {
          "description": "Host group description",
          "type": "string"
        },
        "parent_id": {
          "description": "Parent ID of the host group",
          "type": "number",
          "format": "double"
        },
        "environment_id": {
          "description": "Environment ID",
          "type": "number",
          "format": "double"
        },
        "compute_profile_id": {
          "description": "Compute profile ID",
          "type": "number",
          "format": "double"
        },
        "compute_resource_id": {
          "description": "Compute resource ID",
          "type": "number",
          "format": "double"
        },
        "operatingsystem_id": {
          "description": "Operating system ID",
          "type": "number",
          "format": "double"
        },
        "architecture_id": {
          "description": "Architecture ID",
          "type": "number",
          "format": "double"
        },
        "pxe_loader": {
          "$ref": "#/definitions/PxeLoader"
        },
        "medium_id": {
          "description": "Media ID",
          "type": "number",
          "format": "double"
        },
        "ptable_id": {
          "description": "Partition table ID",
          "type": "number",
          "format": "double"
        },
        "subnet_id": {
          "description": "Subnet ID",
          "type": "number",
          "format": "double"
        },
        "domain_id": {
          "description": "Domain ID",
          "type": "number",
          "format": "double"
        },
        "realm_id": {
          "description": "Realm ID",
          "type": "number",
          "format": "double"
        },
        "config_group_ids": {
          "description": "IDs of associated config groups",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "group_parameters_attributes": {
          "description": "Array of parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "puppet_proxy_id": {
          "description": "Puppet proxy ID",
          "type": "number",
          "format": "double"
        },
        "puppet_ca_proxy_id": {
          "description": "Puppet CA proxy ID",
          "type": "number",
          "format": "double"
        },
        "root_pass": {
          "description": "Root password on provisioned hosts",
          "type": "string"
        },
        "ansible_role_ids": {
          "description": "IDs of associated ansible roles",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "body11": {
      "title": "body11",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "body12": {
      "title": "body12",
      "type": "object",
      "properties": {
        "only": {
          "description": "Limit rebuild steps, valid steps are DHCP, DNS, TFTP",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "children_hosts": {
          "description": "Operate on child hostgroup hosts",
          "type": "boolean"
        }
      }
    },
    "body13": {
      "title": "body13",
      "type": "object",
      "properties": {
        "hostgroup_ids": {
          "description": "IDs of hostgroups to play roles on",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "hostgroup_ids"
      ]
    },
    "body14": {
      "title": "body14",
      "type": "object",
      "properties": {
        "external_usergroup": {
          "$ref": "#/definitions/ExternalUsergroup"
        }
      },
      "required": [
        "external_usergroup"
      ]
    },
    "ExternalUsergroup": {
      "title": "ExternalUsergroup",
      "type": "object",
      "properties": {
        "name": {
          "description": "External user group name",
          "type": "string"
        },
        "auth_source_id": {
          "description": "ID of linked authentication source",
          "type": "number",
          "format": "double"
        }
      },
      "required": [
        "name",
        "auth_source_id"
      ]
    },
    "body15": {
      "title": "body15",
      "type": "object",
      "properties": {
        "external_usergroup": {
          "$ref": "#/definitions/ExternalUsergroup1"
        }
      },
      "required": [
        "external_usergroup"
      ]
    },
    "ExternalUsergroup1": {
      "title": "ExternalUsergroup1",
      "type": "object",
      "properties": {
        "name": {
          "description": "External user group name",
          "type": "string"
        },
        "auth_source_id": {
          "description": "ID of linked authentication source",
          "type": "number",
          "format": "double"
        }
      }
    },
    "body16": {
      "title": "body16",
      "type": "object",
      "properties": {
        "http_proxy": {
          "$ref": "#/definitions/HttpProxy"
        }
      },
      "required": [
        "http_proxy"
      ]
    },
    "HttpProxy": {
      "title": "HttpProxy",
      "type": "object",
      "properties": {
        "name": {
          "description": "The HTTP Proxy name",
          "type": "string"
        },
        "url": {
          "description": "URL of the HTTP Proxy",
          "type": "string"
        },
        "username": {
          "description": "Username used to authenticate with the HTTP Proxy",
          "type": "string"
        },
        "password": {
          "description": "Password used to authenticate with the HTTP Proxy",
          "type": "string"
        }
      },
      "required": [
        "name",
        "url"
      ]
    },
    "body17": {
      "title": "body17",
      "type": "object",
      "properties": {
        "http_proxy": {
          "$ref": "#/definitions/HttpProxy1"
        }
      },
      "required": [
        "http_proxy"
      ]
    },
    "HttpProxy1": {
      "title": "HttpProxy1",
      "type": "object",
      "properties": {
        "name": {
          "description": "The HTTP Proxy name",
          "type": "string"
        },
        "url": {
          "description": "URL of the HTTP Proxy",
          "type": "string"
        },
        "username": {
          "description": "Username used to authenticate with the HTTP Proxy",
          "type": "string"
        },
        "password": {
          "description": "Password used to authenticate with the HTTP Proxy",
          "type": "string"
        }
      }
    },
    "body18": {
      "title": "body18",
      "type": "object",
      "properties": {
        "os_default_template": {
          "$ref": "#/definitions/OsDefaultTemplate"
        }
      },
      "required": [
        "os_default_template"
      ]
    },
    "OsDefaultTemplate": {
      "title": "OsDefaultTemplate",
      "type": "object",
      "properties": {
        "template_kind_id": {
          "type": "number",
          "format": "double"
        },
        "config_template_id": {
          "description": "ID of provisioning template",
          "type": "number",
          "format": "double"
        },
        "provisioning_template_id": {
          "description": "ID of provisioning template",
          "type": "number",
          "format": "double"
        }
      }
    },
    "body20": {
      "title": "body20",
      "type": "object",
      "properties": {
        "provisioning_template": {
          "$ref": "#/definitions/ProvisioningTemplate"
        }
      },
      "required": [
        "provisioning_template"
      ]
    },
    "ProvisioningTemplate": {
      "title": "ProvisioningTemplate",
      "type": "object",
      "properties": {
        "name": {
          "description": "template name",
          "type": "string"
        },
        "template": {
          "type": "string"
        },
        "snippet": {
          "type": "boolean"
        },
        "audit_comment": {
          "type": "string"
        },
        "template_kind_id": {
          "description": "not relevant for snippet",
          "type": "number",
          "format": "double"
        },
        "template_combinations_attributes": {
          "description": "Array of template combinations (hostgroup_id, environment_id)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operatingsystem_ids": {
          "description": "Array of operating system IDs to associate with the template",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locked": {
          "description": "Whether or not the template is locked for editing",
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "template"
      ]
    },
    "body21": {
      "title": "body21",
      "type": "object",
      "properties": {
        "provisioning_template": {
          "$ref": "#/definitions/ProvisioningTemplate1"
        }
      },
      "required": [
        "provisioning_template"
      ]
    },
    "ProvisioningTemplate1": {
      "title": "ProvisioningTemplate1",
      "type": "object",
      "properties": {
        "name": {
          "description": "template name",
          "type": "string"
        },
        "template": {
          "type": "string"
        },
        "snippet": {
          "type": "boolean"
        },
        "audit_comment": {
          "type": "string"
        },
        "template_kind_id": {
          "description": "not relevant for snippet",
          "type": "number",
          "format": "double"
        },
        "template_combinations_attributes": {
          "description": "Array of template combinations (hostgroup_id, environment_id)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operatingsystem_ids": {
          "description": "Array of operating system IDs to associate with the template",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locked": {
          "description": "Whether or not the template is locked for editing",
          "type": "boolean"
        }
      }
    },
    "body22": {
      "title": "body22",
      "type": "object",
      "properties": {
        "provisioning_template": {
          "$ref": "#/definitions/ProvisioningTemplate2"
        },
        "options": {
          "$ref": "#/definitions/Options"
        }
      },
      "required": [
        "provisioning_template"
      ]
    },
    "ProvisioningTemplate2": {
      "title": "ProvisioningTemplate2",
      "type": "object",
      "properties": {
        "name": {
          "description": "template name",
          "type": "string"
        },
        "template": {
          "description": "template contents including metadata",
          "type": "string"
        }
      }
    },
    "Options": {
      "title": "Options",
      "type": "object",
      "properties": {
        "force": {
          "description": "use if you want update locked templates",
          "type": "boolean"
        },
        "associate": {
          "$ref": "#/definitions/Associate"
        },
        "lock": {
          "description": "lock imported templates (false by default)",
          "type": "boolean"
        },
        "default": {
          "description": "makes the template default meaning it will be automatically associated with newly created organizations and locations (false by default)",
          "type": "boolean"
        }
      }
    },
    "Associate": {
      "title": "Associate",
      "description": "determines when the template should associate objects based on metadata, new means only when new template is being created, always means both for new and existing template which is only being updated, never ignores metadata",
      "example": "new",
      "type": "string",
      "enum": [
        "new",
        "always",
        "never"
      ]
    },
    "body23": {
      "title": "body23",
      "type": "object",
      "properties": {
        "provisioning_template": {
          "$ref": "#/definitions/ProvisioningTemplate3"
        }
      },
      "required": [
        "provisioning_template"
      ]
    },
    "ProvisioningTemplate3": {
      "title": "ProvisioningTemplate3",
      "type": "object",
      "properties": {
        "name": {
          "description": "template name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "body24": {
      "title": "body24",
      "type": "object",
      "properties": {
        "smart_proxy_id": {
          "type": "string"
        },
        "environment_id": {
          "type": "string"
        },
        "dryrun": {
          "type": "boolean"
        },
        "except": {
          "description": "Optional comma-delimited string containing either 'new', 'updated', or 'obsolete' that is used to limit the imported Puppet classes",
          "type": "string"
        }
      }
    },
    "body25": {
      "title": "body25",
      "type": "object",
      "properties": {
        "environment_id": {
          "type": "string"
        },
        "dryrun": {
          "type": "boolean"
        },
        "except": {
          "description": "Optional comma-delimited string containing either 'new', 'updated', or 'obsolete' that is used to limit the imported Puppet classes",
          "type": "string"
        }
      }
    },
    "body26": {
      "title": "body26",
      "type": "object",
      "properties": {
        "smart_proxy_id": {
          "type": "string"
        },
        "dryrun": {
          "type": "boolean"
        },
        "except": {
          "description": "Optional comma-delimited string containing either 'new', 'updated', or 'obsolete' that is used to limit the imported Puppet classes",
          "type": "string"
        }
      },
      "required": [
        "smart_proxy_id"
      ]
    },
    "body27": {
      "title": "body27",
      "type": "object",
      "properties": {
        "environment": {
          "$ref": "#/definitions/Environment"
        }
      },
      "required": [
        "environment"
      ]
    },
    "Environment": {
      "title": "Environment",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "body28": {
      "title": "body28",
      "type": "object",
      "properties": {
        "environment": {
          "$ref": "#/definitions/Environment1"
        }
      },
      "required": [
        "environment"
      ]
    },
    "Environment1": {
      "title": "Environment1",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "body29": {
      "title": "body29",
      "type": "object",
      "properties": {
        "puppetclass_id": {
          "description": "ID of Puppet class",
          "type": "string"
        }
      },
      "required": [
        "puppetclass_id"
      ]
    },
    "body30": {
      "title": "body30",
      "type": "object",
      "properties": {
        "puppetclass": {
          "$ref": "#/definitions/Puppetclass"
        }
      },
      "required": [
        "puppetclass"
      ]
    },
    "Puppetclass": {
      "title": "Puppetclass",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "body31": {
      "title": "body31",
      "type": "object",
      "properties": {
        "puppetclass": {
          "$ref": "#/definitions/Puppetclass1"
        }
      },
      "required": [
        "puppetclass"
      ]
    },
    "Puppetclass1": {
      "title": "Puppetclass1",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "body32": {
      "title": "body32",
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/Filter"
        }
      },
      "required": [
        "filter"
      ]
    },
    "Filter": {
      "title": "Filter",
      "type": "object",
      "properties": {
        "role_id": {
          "type": "string"
        },
        "search": {
          "type": "string"
        },
        "override": {
          "type": "boolean"
        },
        "permission_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "organization_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "location_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "role_id"
      ]
    },
    "body33": {
      "title": "body33",
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/Filter1"
        }
      },
      "required": [
        "filter"
      ]
    },
    "Filter1": {
      "title": "Filter1",
      "type": "object",
      "properties": {
        "role_id": {
          "type": "string"
        },
        "search": {
          "type": "string"
        },
        "override": {
          "type": "boolean"
        },
        "permission_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "organization_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "location_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "body34": {
      "title": "body34",
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/User"
        }
      },
      "required": [
        "user"
      ]
    },
    "User": {
      "title": "User",
      "type": "object",
      "properties": {
        "login": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "mail": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "admin": {
          "description": "is an admin account",
          "type": "boolean"
        },
        "password": {
          "description": "Required unless user is in an external authentication source",
          "type": "string"
        },
        "auth_source_id": {
          "type": "number",
          "format": "double"
        },
        "timezone": {
          "$ref": "#/definitions/Timezone"
        },
        "locale": {
          "$ref": "#/definitions/Locale"
        },
        "role_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "login",
        "mail",
        "auth_source_id"
      ]
    },
    "Timezone": {
      "title": "Timezone",
      "description": "User's timezone",
      "example": "International Date Line West",
      "type": "string",
      "enum": [
        "International Date Line West",
        "American Samoa",
        "Midway Island",
        "Hawaii",
        "Alaska",
        "Pacific Time (US & Canada)",
        "Tijuana",
        "Arizona",
        "Chihuahua",
        "Mazatlan",
        "Mountain Time (US & Canada)",
        "Central America",
        "Central Time (US & Canada)",
        "Guadalajara",
        "Mexico City",
        "Monterrey",
        "Saskatchewan",
        "Bogota",
        "Eastern Time (US & Canada)",
        "Indiana (East)",
        "Lima",
        "Quito",
        "Atlantic Time (Canada)",
        "Caracas",
        "Georgetown",
        "La Paz",
        "Puerto Rico",
        "Santiago",
        "Newfoundland",
        "Brasilia",
        "Buenos Aires",
        "Greenland",
        "Montevideo",
        "Mid-Atlantic",
        "Azores",
        "Cape Verde Is.",
        "Edinburgh",
        "Lisbon",
        "London",
        "Monrovia",
        "UTC",
        "Amsterdam",
        "Belgrade",
        "Berlin",
        "Bern",
        "Bratislava",
        "Brussels",
        "Budapest",
        "Casablanca",
        "Copenhagen",
        "Dublin",
        "Ljubljana",
        "Madrid",
        "Paris",
        "Prague",
        "Rome",
        "Sarajevo",
        "Skopje",
        "Stockholm",
        "Vienna",
        "Warsaw",
        "West Central Africa",
        "Zagreb",
        "Zurich",
        "Athens",
        "Bucharest",
        "Cairo",
        "Harare",
        "Helsinki",
        "Jerusalem",
        "Kaliningrad",
        "Kyiv",
        "Pretoria",
        "Riga",
        "Sofia",
        "Tallinn",
        "Vilnius",
        "Baghdad",
        "Istanbul",
        "Kuwait",
        "Minsk",
        "Moscow",
        "Nairobi",
        "Riyadh",
        "St. Petersburg",
        "Tehran",
        "Abu Dhabi",
        "Baku",
        "Muscat",
        "Samara",
        "Tbilisi",
        "Volgograd",
        "Yerevan",
        "Kabul",
        "Ekaterinburg",
        "Islamabad",
        "Karachi",
        "Tashkent",
        "Chennai",
        "Kolkata",
        "Mumbai",
        "New Delhi",
        "Sri Jayawardenepura",
        "Kathmandu",
        "Almaty",
        "Astana",
        "Dhaka",
        "Urumqi",
        "Rangoon",
        "Bangkok",
        "Hanoi",
        "Jakarta",
        "Krasnoyarsk",
        "Novosibirsk",
        "Beijing",
        "Chongqing",
        "Hong Kong",
        "Irkutsk",
        "Kuala Lumpur",
        "Perth",
        "Singapore",
        "Taipei",
        "Ulaanbaatar",
        "Osaka",
        "Sapporo",
        "Seoul",
        "Tokyo",
        "Yakutsk",
        "Adelaide",
        "Darwin",
        "Brisbane",
        "Canberra",
        "Guam",
        "Hobart",
        "Melbourne",
        "Port Moresby",
        "Sydney",
        "Vladivostok",
        "Magadan",
        "New Caledonia",
        "Solomon Is.",
        "Srednekolymsk",
        "Auckland",
        "Fiji",
        "Kamchatka",
        "Marshall Is.",
        "Wellington",
        "Chatham Is.",
        "Nuku'alofa",
        "Samoa",
        "Tokelau Is."
      ]
    },
    "Locale": {
      "title": "Locale",
      "description": "User's preferred locale",
      "example": "de",
      "type": "string",
      "enum": [
        "de",
        "pt_BR",
        "es",
        "sv_SE",
        "fr",
        "nl_NL",
        "ja",
        "gl",
        "pl",
        "en_GB",
        "zh_TW",
        "zh_CN",
        "ko",
        "ru",
        "it",
        "en",
        "ca"
      ]
    },
    "body35": {
      "title": "body35",
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/User1"
        }
      },
      "required": [
        "user"
      ]
    },
    "User1": {
      "title": "User1",
      "type": "object",
      "properties": {
        "login": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "mail": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "admin": {
          "description": "is an admin account",
          "type": "boolean"
        },
        "password": {
          "description": "Required unless user is in an external authentication source",
          "type": "string"
        },
        "auth_source_id": {
          "type": "number",
          "format": "double"
        },
        "timezone": {
          "$ref": "#/definitions/Timezone"
        },
        "locale": {
          "$ref": "#/definitions/Locale"
        },
        "role_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "current_password": {
          "description": "Required when user want to change own password",
          "type": "string"
        }
      }
    },
    "body36": {
      "title": "body36",
      "type": "object",
      "properties": {
        "common_parameter": {
          "$ref": "#/definitions/CommonParameter"
        }
      },
      "required": [
        "common_parameter"
      ]
    },
    "CommonParameter": {
      "title": "CommonParameter",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "hidden_value": {
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "body37": {
      "title": "body37",
      "type": "object",
      "properties": {
        "common_parameter": {
          "$ref": "#/definitions/CommonParameter1"
        }
      },
      "required": [
        "common_parameter"
      ]
    },
    "CommonParameter1": {
      "title": "CommonParameter1",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "hidden_value": {
          "type": "boolean"
        }
      }
    },
    "body38": {
      "title": "body38",
      "type": "object",
      "properties": {
        "usergroup": {
          "$ref": "#/definitions/Usergroup"
        }
      },
      "required": [
        "usergroup"
      ]
    },
    "Usergroup": {
      "title": "Usergroup",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "admin": {
          "description": "is an admin user group",
          "type": "boolean"
        },
        "user_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "usergroup_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "role_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "body39": {
      "title": "body39",
      "type": "object",
      "properties": {
        "usergroup": {
          "$ref": "#/definitions/Usergroup1"
        }
      },
      "required": [
        "usergroup"
      ]
    },
    "Usergroup1": {
      "title": "Usergroup1",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "admin": {
          "description": "is an admin user group",
          "type": "boolean"
        },
        "user_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "usergroup_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "role_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "body40": {
      "title": "body40",
      "type": "object",
      "properties": {
        "architecture": {
          "$ref": "#/definitions/Architecture"
        }
      },
      "required": [
        "architecture"
      ]
    },
    "Architecture": {
      "title": "Architecture",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "operatingsystem_ids": {
          "description": "Operating system IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "body41": {
      "title": "body41",
      "type": "object",
      "properties": {
        "architecture": {
          "$ref": "#/definitions/Architecture1"
        }
      },
      "required": [
        "architecture"
      ]
    },
    "Architecture1": {
      "title": "Architecture1",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "operatingsystem_ids": {
          "description": "Operating system IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "body42": {
      "title": "body42",
      "type": "object",
      "properties": {
        "subnet": {
          "$ref": "#/definitions/Subnet"
        }
      },
      "required": [
        "subnet"
      ]
    },
    "Subnet": {
      "title": "Subnet",
      "type": "object",
      "properties": {
        "name": {
          "description": "Subnet name",
          "type": "string"
        },
        "description": {
          "description": "Subnet description",
          "type": "string"
        },
        "network_type": {
          "$ref": "#/definitions/NetworkType"
        },
        "network": {
          "description": "Subnet network",
          "type": "string"
        },
        "mask": {
          "description": "Netmask for this subnet",
          "type": "string"
        },
        "gateway": {
          "description": "Subnet gateway",
          "type": "string"
        },
        "dns_primary": {
          "description": "Primary DNS for this subnet",
          "type": "string"
        },
        "dns_secondary": {
          "description": "Secondary DNS for this subnet",
          "type": "string"
        },
        "ipam": {
          "description": "IP Address auto suggestion mode for this subnet, valid values are \"DHCP\", \"Internal DB\", \"None\"",
          "type": "string"
        },
        "from": {
          "description": "Starting IP Address for IP auto suggestion",
          "type": "string"
        },
        "to": {
          "description": "Ending IP Address for IP auto suggestion",
          "type": "string"
        },
        "vlanid": {
          "description": "VLAN ID for this subnet",
          "type": "string"
        },
        "mtu": {
          "description": "MTU for this subnet",
          "type": "number",
          "format": "double"
        },
        "domain_ids": {
          "description": "Domains in which this subnet is part",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dhcp_id": {
          "description": "DHCP Proxy ID to use within this subnet",
          "type": "number",
          "format": "double"
        },
        "tftp_id": {
          "description": "TFTP Proxy ID to use within this subnet",
          "type": "number",
          "format": "double"
        },
        "httpboot_id": {
          "description": "HTTPBoot Proxy ID to use within this subnet",
          "type": "number",
          "format": "double"
        },
        "dns_id": {
          "description": "DNS Proxy ID to use within this subnet",
          "type": "number",
          "format": "double"
        },
        "template_id": {
          "description": "Template HTTP(S) Proxy ID to use within this subnet",
          "type": "number",
          "format": "double"
        },
        "boot_mode": {
          "description": "Default boot mode for interfaces assigned to this subnet, valid values are \"Static\", \"DHCP\"",
          "type": "string"
        },
        "subnet_parameters_attributes": {
          "description": "Array of parameters (name, value)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "network",
        "mask"
      ]
    },
    "NetworkType": {
      "title": "NetworkType",
      "description": "Type or protocol, IPv4 or IPv6, defaults to IPv4",
      "example": "IPv4",
      "type": "string",
      "enum": [
        "IPv4",
        "IPv6"
      ]
    },
    "body43": {
      "title": "body43",
      "type": "object",
      "properties": {
        "subnet": {
          "$ref": "#/definitions/Subnet1"
        }
      },
      "required": [
        "subnet"
      ]
    },
    "Subnet1": {
      "title": "Subnet1",
      "type": "object",
      "properties": {
        "name": {
          "description": "Subnet name",
          "type": "string"
        },
        "description": {
          "description": "Subnet description",
          "type": "string"
        },
        "network_type": {
          "$ref": "#/definitions/NetworkType"
        },
        "network": {
          "description": "Subnet network",
          "type": "string"
        },
        "mask": {
          "description": "Netmask for this subnet",
          "type": "string"
        },
        "gateway": {
          "description": "Subnet gateway",
          "type": "string"
        },
        "dns_primary": {
          "description": "Primary DNS for this subnet",
          "type": "string"
        },
        "dns_secondary": {
          "description": "Secondary DNS for this subnet",
          "type": "string"
        },
        "ipam": {
          "description": "IP Address auto suggestion mode for this subnet, valid values are \"DHCP\", \"Internal DB\", \"None\"",
          "type": "string"
        },
        "from": {
          "description": "Starting IP Address for IP auto suggestion",
          "type": "string"
        },
        "to": {
          "description": "Ending IP Address for IP auto suggestion",
          "type": "string"
        },
        "vlanid": {
          "description": "VLAN ID for this subnet",
          "type": "string"
        },
        "mtu": {
          "description": "MTU for this subnet",
          "type": "number",
          "format": "double"
        },
        "domain_ids": {
          "description": "Domains in which this subnet is part",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dhcp_id": {
          "description": "DHCP Proxy ID to use within this subnet",
          "type": "number",
          "format": "double"
        },
        "tftp_id": {
          "description": "TFTP Proxy ID to use within this subnet",
          "type": "number",
          "format": "double"
        },
        "httpboot_id": {
          "description": "HTTPBoot Proxy ID to use within this subnet",
          "type": "number",
          "format": "double"
        },
        "dns_id": {
          "description": "DNS Proxy ID to use within this subnet",
          "type": "number",
          "format": "double"
        },
        "template_id": {
          "description": "Template HTTP(S) Proxy ID to use within this subnet",
          "type": "number",
          "format": "double"
        },
        "boot_mode": {
          "description": "Default boot mode for interfaces assigned to this subnet, valid values are \"Static\", \"DHCP\"",
          "type": "string"
        },
        "subnet_parameters_attributes": {
          "description": "Array of parameters (name, value)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "body44": {
      "title": "body44",
      "type": "object",
      "properties": {
        "setting": {
          "$ref": "#/definitions/Setting"
        }
      },
      "required": [
        "setting"
      ]
    },
    "Setting": {
      "title": "Setting",
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "body45": {
      "title": "body45",
      "type": "object",
      "properties": {
        "model": {
          "$ref": "#/definitions/Model"
        }
      },
      "required": [
        "model"
      ]
    },
    "Model": {
      "title": "Model",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "info": {
          "type": "string"
        },
        "vendor_class": {
          "type": "string"
        },
        "hardware_model": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "body46": {
      "title": "body46",
      "type": "object",
      "properties": {
        "model": {
          "$ref": "#/definitions/Model1"
        }
      },
      "required": [
        "model"
      ]
    },
    "Model1": {
      "title": "Model1",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "info": {
          "type": "string"
        },
        "vendor_class": {
          "type": "string"
        },
        "hardware_model": {
          "type": "string"
        }
      }
    },
    "body47": {
      "title": "body47",
      "type": "object",
      "properties": {
        "medium": {
          "$ref": "#/definitions/Medium"
        }
      },
      "required": [
        "medium"
      ]
    },
    "Medium": {
      "title": "Medium",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of media",
          "type": "string"
        },
        "path": {
          "description": "The path to the medium, can be a URL or a valid NFS server (exclusive of the architecture).\n\nfor example http://mirror.centos.org/centos/$version/os/$arch\nwhere $arch will be substituted for the host's actual OS architecture and $version, $major and $minor\nwill be substituted for the version of the operating system.\n\nSolaris and Debian media may also use $release.",
          "type": "string"
        },
        "os_family": {
          "description": "Operating system family, available values: AIX, Altlinux, Archlinux, Coreos, Debian, Freebsd, Gentoo, Junos, NXOS, Rancheros, Redhat, Solaris, Suse, Windows, Xenserver",
          "type": "string"
        },
        "operatingsystem_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "path"
      ]
    },
    "body48": {
      "title": "body48",
      "type": "object",
      "properties": {
        "medium": {
          "$ref": "#/definitions/Medium1"
        }
      },
      "required": [
        "medium"
      ]
    },
    "Medium1": {
      "title": "Medium1",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of media",
          "type": "string"
        },
        "path": {
          "description": "The path to the medium, can be a URL or a valid NFS server (exclusive of the architecture).\n\nfor example http://mirror.centos.org/centos/$version/os/$arch\nwhere $arch will be substituted for the host's actual OS architecture and $version, $major and $minor\nwill be substituted for the version of the operating system.\n\nSolaris and Debian media may also use $release.",
          "type": "string"
        },
        "os_family": {
          "description": "Operating system family, available values: AIX, Altlinux, Archlinux, Coreos, Debian, Freebsd, Gentoo, Junos, NXOS, Rancheros, Redhat, Solaris, Suse, Windows, Xenserver",
          "type": "string"
        },
        "operatingsystem_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "body49": {
      "title": "body49",
      "type": "object",
      "properties": {
        "provisioning_template_id": {
          "description": "ID of config template",
          "type": "string"
        },
        "hostgroup_id": {
          "description": "ID of host group",
          "type": "string"
        },
        "environment_id": {
          "description": "ID of environment",
          "type": "string"
        },
        "template_combination": {
          "$ref": "#/definitions/TemplateCombination"
        }
      },
      "required": [
        "template_combination"
      ]
    },
    "TemplateCombination": {
      "title": "TemplateCombination",
      "type": "object",
      "properties": {
        "environment_id": {
          "description": "environment id",
          "type": "number",
          "format": "double"
        },
        "hostgroup_id": {
          "description": "host group id",
          "type": "number",
          "format": "double"
        }
      }
    },
    "body50": {
      "title": "body50",
      "type": "object",
      "properties": {
        "config_template_id": {
          "description": "ID of config template",
          "type": "string"
        },
        "hostgroup_id": {
          "description": "ID of host group",
          "type": "string"
        },
        "environment_id": {
          "description": "ID of environment",
          "type": "string"
        },
        "template_combination": {
          "$ref": "#/definitions/TemplateCombination"
        }
      },
      "required": [
        "config_template_id",
        "template_combination"
      ]
    },
    "body51": {
      "title": "body51",
      "type": "object",
      "properties": {
        "config_template_id": {
          "description": "ID of config template",
          "type": "string"
        },
        "provisioning_template_id": {
          "description": "ID of config template",
          "type": "string"
        },
        "environment_id": {
          "description": "ID of environment",
          "type": "string"
        },
        "template_combination": {
          "$ref": "#/definitions/TemplateCombination"
        }
      },
      "required": [
        "config_template_id",
        "provisioning_template_id",
        "template_combination"
      ]
    },
    "body52": {
      "title": "body52",
      "type": "object",
      "properties": {
        "config_template_id": {
          "description": "ID of config template",
          "type": "string"
        },
        "provisioning_template_id": {
          "description": "ID of config template",
          "type": "string"
        },
        "hostgroup_id": {
          "description": "ID of host group",
          "type": "string"
        },
        "template_combination": {
          "$ref": "#/definitions/TemplateCombination"
        }
      },
      "required": [
        "config_template_id",
        "provisioning_template_id",
        "hostgroup_id",
        "template_combination"
      ]
    },
    "body53": {
      "title": "body53",
      "type": "object",
      "properties": {
        "provisioning_template_id": {
          "description": "ID of config template",
          "type": "string"
        },
        "hostgroup_id": {
          "description": "ID of host group",
          "type": "string"
        },
        "environment_id": {
          "description": "ID of environment",
          "type": "string"
        },
        "template_combination": {
          "$ref": "#/definitions/TemplateCombination"
        }
      },
      "required": [
        "provisioning_template_id",
        "template_combination"
      ]
    },
    "body54": {
      "title": "body54",
      "type": "object",
      "properties": {
        "config_template_id": {
          "description": "ID of config template",
          "type": "string"
        },
        "hostgroup_id": {
          "description": "ID of host group",
          "type": "string"
        },
        "environment_id": {
          "description": "ID of environment",
          "type": "string"
        },
        "template_combination": {
          "$ref": "#/definitions/TemplateCombination"
        }
      },
      "required": [
        "template_combination"
      ]
    },
    "body57": {
      "title": "body57",
      "type": "object",
      "properties": {
        "config_template": {
          "$ref": "#/definitions/ConfigTemplate"
        }
      },
      "required": [
        "config_template"
      ]
    },
    "ConfigTemplate": {
      "title": "ConfigTemplate",
      "type": "object",
      "properties": {
        "name": {
          "description": "template name",
          "type": "string"
        },
        "template": {
          "type": "string"
        },
        "snippet": {
          "type": "boolean"
        },
        "audit_comment": {
          "type": "string"
        },
        "template_kind_id": {
          "description": "not relevant for snippet",
          "type": "number",
          "format": "double"
        },
        "template_combinations_attributes": {
          "description": "Array of template combinations (hostgroup_id, environment_id)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operatingsystem_ids": {
          "description": "Array of operating system IDs to associate with the template",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locked": {
          "description": "Whether or not the template is locked for editing",
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "template"
      ]
    },
    "body58": {
      "title": "body58",
      "type": "object",
      "properties": {
        "config_template": {
          "$ref": "#/definitions/ConfigTemplate1"
        }
      },
      "required": [
        "config_template"
      ]
    },
    "ConfigTemplate1": {
      "title": "ConfigTemplate1",
      "type": "object",
      "properties": {
        "name": {
          "description": "template name",
          "type": "string"
        },
        "template": {
          "type": "string"
        },
        "snippet": {
          "type": "boolean"
        },
        "audit_comment": {
          "type": "string"
        },
        "template_kind_id": {
          "description": "not relevant for snippet",
          "type": "number",
          "format": "double"
        },
        "template_combinations_attributes": {
          "description": "Array of template combinations (hostgroup_id, environment_id)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operatingsystem_ids": {
          "description": "Array of operating system IDs to associate with the template",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locked": {
          "description": "Whether or not the template is locked for editing",
          "type": "boolean"
        }
      }
    },
    "body59": {
      "title": "body59",
      "type": "object",
      "properties": {
        "config_template": {
          "$ref": "#/definitions/ConfigTemplate2"
        }
      },
      "required": [
        "config_template"
      ]
    },
    "ConfigTemplate2": {
      "title": "ConfigTemplate2",
      "type": "object",
      "properties": {
        "name": {
          "description": "template name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "body60": {
      "title": "body60",
      "type": "object",
      "properties": {
        "personal_access_token": {
          "$ref": "#/definitions/PersonalAccessToken"
        }
      },
      "required": [
        "personal_access_token"
      ]
    },
    "PersonalAccessToken": {
      "title": "PersonalAccessToken",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "expires_at": {
          "description": "Expiry Date",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "body61": {
      "title": "body61",
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/Role"
        }
      },
      "required": [
        "role"
      ]
    },
    "Role": {
      "title": "Role",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "description": "Role description",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "body62": {
      "title": "body62",
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/Role1"
        }
      },
      "required": [
        "role"
      ]
    },
    "Role1": {
      "title": "Role1",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "description": "Role description",
          "type": "string"
        }
      }
    },
    "body64": {
      "title": "body64",
      "type": "object",
      "properties": {
        "smart_proxy": {
          "$ref": "#/definitions/SmartProxy"
        }
      },
      "required": [
        "smart_proxy"
      ]
    },
    "SmartProxy": {
      "title": "SmartProxy",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "url"
      ]
    },
    "body65": {
      "title": "body65",
      "type": "object",
      "properties": {
        "smart_proxy": {
          "$ref": "#/definitions/SmartProxy1"
        }
      },
      "required": [
        "smart_proxy"
      ]
    },
    "SmartProxy1": {
      "title": "SmartProxy1",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "body66": {
      "title": "body66",
      "type": "object",
      "properties": {
        "config_group": {
          "$ref": "#/definitions/ConfigGroup"
        }
      },
      "required": [
        "config_group"
      ]
    },
    "ConfigGroup": {
      "title": "ConfigGroup",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "puppetclass_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "body67": {
      "title": "body67",
      "type": "object",
      "properties": {
        "config_group": {
          "$ref": "#/definitions/ConfigGroup1"
        }
      },
      "required": [
        "config_group"
      ]
    },
    "ConfigGroup1": {
      "title": "ConfigGroup1",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "puppetclass_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "body68": {
      "title": "body68",
      "type": "object",
      "properties": {
        "ptable": {
          "$ref": "#/definitions/Ptable"
        }
      },
      "required": [
        "ptable"
      ]
    },
    "Ptable": {
      "title": "Ptable",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "layout": {
          "type": "string"
        },
        "snippet": {
          "type": "boolean"
        },
        "audit_comment": {
          "type": "string"
        },
        "locked": {
          "description": "Whether or not the template is locked for editing",
          "type": "boolean"
        },
        "os_family": {
          "type": "string"
        },
        "operatingsystem_ids": {
          "description": "Array of operating system IDs to associate with the partition table",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "host_ids": {
          "description": "Array of host IDs to associate with the partition table",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hostgroup_ids": {
          "description": "Array of host group IDs to associate with the partition table",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "layout"
      ]
    },
    "body69": {
      "title": "body69",
      "type": "object",
      "properties": {
        "ptable": {
          "$ref": "#/definitions/Ptable1"
        }
      },
      "required": [
        "ptable"
      ]
    },
    "Ptable1": {
      "title": "Ptable1",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "layout": {
          "type": "string"
        },
        "snippet": {
          "type": "boolean"
        },
        "audit_comment": {
          "type": "string"
        },
        "locked": {
          "description": "Whether or not the template is locked for editing",
          "type": "boolean"
        },
        "os_family": {
          "type": "string"
        },
        "operatingsystem_ids": {
          "description": "Array of operating system IDs to associate with the partition table",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "host_ids": {
          "description": "Array of host IDs to associate with the partition table",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hostgroup_ids": {
          "description": "Array of host group IDs to associate with the partition table",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "body70": {
      "title": "body70",
      "type": "object",
      "properties": {
        "ptable": {
          "$ref": "#/definitions/Ptable2"
        },
        "options": {
          "$ref": "#/definitions/Options"
        }
      },
      "required": [
        "ptable"
      ]
    },
    "Ptable2": {
      "title": "Ptable2",
      "type": "object",
      "properties": {
        "name": {
          "description": "template name",
          "type": "string"
        },
        "template": {
          "description": "template contents including metadata",
          "type": "string"
        }
      }
    },
    "body71": {
      "title": "body71",
      "type": "object",
      "properties": {
        "ptable": {
          "$ref": "#/definitions/Ptable3"
        }
      },
      "required": [
        "ptable"
      ]
    },
    "Ptable3": {
      "title": "Ptable3",
      "type": "object",
      "properties": {
        "name": {
          "description": "template name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "body72": {
      "title": "body72",
      "type": "object",
      "properties": {
        "hostgroup_id": {
          "description": "ID of host group",
          "type": "string"
        },
        "domain_id": {
          "description": "ID of domain",
          "type": "string"
        },
        "operatingsystem_id": {
          "description": "ID of operating system",
          "type": "string"
        },
        "location_id": {
          "description": "ID of location",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of organization",
          "type": "string"
        },
        "subnet_id": {
          "description": "ID of subnet",
          "type": "string"
        },
        "parameter": {
          "$ref": "#/definitions/Parameter"
        }
      },
      "required": [
        "parameter"
      ]
    },
    "Parameter": {
      "title": "Parameter",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "body73": {
      "title": "body73",
      "type": "object",
      "properties": {
        "hostgroup_id": {
          "description": "ID of host group",
          "type": "string"
        },
        "domain_id": {
          "description": "ID of domain",
          "type": "string"
        },
        "operatingsystem_id": {
          "description": "ID of operating system",
          "type": "string"
        },
        "location_id": {
          "description": "ID of location",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of organization",
          "type": "string"
        },
        "subnet_id": {
          "description": "ID of subnet",
          "type": "string"
        }
      }
    },
    "body74": {
      "title": "body74",
      "type": "object",
      "properties": {
        "host_id": {
          "description": "ID of host",
          "type": "string"
        },
        "domain_id": {
          "description": "ID of domain",
          "type": "string"
        },
        "operatingsystem_id": {
          "description": "ID of operating system",
          "type": "string"
        },
        "location_id": {
          "description": "ID of location",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of organization",
          "type": "string"
        },
        "subnet_id": {
          "description": "ID of subnet",
          "type": "string"
        },
        "parameter": {
          "$ref": "#/definitions/Parameter"
        }
      },
      "required": [
        "host_id",
        "parameter"
      ]
    },
    "body75": {
      "title": "body75",
      "type": "object",
      "properties": {
        "host_id": {
          "description": "ID of host",
          "type": "string"
        },
        "domain_id": {
          "description": "ID of domain",
          "type": "string"
        },
        "operatingsystem_id": {
          "description": "ID of operating system",
          "type": "string"
        },
        "location_id": {
          "description": "ID of location",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of organization",
          "type": "string"
        },
        "subnet_id": {
          "description": "ID of subnet",
          "type": "string"
        }
      },
      "required": [
        "host_id"
      ]
    },
    "body76": {
      "title": "body76",
      "type": "object",
      "properties": {
        "host_id": {
          "description": "ID of host",
          "type": "string"
        },
        "hostgroup_id": {
          "description": "ID of host group",
          "type": "string"
        },
        "operatingsystem_id": {
          "description": "ID of operating system",
          "type": "string"
        },
        "location_id": {
          "description": "ID of location",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of organization",
          "type": "string"
        },
        "subnet_id": {
          "description": "ID of subnet",
          "type": "string"
        },
        "parameter": {
          "$ref": "#/definitions/Parameter"
        }
      },
      "required": [
        "host_id",
        "hostgroup_id",
        "parameter"
      ]
    },
    "body77": {
      "title": "body77",
      "type": "object",
      "properties": {
        "host_id": {
          "description": "ID of host",
          "type": "string"
        },
        "hostgroup_id": {
          "description": "ID of host group",
          "type": "string"
        },
        "operatingsystem_id": {
          "description": "ID of operating system",
          "type": "string"
        },
        "location_id": {
          "description": "ID of location",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of organization",
          "type": "string"
        },
        "subnet_id": {
          "description": "ID of subnet",
          "type": "string"
        }
      },
      "required": [
        "host_id",
        "hostgroup_id"
      ]
    },
    "body78": {
      "title": "body78",
      "type": "object",
      "properties": {
        "host_id": {
          "description": "ID of host",
          "type": "string"
        },
        "hostgroup_id": {
          "description": "ID of host group",
          "type": "string"
        },
        "domain_id": {
          "description": "ID of domain",
          "type": "string"
        },
        "location_id": {
          "description": "ID of location",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of organization",
          "type": "string"
        },
        "subnet_id": {
          "description": "ID of subnet",
          "type": "string"
        },
        "parameter": {
          "$ref": "#/definitions/Parameter"
        }
      },
      "required": [
        "host_id",
        "hostgroup_id",
        "domain_id",
        "parameter"
      ]
    },
    "body79": {
      "title": "body79",
      "type": "object",
      "properties": {
        "host_id": {
          "description": "ID of host",
          "type": "string"
        },
        "hostgroup_id": {
          "description": "ID of host group",
          "type": "string"
        },
        "domain_id": {
          "description": "ID of domain",
          "type": "string"
        },
        "location_id": {
          "description": "ID of location",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of organization",
          "type": "string"
        },
        "subnet_id": {
          "description": "ID of subnet",
          "type": "string"
        }
      },
      "required": [
        "host_id",
        "hostgroup_id",
        "domain_id"
      ]
    },
    "body80": {
      "title": "body80",
      "type": "object",
      "properties": {
        "host_id": {
          "description": "ID of host",
          "type": "string"
        },
        "hostgroup_id": {
          "description": "ID of host group",
          "type": "string"
        },
        "domain_id": {
          "description": "ID of domain",
          "type": "string"
        },
        "operatingsystem_id": {
          "description": "ID of operating system",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of organization",
          "type": "string"
        },
        "subnet_id": {
          "description": "ID of subnet",
          "type": "string"
        },
        "parameter": {
          "$ref": "#/definitions/Parameter"
        }
      },
      "required": [
        "host_id",
        "hostgroup_id",
        "domain_id",
        "operatingsystem_id",
        "parameter"
      ]
    },
    "body81": {
      "title": "body81",
      "type": "object",
      "properties": {
        "host_id": {
          "description": "ID of host",
          "type": "string"
        },
        "hostgroup_id": {
          "description": "ID of host group",
          "type": "string"
        },
        "domain_id": {
          "description": "ID of domain",
          "type": "string"
        },
        "operatingsystem_id": {
          "description": "ID of operating system",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of organization",
          "type": "string"
        },
        "subnet_id": {
          "description": "ID of subnet",
          "type": "string"
        }
      },
      "required": [
        "host_id",
        "hostgroup_id",
        "domain_id",
        "operatingsystem_id"
      ]
    },
    "body82": {
      "title": "body82",
      "type": "object",
      "properties": {
        "host_id": {
          "description": "ID of host",
          "type": "string"
        },
        "hostgroup_id": {
          "description": "ID of host group",
          "type": "string"
        },
        "domain_id": {
          "description": "ID of domain",
          "type": "string"
        },
        "operatingsystem_id": {
          "description": "ID of operating system",
          "type": "string"
        },
        "location_id": {
          "description": "ID of location",
          "type": "string"
        },
        "subnet_id": {
          "description": "ID of subnet",
          "type": "string"
        },
        "parameter": {
          "$ref": "#/definitions/Parameter"
        }
      },
      "required": [
        "host_id",
        "hostgroup_id",
        "domain_id",
        "operatingsystem_id",
        "location_id",
        "parameter"
      ]
    },
    "body83": {
      "title": "body83",
      "type": "object",
      "properties": {
        "host_id": {
          "description": "ID of host",
          "type": "string"
        },
        "hostgroup_id": {
          "description": "ID of host group",
          "type": "string"
        },
        "domain_id": {
          "description": "ID of domain",
          "type": "string"
        },
        "operatingsystem_id": {
          "description": "ID of operating system",
          "type": "string"
        },
        "location_id": {
          "description": "ID of location",
          "type": "string"
        },
        "subnet_id": {
          "description": "ID of subnet",
          "type": "string"
        }
      },
      "required": [
        "host_id",
        "hostgroup_id",
        "domain_id",
        "operatingsystem_id",
        "location_id"
      ]
    },
    "body84": {
      "title": "body84",
      "type": "object",
      "properties": {
        "host_id": {
          "description": "ID of host",
          "type": "string"
        },
        "hostgroup_id": {
          "description": "ID of host group",
          "type": "string"
        },
        "domain_id": {
          "description": "ID of domain",
          "type": "string"
        },
        "operatingsystem_id": {
          "description": "ID of operating system",
          "type": "string"
        },
        "location_id": {
          "description": "ID of location",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of organization",
          "type": "string"
        },
        "parameter": {
          "$ref": "#/definitions/Parameter"
        }
      },
      "required": [
        "host_id",
        "hostgroup_id",
        "domain_id",
        "operatingsystem_id",
        "location_id",
        "organization_id",
        "parameter"
      ]
    },
    "body85": {
      "title": "body85",
      "type": "object",
      "properties": {
        "host_id": {
          "description": "ID of host",
          "type": "string"
        },
        "hostgroup_id": {
          "description": "ID of host group",
          "type": "string"
        },
        "domain_id": {
          "description": "ID of domain",
          "type": "string"
        },
        "operatingsystem_id": {
          "description": "ID of operating system",
          "type": "string"
        },
        "location_id": {
          "description": "ID of location",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of organization",
          "type": "string"
        }
      },
      "required": [
        "host_id",
        "hostgroup_id",
        "domain_id",
        "operatingsystem_id",
        "location_id",
        "organization_id"
      ]
    },
    "body86": {
      "title": "body86",
      "type": "object",
      "properties": {
        "hostgroup_id": {
          "description": "ID of host group",
          "type": "string"
        },
        "domain_id": {
          "description": "ID of domain",
          "type": "string"
        },
        "operatingsystem_id": {
          "description": "ID of operating system",
          "type": "string"
        },
        "location_id": {
          "description": "ID of location",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of organization",
          "type": "string"
        },
        "subnet_id": {
          "description": "ID of subnet",
          "type": "string"
        },
        "parameter": {
          "$ref": "#/definitions/Parameter7"
        }
      },
      "required": [
        "parameter"
      ]
    },
    "Parameter7": {
      "title": "Parameter7",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "body88": {
      "title": "body88",
      "type": "object",
      "properties": {
        "host_id": {
          "description": "ID of host",
          "type": "string"
        },
        "domain_id": {
          "description": "ID of domain",
          "type": "string"
        },
        "operatingsystem_id": {
          "description": "ID of operating system",
          "type": "string"
        },
        "location_id": {
          "description": "ID of location",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of organization",
          "type": "string"
        },
        "subnet_id": {
          "description": "ID of subnet",
          "type": "string"
        },
        "parameter": {
          "$ref": "#/definitions/Parameter7"
        }
      },
      "required": [
        "host_id",
        "parameter"
      ]
    },
    "body90": {
      "title": "body90",
      "type": "object",
      "properties": {
        "host_id": {
          "description": "ID of host",
          "type": "string"
        },
        "hostgroup_id": {
          "description": "ID of host group",
          "type": "string"
        },
        "operatingsystem_id": {
          "description": "ID of operating system",
          "type": "string"
        },
        "location_id": {
          "description": "ID of location",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of organization",
          "type": "string"
        },
        "subnet_id": {
          "description": "ID of subnet",
          "type": "string"
        },
        "parameter": {
          "$ref": "#/definitions/Parameter7"
        }
      },
      "required": [
        "host_id",
        "hostgroup_id",
        "parameter"
      ]
    },
    "body92": {
      "title": "body92",
      "type": "object",
      "properties": {
        "host_id": {
          "description": "ID of host",
          "type": "string"
        },
        "hostgroup_id": {
          "description": "ID of host group",
          "type": "string"
        },
        "domain_id": {
          "description": "ID of domain",
          "type": "string"
        },
        "location_id": {
          "description": "ID of location",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of organization",
          "type": "string"
        },
        "subnet_id": {
          "description": "ID of subnet",
          "type": "string"
        },
        "parameter": {
          "$ref": "#/definitions/Parameter7"
        }
      },
      "required": [
        "host_id",
        "hostgroup_id",
        "domain_id",
        "parameter"
      ]
    },
    "body94": {
      "title": "body94",
      "type": "object",
      "properties": {
        "host_id": {
          "description": "ID of host",
          "type": "string"
        },
        "hostgroup_id": {
          "description": "ID of host group",
          "type": "string"
        },
        "domain_id": {
          "description": "ID of domain",
          "type": "string"
        },
        "operatingsystem_id": {
          "description": "ID of operating system",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of organization",
          "type": "string"
        },
        "subnet_id": {
          "description": "ID of subnet",
          "type": "string"
        },
        "parameter": {
          "$ref": "#/definitions/Parameter7"
        }
      },
      "required": [
        "host_id",
        "hostgroup_id",
        "domain_id",
        "operatingsystem_id",
        "parameter"
      ]
    },
    "body96": {
      "title": "body96",
      "type": "object",
      "properties": {
        "host_id": {
          "description": "ID of host",
          "type": "string"
        },
        "hostgroup_id": {
          "description": "ID of host group",
          "type": "string"
        },
        "domain_id": {
          "description": "ID of domain",
          "type": "string"
        },
        "operatingsystem_id": {
          "description": "ID of operating system",
          "type": "string"
        },
        "location_id": {
          "description": "ID of location",
          "type": "string"
        },
        "subnet_id": {
          "description": "ID of subnet",
          "type": "string"
        },
        "parameter": {
          "$ref": "#/definitions/Parameter7"
        }
      },
      "required": [
        "host_id",
        "hostgroup_id",
        "domain_id",
        "operatingsystem_id",
        "location_id",
        "parameter"
      ]
    },
    "body98": {
      "title": "body98",
      "type": "object",
      "properties": {
        "host_id": {
          "description": "ID of host",
          "type": "string"
        },
        "hostgroup_id": {
          "description": "ID of host group",
          "type": "string"
        },
        "domain_id": {
          "description": "ID of domain",
          "type": "string"
        },
        "operatingsystem_id": {
          "description": "ID of operating system",
          "type": "string"
        },
        "location_id": {
          "description": "ID of location",
          "type": "string"
        },
        "organization_id": {
          "description": "ID of organization",
          "type": "string"
        },
        "parameter": {
          "$ref": "#/definitions/Parameter7"
        }
      },
      "required": [
        "host_id",
        "hostgroup_id",
        "domain_id",
        "operatingsystem_id",
        "location_id",
        "organization_id",
        "parameter"
      ]
    },
    "body100": {
      "title": "body100",
      "type": "object",
      "properties": {
        "trendable_type": {
          "type": "string"
        },
        "fact_name": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "trendable_type"
      ]
    },
    "body101": {
      "title": "body101",
      "type": "object",
      "properties": {
        "image": {
          "$ref": "#/definitions/Image"
        }
      },
      "required": [
        "image"
      ]
    },
    "Image": {
      "title": "Image",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "compute_resource_id": {
          "description": "ID of compute resource",
          "type": "string"
        },
        "architecture_id": {
          "description": "ID of architecture",
          "type": "string"
        },
        "operatingsystem_id": {
          "description": "ID of operating system",
          "type": "string"
        },
        "user_data": {
          "description": "Whether or not the image supports user data",
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "username",
        "uuid"
      ]
    },
    "body102": {
      "title": "body102",
      "type": "object",
      "properties": {
        "image": {
          "$ref": "#/definitions/Image1"
        }
      },
      "required": [
        "image"
      ]
    },
    "Image1": {
      "title": "Image1",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "compute_resource_id": {
          "description": "ID of compute resource",
          "type": "string"
        },
        "architecture_id": {
          "description": "ID of architecture",
          "type": "string"
        },
        "operatingsystem_id": {
          "description": "ID of operating system",
          "type": "string"
        },
        "user_data": {
          "description": "Whether or not the image supports user data",
          "type": "boolean"
        }
      }
    },
    "body103": {
      "title": "body103",
      "type": "object",
      "properties": {
        "compute_profile": {
          "$ref": "#/definitions/ComputeProfile"
        }
      },
      "required": [
        "compute_profile"
      ]
    },
    "ComputeProfile": {
      "title": "ComputeProfile",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "body104": {
      "title": "body104",
      "type": "object",
      "properties": {
        "compute_profile": {
          "$ref": "#/definitions/ComputeProfile1"
        }
      },
      "required": [
        "compute_profile"
      ]
    },
    "ComputeProfile1": {
      "title": "ComputeProfile1",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "body105": {
      "title": "body105",
      "type": "object",
      "properties": {
        "report_template": {
          "$ref": "#/definitions/ReportTemplate"
        }
      },
      "required": [
        "report_template"
      ]
    },
    "ReportTemplate": {
      "title": "ReportTemplate",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "template": {
          "type": "string"
        },
        "snippet": {
          "type": "boolean"
        },
        "audit_comment": {
          "type": "string"
        },
        "locked": {
          "description": "Whether or not the template is locked for editing",
          "type": "boolean"
        },
        "default": {
          "description": "Whether or not the template is added automatically to new organizations and locations",
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "template"
      ]
    },
    "body106": {
      "title": "body106",
      "type": "object",
      "properties": {
        "report_template": {
          "$ref": "#/definitions/ReportTemplate1"
        }
      },
      "required": [
        "report_template"
      ]
    },
    "ReportTemplate1": {
      "title": "ReportTemplate1",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "template": {
          "type": "string"
        },
        "snippet": {
          "type": "boolean"
        },
        "audit_comment": {
          "type": "string"
        },
        "locked": {
          "description": "Whether or not the template is locked for editing",
          "type": "boolean"
        },
        "default": {
          "description": "Whether or not the template is added automatically to new organizations and locations",
          "type": "boolean"
        }
      }
    },
    "body107": {
      "title": "body107",
      "type": "object",
      "properties": {
        "report_template": {
          "$ref": "#/definitions/ReportTemplate2"
        },
        "options": {
          "$ref": "#/definitions/Options"
        }
      },
      "required": [
        "report_template"
      ]
    },
    "ReportTemplate2": {
      "title": "ReportTemplate2",
      "type": "object",
      "properties": {
        "name": {
          "description": "template name",
          "type": "string"
        },
        "template": {
          "description": "template contents including metadata",
          "type": "string"
        }
      }
    },
    "body108": {
      "title": "body108",
      "type": "object",
      "properties": {
        "report_template": {
          "$ref": "#/definitions/ReportTemplate3"
        }
      },
      "required": [
        "report_template"
      ]
    },
    "ReportTemplate3": {
      "title": "ReportTemplate3",
      "type": "object",
      "properties": {
        "name": {
          "description": "template name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "body109": {
      "title": "body109",
      "type": "object",
      "properties": {
        "input_values": {
          "description": "Hash of input values where key is the name of input, value is the value for this input",
          "type": "object"
        }
      }
    },
    "body110": {
      "title": "body110",
      "type": "object",
      "properties": {
        "bookmark": {
          "$ref": "#/definitions/Bookmark"
        }
      },
      "required": [
        "bookmark"
      ]
    },
    "Bookmark": {
      "title": "Bookmark",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "controller": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "public": {
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "controller",
        "query"
      ]
    },
    "body111": {
      "title": "body111",
      "type": "object",
      "properties": {
        "bookmark": {
          "$ref": "#/definitions/Bookmark1"
        }
      },
      "required": [
        "bookmark"
      ]
    },
    "Bookmark1": {
      "title": "Bookmark1",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "controller": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "public": {
          "type": "boolean"
        }
      }
    },
    "body113": {
      "title": "body113",
      "type": "object",
      "properties": {
        "config_report": {
          "$ref": "#/definitions/ConfigReport"
        }
      },
      "required": [
        "config_report"
      ]
    },
    "ConfigReport": {
      "title": "ConfigReport",
      "type": "object",
      "properties": {
        "host": {
          "description": "Hostname or certname",
          "type": "string"
        },
        "reported_at": {
          "description": "UTC time of report",
          "type": "string"
        },
        "status": {
          "description": "Hash of status type totals",
          "type": "object"
        },
        "metrics": {
          "description": "Hash of report metrics, can be just {}",
          "type": "object"
        },
        "logs": {
          "description": "Optional array of log hashes",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "host",
        "reported_at",
        "status",
        "metrics"
      ]
    },
    "body114": {
      "title": "body114",
      "type": "object",
      "properties": {
        "realm": {
          "$ref": "#/definitions/Realm"
        }
      },
      "required": [
        "realm"
      ]
    },
    "Realm": {
      "title": "Realm",
      "type": "object",
      "properties": {
        "name": {
          "description": "The realm name, e.g. EXAMPLE.COM",
          "type": "string"
        },
        "realm_proxy_id": {
          "description": "Proxy ID to use within this realm",
          "type": "number",
          "format": "double"
        },
        "realm_type": {
          "description": "Realm type, e.g. FreeIPA or Active Directory",
          "type": "string"
        }
      },
      "required": [
        "name",
        "realm_proxy_id",
        "realm_type"
      ]
    },
    "body115": {
      "title": "body115",
      "type": "object",
      "properties": {
        "realm": {
          "$ref": "#/definitions/Realm1"
        }
      },
      "required": [
        "realm"
      ]
    },
    "Realm1": {
      "title": "Realm1",
      "type": "object",
      "properties": {
        "name": {
          "description": "The realm name, e.g. EXAMPLE.COM",
          "type": "string"
        },
        "realm_proxy_id": {
          "description": "Proxy ID to use within this realm",
          "type": "number",
          "format": "double"
        },
        "realm_type": {
          "description": "Realm type, e.g. FreeIPA or Active Directory",
          "type": "string"
        }
      }
    },
    "body116": {
      "title": "body116",
      "type": "object",
      "properties": {
        "location": {
          "$ref": "#/definitions/Location"
        }
      },
      "required": [
        "location"
      ]
    },
    "Location": {
      "title": "Location",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "user_ids": {
          "description": "User IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "smart_proxy_ids": {
          "description": "Smart proxy IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "compute_resource_ids": {
          "description": "Compute resource IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "medium_ids": {
          "description": "Medium IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "config_template_ids": {
          "description": "Provisioning template IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ptable_ids": {
          "description": "Partition template IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "provisioning_template_ids": {
          "description": "Provisioning template IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "domain_ids": {
          "description": "Domain IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "realm_ids": {
          "description": "Realm IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hostgroup_ids": {
          "description": "Host group IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "environment_ids": {
          "description": "Environment IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subnet_ids": {
          "description": "Subnet IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parent_id": {
          "description": "Parent ID",
          "type": "number",
          "format": "double"
        },
        "ignore_types": {
          "description": "List of resources types that will be automatically associated",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "body117": {
      "title": "body117",
      "type": "object",
      "properties": {
        "location": {
          "$ref": "#/definitions/Location1"
        }
      },
      "required": [
        "location"
      ]
    },
    "Location1": {
      "title": "Location1",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "user_ids": {
          "description": "User IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "smart_proxy_ids": {
          "description": "Smart proxy IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "compute_resource_ids": {
          "description": "Compute resource IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "medium_ids": {
          "description": "Medium IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "config_template_ids": {
          "description": "Provisioning template IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ptable_ids": {
          "description": "Partition template IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "provisioning_template_ids": {
          "description": "Provisioning template IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "domain_ids": {
          "description": "Domain IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "realm_ids": {
          "description": "Realm IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hostgroup_ids": {
          "description": "Host group IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "environment_ids": {
          "description": "Environment IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subnet_ids": {
          "description": "Subnet IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parent_id": {
          "description": "Parent ID",
          "type": "number",
          "format": "double"
        },
        "ignore_types": {
          "description": "List of resources types that will be automatically associated",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "body118": {
      "title": "body118",
      "type": "object",
      "properties": {
        "id": {
          "description": "Autosign entry name",
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "body119": {
      "title": "body119",
      "type": "object",
      "properties": {
        "smart_class_parameter_id": {
          "type": "string"
        }
      }
    },
    "body120": {
      "title": "body120",
      "type": "object",
      "properties": {
        "smart_variable_id": {
          "type": "string"
        }
      },
      "required": [
        "smart_variable_id"
      ]
    },
    "body121": {
      "title": "body121",
      "type": "object",
      "properties": {
        "operatingsystem": {
          "$ref": "#/definitions/Operatingsystem"
        }
      },
      "required": [
        "operatingsystem"
      ]
    },
    "Operatingsystem": {
      "title": "Operatingsystem",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "major": {
          "type": "string"
        },
        "minor": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "family": {
          "type": "string"
        },
        "release_name": {
          "type": "string"
        },
        "os_parameters_attributes": {
          "description": "Array of parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "password_hash": {
          "description": "Root password hash function to use, one of MD5, SHA256, SHA512, Base64",
          "type": "string"
        },
        "architecture_ids": {
          "description": "IDs of associated architectures",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "config_template_ids": {
          "description": "IDs of associated provisioning templates",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "provisioning_template_ids": {
          "description": "IDs of associated provisioning templates",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "medium_ids": {
          "description": "IDs of associated media",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ptable_ids": {
          "description": "IDs of associated partition tables",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "major"
      ]
    },
    "body122": {
      "title": "body122",
      "type": "object",
      "properties": {
        "operatingsystem": {
          "$ref": "#/definitions/Operatingsystem1"
        }
      },
      "required": [
        "operatingsystem"
      ]
    },
    "Operatingsystem1": {
      "title": "Operatingsystem1",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "major": {
          "type": "string"
        },
        "minor": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "family": {
          "type": "string"
        },
        "release_name": {
          "type": "string"
        },
        "os_parameters_attributes": {
          "description": "Array of parameters",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "password_hash": {
          "description": "Root password hash function to use, one of MD5, SHA256, SHA512, Base64",
          "type": "string"
        },
        "architecture_ids": {
          "description": "IDs of associated architectures",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "config_template_ids": {
          "description": "IDs of associated provisioning templates",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "provisioning_template_ids": {
          "description": "IDs of associated provisioning templates",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "medium_ids": {
          "description": "IDs of associated media",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ptable_ids": {
          "description": "IDs of associated partition tables",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "body123": {
      "title": "body123",
      "type": "object",
      "properties": {
        "table_preferences": {
          "$ref": "#/definitions/TablePreferences"
        }
      },
      "required": [
        "table_preferences"
      ]
    },
    "TablePreferences": {
      "title": "TablePreferences",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the table",
          "type": "string"
        },
        "columns": {
          "description": "List of user selected columns",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "body125": {
      "title": "body125",
      "type": "object",
      "properties": {
        "domain": {
          "$ref": "#/definitions/Domain"
        }
      },
      "required": [
        "domain"
      ]
    },
    "Domain": {
      "title": "Domain",
      "type": "object",
      "properties": {
        "name": {
          "description": "The full DNS domain name",
          "type": "string"
        },
        "fullname": {
          "description": "Description of the domain",
          "type": "string"
        },
        "dns_id": {
          "description": "DNS proxy ID to use within this domain",
          "type": "number",
          "format": "double"
        },
        "domain_parameters_attributes": {
          "description": "Array of parameters (name, value)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "body126": {
      "title": "body126",
      "type": "object",
      "properties": {
        "domain": {
          "$ref": "#/definitions/Domain1"
        }
      },
      "required": [
        "domain"
      ]
    },
    "Domain1": {
      "title": "Domain1",
      "type": "object",
      "properties": {
        "name": {
          "description": "The full DNS domain name",
          "type": "string"
        },
        "fullname": {
          "description": "Description of the domain",
          "type": "string"
        },
        "dns_id": {
          "description": "DNS proxy ID to use within this domain",
          "type": "number",
          "format": "double"
        },
        "domain_parameters_attributes": {
          "description": "Array of parameters (name, value)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "body127": {
      "title": "body127",
      "type": "object",
      "properties": {
        "auth_source_external": {
          "$ref": "#/definitions/AuthSourceExternal"
        }
      },
      "required": [
        "auth_source_external"
      ]
    },
    "AuthSourceExternal": {
      "title": "AuthSourceExternal",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "body128": {
      "title": "body128",
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/Organization"
        }
      },
      "required": [
        "organization"
      ]
    },
    "Organization": {
      "title": "Organization",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "user_ids": {
          "description": "User IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "smart_proxy_ids": {
          "description": "Smart proxy IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "compute_resource_ids": {
          "description": "Compute resource IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "medium_ids": {
          "description": "Medium IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "config_template_ids": {
          "description": "Provisioning template IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ptable_ids": {
          "description": "Partition template IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "provisioning_template_ids": {
          "description": "Provisioning template IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "domain_ids": {
          "description": "Domain IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "realm_ids": {
          "description": "Realm IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hostgroup_ids": {
          "description": "Host group IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "environment_ids": {
          "description": "Environment IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subnet_ids": {
          "description": "Subnet IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parent_id": {
          "description": "Parent ID",
          "type": "number",
          "format": "double"
        },
        "ignore_types": {
          "description": "List of resources types that will be automatically associated",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "body129": {
      "title": "body129",
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/Organization1"
        }
      },
      "required": [
        "organization"
      ]
    },
    "Organization1": {
      "title": "Organization1",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "user_ids": {
          "description": "User IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "smart_proxy_ids": {
          "description": "Smart proxy IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "compute_resource_ids": {
          "description": "Compute resource IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "medium_ids": {
          "description": "Medium IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "config_template_ids": {
          "description": "Provisioning template IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ptable_ids": {
          "description": "Partition template IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "provisioning_template_ids": {
          "description": "Provisioning template IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "domain_ids": {
          "description": "Domain IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "realm_ids": {
          "description": "Realm IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hostgroup_ids": {
          "description": "Host group IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "environment_ids": {
          "description": "Environment IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subnet_ids": {
          "description": "Subnet IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parent_id": {
          "description": "Parent ID",
          "type": "number",
          "format": "double"
        },
        "ignore_types": {
          "description": "List of resources types that will be automatically associated",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "body130": {
      "title": "body130",
      "type": "object",
      "properties": {
        "report": {
          "$ref": "#/definitions/Report"
        }
      },
      "required": [
        "report"
      ]
    },
    "Report": {
      "title": "Report",
      "type": "object",
      "properties": {
        "host": {
          "description": "Hostname or certname",
          "type": "string"
        },
        "reported_at": {
          "description": "UTC time of report",
          "type": "string"
        },
        "status": {
          "description": "Hash of status type totals",
          "type": "object"
        },
        "metrics": {
          "description": "Hash of report metrics, can be just {}",
          "type": "object"
        },
        "logs": {
          "description": "Optional array of log hashes",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "host",
        "reported_at",
        "status",
        "metrics"
      ]
    },
    "body131": {
      "title": "body131",
      "type": "object",
      "properties": {
        "ssh_key": {
          "$ref": "#/definitions/SshKey"
        }
      },
      "required": [
        "ssh_key"
      ]
    },
    "SshKey": {
      "title": "SshKey",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "key": {
          "description": "Public SSH key",
          "type": "string"
        }
      },
      "required": [
        "name",
        "key"
      ]
    },
    "body132": {
      "title": "body132",
      "type": "object",
      "properties": {
        "auth_source_ldap": {
          "$ref": "#/definitions/AuthSourceLdap"
        }
      },
      "required": [
        "auth_source_ldap"
      ]
    },
    "AuthSourceLdap": {
      "title": "AuthSourceLdap",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "port": {
          "description": "defaults to 389",
          "type": "number",
          "format": "double"
        },
        "account": {
          "type": "string"
        },
        "base_dn": {
          "type": "string"
        },
        "account_password": {
          "description": "required if onthefly_register is true",
          "type": "string"
        },
        "attr_login": {
          "description": "required if onthefly_register is true",
          "type": "string"
        },
        "attr_firstname": {
          "description": "required if onthefly_register is true",
          "type": "string"
        },
        "attr_lastname": {
          "description": "required if onthefly_register is true",
          "type": "string"
        },
        "attr_mail": {
          "description": "required if onthefly_register is true",
          "type": "string"
        },
        "attr_photo": {
          "type": "string"
        },
        "onthefly_register": {
          "type": "boolean"
        },
        "usergroup_sync": {
          "description": "sync external user groups on login",
          "type": "boolean"
        },
        "tls": {
          "type": "boolean"
        },
        "groups_base": {
          "description": "groups base DN",
          "type": "string"
        },
        "use_netgroups": {
          "description": "use NIS netgroups instead of posix groups, applicable only when server_type is posix or free_ipa",
          "type": "boolean"
        },
        "server_type": {
          "$ref": "#/definitions/ServerType"
        },
        "ldap_filter": {
          "description": "LDAP filter",
          "type": "string"
        }
      },
      "required": [
        "name",
        "host"
      ]
    },
    "ServerType": {
      "title": "ServerType",
      "description": "type of the LDAP server",
      "example": "free_ipa",
      "type": "string",
      "enum": [
        "free_ipa",
        "active_directory",
        "posix"
      ]
    },
    "body133": {
      "title": "body133",
      "type": "object",
      "properties": {
        "auth_source_ldap": {
          "$ref": "#/definitions/AuthSourceLdap1"
        }
      },
      "required": [
        "auth_source_ldap"
      ]
    },
    "AuthSourceLdap1": {
      "title": "AuthSourceLdap1",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "port": {
          "description": "defaults to 389",
          "type": "number",
          "format": "double"
        },
        "account": {
          "type": "string"
        },
        "base_dn": {
          "type": "string"
        },
        "account_password": {
          "description": "required if onthefly_register is true",
          "type": "string"
        },
        "attr_login": {
          "description": "required if onthefly_register is true",
          "type": "string"
        },
        "attr_firstname": {
          "description": "required if onthefly_register is true",
          "type": "string"
        },
        "attr_lastname": {
          "description": "required if onthefly_register is true",
          "type": "string"
        },
        "attr_mail": {
          "description": "required if onthefly_register is true",
          "type": "string"
        },
        "attr_photo": {
          "type": "string"
        },
        "onthefly_register": {
          "type": "boolean"
        },
        "usergroup_sync": {
          "description": "sync external user groups on login",
          "type": "boolean"
        },
        "tls": {
          "type": "boolean"
        },
        "groups_base": {
          "description": "groups base DN",
          "type": "string"
        },
        "use_netgroups": {
          "description": "use NIS netgroups instead of posix groups, applicable only when server_type is posix or free_ipa",
          "type": "boolean"
        },
        "server_type": {
          "$ref": "#/definitions/ServerType"
        },
        "ldap_filter": {
          "description": "LDAP filter",
          "type": "string"
        }
      }
    },
    "body134": {
      "title": "body134",
      "type": "object",
      "properties": {
        "compute_attribute": {
          "$ref": "#/definitions/ComputeAttribute"
        }
      },
      "required": [
        "compute_attribute"
      ]
    },
    "ComputeAttribute": {
      "title": "ComputeAttribute",
      "type": "object",
      "properties": {
        "vm_attrs": {
          "type": "object"
        }
      },
      "required": [
        "vm_attrs"
      ]
    },
    "body136": {
      "title": "body136",
      "type": "object",
      "properties": {
        "compute_profile_id": {
          "type": "string"
        },
        "compute_attribute": {
          "$ref": "#/definitions/ComputeAttribute"
        }
      },
      "required": [
        "compute_profile_id",
        "compute_attribute"
      ]
    },
    "body137": {
      "title": "body137",
      "type": "object",
      "properties": {
        "compute_resource_id": {
          "type": "string"
        },
        "compute_attribute": {
          "$ref": "#/definitions/ComputeAttribute"
        }
      },
      "required": [
        "compute_resource_id",
        "compute_attribute"
      ]
    },
    "body138": {
      "title": "body138",
      "type": "object",
      "properties": {
        "compute_profile_id": {
          "type": "string"
        },
        "compute_resource_id": {
          "type": "string"
        },
        "compute_attribute": {
          "$ref": "#/definitions/ComputeAttribute"
        }
      },
      "required": [
        "compute_profile_id",
        "compute_resource_id",
        "compute_attribute"
      ]
    },
    "body139": {
      "title": "body139",
      "type": "object",
      "properties": {
        "compute_attribute": {
          "$ref": "#/definitions/ComputeAttribute5"
        }
      },
      "required": [
        "compute_attribute"
      ]
    },
    "ComputeAttribute5": {
      "title": "ComputeAttribute5",
      "type": "object",
      "properties": {
        "vm_attrs": {
          "type": "object"
        }
      }
    },
    "body141": {
      "title": "body141",
      "type": "object",
      "properties": {
        "compute_profile_id": {
          "type": "string"
        },
        "compute_attribute": {
          "$ref": "#/definitions/ComputeAttribute5"
        }
      },
      "required": [
        "compute_profile_id",
        "compute_attribute"
      ]
    },
    "body142": {
      "title": "body142",
      "type": "object",
      "properties": {
        "compute_resource_id": {
          "type": "string"
        },
        "compute_attribute": {
          "$ref": "#/definitions/ComputeAttribute5"
        }
      },
      "required": [
        "compute_resource_id",
        "compute_attribute"
      ]
    },
    "body143": {
      "title": "body143",
      "type": "object",
      "properties": {
        "compute_profile_id": {
          "type": "string"
        },
        "compute_resource_id": {
          "type": "string"
        },
        "compute_attribute": {
          "$ref": "#/definitions/ComputeAttribute5"
        }
      },
      "required": [
        "compute_profile_id",
        "compute_resource_id",
        "compute_attribute"
      ]
    },
    "body144": {
      "title": "body144",
      "type": "object",
      "properties": {
        "compute_resource": {
          "$ref": "#/definitions/ComputeResource"
        }
      },
      "required": [
        "compute_resource"
      ]
    },
    "ComputeResource": {
      "title": "ComputeResource",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "provider": {
          "description": "Providers include Libvirt, Vmware",
          "type": "string"
        },
        "url": {
          "description": "URL for Libvirt, oVirt, OpenStack and Rackspace",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "user": {
          "description": "Username for oVirt, EC2, VMware, OpenStack. Access Key for EC2.",
          "type": "string"
        },
        "password": {
          "description": "Password for oVirt, EC2, VMware, OpenStack. Secret key for EC2",
          "type": "string"
        },
        "uuid": {
          "description": "Deprecated, please use datacenter",
          "type": "string"
        },
        "datacenter": {
          "description": "for oVirt, VMware Datacenter",
          "type": "string"
        },
        "use_v4": {
          "description": "for oVirt only",
          "type": "boolean"
        },
        "ovirt_quota": {
          "description": "for oVirt only",
          "type": "string"
        },
        "region": {
          "description": "for EC2 only, use 'us-gov-west-1' for GovCloud region",
          "type": "string"
        },
        "tenant": {
          "description": "for OpenStack only",
          "type": "string"
        },
        "domain": {
          "description": "for OpenStack only",
          "type": "string"
        },
        "server": {
          "description": "for VMware",
          "type": "string"
        },
        "set_console_password": {
          "description": "for Libvirt and VMware only",
          "type": "boolean"
        },
        "display_type": {
          "$ref": "#/definitions/DisplayType"
        },
        "caching_enabled": {
          "description": "enable caching, for VMware only",
          "type": "boolean"
        }
      },
      "required": [
        "name"
      ]
    },
    "DisplayType": {
      "title": "DisplayType",
      "description": "for Libvirt only",
      "example": "VNC",
      "type": "string",
      "enum": [
        "VNC",
        "SPICE"
      ]
    },
    "body145": {
      "title": "body145",
      "type": "object",
      "properties": {
        "compute_resource": {
          "$ref": "#/definitions/ComputeResource1"
        }
      },
      "required": [
        "compute_resource"
      ]
    },
    "ComputeResource1": {
      "title": "ComputeResource1",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "provider": {
          "description": "Providers include Libvirt, Vmware",
          "type": "string"
        },
        "url": {
          "description": "URL for Libvirt, oVirt, OpenStack and Rackspace",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "user": {
          "description": "Username for oVirt, EC2, VMware, OpenStack. Access Key for EC2.",
          "type": "string"
        },
        "password": {
          "description": "Password for oVirt, EC2, VMware, OpenStack. Secret key for EC2",
          "type": "string"
        },
        "uuid": {
          "description": "Deprecated, please use datacenter",
          "type": "string"
        },
        "datacenter": {
          "description": "for oVirt, VMware Datacenter",
          "type": "string"
        },
        "use_v4": {
          "description": "for oVirt only",
          "type": "boolean"
        },
        "ovirt_quota": {
          "description": "for oVirt only",
          "type": "string"
        },
        "region": {
          "description": "for EC2 only, use 'us-gov-west-1' for GovCloud region",
          "type": "string"
        },
        "tenant": {
          "description": "for OpenStack only",
          "type": "string"
        },
        "domain": {
          "description": "for OpenStack only",
          "type": "string"
        },
        "server": {
          "description": "for VMware",
          "type": "string"
        },
        "set_console_password": {
          "description": "for Libvirt and VMware only",
          "type": "boolean"
        },
        "display_type": {
          "$ref": "#/definitions/DisplayType"
        },
        "caching_enabled": {
          "description": "enable caching, for VMware only",
          "type": "boolean"
        }
      }
    },
    "body146": {
      "title": "body146",
      "type": "object",
      "properties": {
        "template_input": {
          "$ref": "#/definitions/TemplateInput"
        }
      },
      "required": [
        "template_input"
      ]
    },
    "TemplateInput": {
      "title": "TemplateInput",
      "type": "object",
      "properties": {
        "name": {
          "description": "Input name",
          "type": "string"
        },
        "description": {
          "description": "Input description",
          "type": "string"
        },
        "required": {
          "description": "Input is required",
          "type": "boolean"
        },
        "advanced": {
          "description": "Input is advanced",
          "type": "boolean"
        },
        "input_type": {
          "$ref": "#/definitions/InputType"
        },
        "fact_name": {
          "description": "Fact name, used when input type is fact",
          "type": "string"
        },
        "variable_name": {
          "description": "Variable name, used when input type is variable",
          "type": "string"
        },
        "puppet_class_name": {
          "description": "Puppet class name, used when input type is puppet_parameter",
          "type": "string"
        },
        "puppet_parameter_name": {
          "description": "Puppet parameter name, used when input type is puppet_parameter",
          "type": "string"
        },
        "options": {
          "description": "Selectable values for user inputs",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "input_type"
      ]
    },
    "InputType": {
      "title": "InputType",
      "description": "Input type",
      "example": "user",
      "type": "string",
      "enum": [
        "user",
        "fact",
        "variable",
        "puppet_parameter"
      ]
    },
    "body147": {
      "title": "body147",
      "type": "object",
      "properties": {
        "template_input": {
          "$ref": "#/definitions/TemplateInput1"
        }
      },
      "required": [
        "template_input"
      ]
    },
    "TemplateInput1": {
      "title": "TemplateInput1",
      "type": "object",
      "properties": {
        "name": {
          "description": "Input name",
          "type": "string"
        },
        "description": {
          "description": "Input description",
          "type": "string"
        },
        "required": {
          "description": "Input is required",
          "type": "boolean"
        },
        "advanced": {
          "description": "Input is advanced",
          "type": "boolean"
        },
        "input_type": {
          "$ref": "#/definitions/InputType"
        },
        "fact_name": {
          "description": "Fact name, used when input type is fact",
          "type": "string"
        },
        "variable_name": {
          "description": "Variable name, used when input type is variable",
          "type": "string"
        },
        "puppet_class_name": {
          "description": "Puppet class name, used when input type is puppet_parameter",
          "type": "string"
        },
        "puppet_parameter_name": {
          "description": "Puppet parameter name, used when input type is puppet_parameter",
          "type": "string"
        },
        "options": {
          "description": "Selectable values for user inputs",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "body148": {
      "title": "body148",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Whether the recurring logic is enabled or disabled.",
          "type": "boolean"
        }
      }
    },
    "body149": {
      "title": "body149",
      "type": "object",
      "properties": {
        "searches": {
          "description": "List of uuids to fetch info about",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "body150": {
      "title": "body150",
      "type": "object",
      "properties": {
        "search": {
          "description": "Resume tasks matching search string",
          "type": "string"
        },
        "task_ids": {
          "description": "Resume specific tasks by ID",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "body151": {
      "title": "body151",
      "type": "object",
      "properties": {
        "callback": {
          "$ref": "#/definitions/Callback"
        },
        "data": {
          "description": "Data to be sent to the action",
          "type": "object"
        }
      }
    },
    "Callback": {
      "title": "Callback",
      "type": "object",
      "properties": {
        "task_id": {
          "description": "UUID of the task",
          "type": "string"
        },
        "step_id": {
          "description": "The ID of the step inside the execution plan to send the event to",
          "type": "string"
        }
      }
    },
    "body152": {
      "title": "body152",
      "type": "object",
      "properties": {
        "report": {
          "$ref": "#/definitions/Report1"
        }
      },
      "required": [
        "report"
      ]
    },
    "Report1": {
      "title": "Report1",
      "type": "object",
      "properties": {
        "host": {
          "description": "Hostname or certname",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "omaha_version": {
          "description": "Omaha OS version using semantic versioning, e.g. 1590.0.0",
          "type": "string"
        },
        "machineid": {
          "description": "Unique machine id of the host",
          "type": "string"
        },
        "omaha_group": {
          "description": "The uuid if the channel that the host is attached to. Use alpha, beta or stable for built-in channels.",
          "type": "string"
        },
        "oem": {
          "description": "OEM identifier",
          "type": "string"
        }
      },
      "required": [
        "host",
        "status",
        "omaha_version",
        "machineid",
        "omaha_group"
      ]
    },
    "Status": {
      "title": "Status",
      "description": "Omaha update status",
      "example": "unknown",
      "type": "string",
      "enum": [
        "unknown",
        "complete",
        "downloading",
        "downloaded",
        "installed",
        "instance_hold",
        "error"
      ]
    },
    "body153": {
      "title": "body153",
      "type": "object",
      "properties": {
        "job_template": {
          "$ref": "#/definitions/JobTemplate"
        }
      },
      "required": [
        "job_template"
      ]
    },
    "JobTemplate": {
      "title": "JobTemplate",
      "type": "object",
      "properties": {
        "name": {
          "description": "Template name",
          "type": "string"
        },
        "job_category": {
          "description": "Job category",
          "type": "string"
        },
        "description_format": {
          "description": "This template is used to generate the description. Input values can be used using the syntax %{package}. You may also include the job category and template name using %{job_category} and %{template_name}.",
          "type": "string"
        },
        "template": {
          "type": "string"
        },
        "provider_type": {
          "$ref": "#/definitions/ProviderType"
        },
        "snippet": {
          "type": "boolean"
        },
        "audit_comment": {
          "type": "string"
        },
        "locked": {
          "description": "Whether or not the template is locked for editing",
          "type": "boolean"
        },
        "effective_user_attributes": {
          "$ref": "#/definitions/EffectiveUserAttributes"
        }
      },
      "required": [
        "name",
        "job_category",
        "template",
        "provider_type"
      ]
    },
    "ProviderType": {
      "title": "ProviderType",
      "description": "Provider type",
      "example": "SSH",
      "type": "string",
      "enum": [
        "SSH",
        "Ansible"
      ]
    },
    "EffectiveUserAttributes": {
      "title": "EffectiveUserAttributes",
      "type": "object",
      "properties": {
        "value": {
          "description": "What user should be used to run the script (using sudo-like mechanisms)",
          "type": "string"
        },
        "overridable": {
          "description": "Whether it should be allowed to override the effective user from the invocation form.",
          "type": "boolean"
        },
        "current_user": {
          "description": "Whether the current user login should be used as the effective user",
          "type": "boolean"
        }
      }
    },
    "body154": {
      "title": "body154",
      "type": "object",
      "properties": {
        "template": {
          "description": "Template ERB",
          "type": "string"
        },
        "overwrite": {
          "description": "Overwrite template if it already exists",
          "type": "boolean"
        }
      },
      "required": [
        "template"
      ]
    },
    "body155": {
      "title": "body155",
      "type": "object",
      "properties": {
        "job_template": {
          "$ref": "#/definitions/JobTemplate1"
        }
      },
      "required": [
        "job_template"
      ]
    },
    "JobTemplate1": {
      "title": "JobTemplate1",
      "type": "object",
      "properties": {
        "name": {
          "description": "Template name",
          "type": "string"
        },
        "job_category": {
          "description": "Job category",
          "type": "string"
        },
        "description_format": {
          "description": "This template is used to generate the description. Input values can be used using the syntax %{package}. You may also include the job category and template name using %{job_category} and %{template_name}.",
          "type": "string"
        },
        "template": {
          "type": "string"
        },
        "provider_type": {
          "$ref": "#/definitions/ProviderType"
        },
        "snippet": {
          "type": "boolean"
        },
        "audit_comment": {
          "type": "string"
        },
        "locked": {
          "description": "Whether or not the template is locked for editing",
          "type": "boolean"
        },
        "effective_user_attributes": {
          "$ref": "#/definitions/EffectiveUserAttributes"
        }
      }
    },
    "body156": {
      "title": "body156",
      "type": "object",
      "properties": {
        "job_template": {
          "$ref": "#/definitions/JobTemplate2"
        }
      },
      "required": [
        "job_template"
      ]
    },
    "JobTemplate2": {
      "title": "JobTemplate2",
      "type": "object",
      "properties": {
        "name": {
          "description": "Template name",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "body157": {
      "title": "body157",
      "type": "object",
      "properties": {
        "remote_execution_feature": {
          "$ref": "#/definitions/RemoteExecutionFeature"
        }
      },
      "required": [
        "remote_execution_feature"
      ]
    },
    "RemoteExecutionFeature": {
      "title": "RemoteExecutionFeature",
      "type": "object",
      "properties": {
        "job_template_id": {
          "description": "Job template ID to be used for the feature",
          "type": "string"
        }
      }
    },
    "body158": {
      "title": "body158",
      "type": "object",
      "properties": {
        "job_invocation": {
          "$ref": "#/definitions/JobInvocation"
        }
      },
      "required": [
        "job_invocation"
      ]
    },
    "JobInvocation": {
      "title": "JobInvocation",
      "type": "object",
      "properties": {
        "job_template_id": {
          "description": "The job template to use, parameter is required unless feature was specified",
          "type": "string"
        },
        "targeting_type": {
          "description": "Invocation type, one of {\"static_query\"=>\"Static Query\", \"dynamic_query\"=>\"Dynamic Query\"}",
          "type": "string"
        },
        "inputs": {
          "description": "Inputs to use",
          "type": "object"
        },
        "ssh": {
          "$ref": "#/definitions/Ssh"
        },
        "recurrence": {
          "$ref": "#/definitions/Recurrence"
        },
        "scheduling": {
          "$ref": "#/definitions/Scheduling"
        },
        "concurrency_control": {
          "$ref": "#/definitions/ConcurrencyControl"
        },
        "bookmark_id": {
          "type": "number",
          "format": "double"
        },
        "search_query": {
          "type": "string"
        },
        "description_format": {
          "description": "Override the description format from the template for this invocation only",
          "type": "string"
        },
        "execution_timeout_interval": {
          "description": "Override the timeout interval from the template for this invocation only",
          "type": "number",
          "format": "double"
        },
        "feature": {
          "description": "Remote execution feature label that should be triggered, job template assigned to this feature will be used",
          "type": "string"
        }
      },
      "required": [
        "targeting_type"
      ]
    },
    "Ssh": {
      "title": "Ssh",
      "type": "object",
      "properties": {
        "effective_user": {
          "description": "What user should be used to run the script (using sudo-like mechanisms). Defaults to a template parameter or global setting.",
          "type": "string"
        }
      }
    },
    "Recurrence": {
      "title": "Recurrence",
      "type": "object",
      "properties": {
        "cron_line": {
          "description": "How often the job should occur, in the cron format",
          "type": "string"
        },
        "max_iteration": {
          "description": "Repeat a maximum of N times",
          "type": "number",
          "format": "double"
        },
        "end_time": {
          "description": "Perform no more executions after this time",
          "type": "string"
        }
      }
    },
    "Scheduling": {
      "title": "Scheduling",
      "type": "object",
      "properties": {
        "start_at": {
          "description": "Schedule the job for a future time",
          "type": "string"
        },
        "start_before": {
          "description": "Indicates that the action should be cancelled if it cannot be started before this time.",
          "type": "string"
        }
      }
    },
    "ConcurrencyControl": {
      "title": "ConcurrencyControl",
      "type": "object",
      "properties": {
        "time_span": {
          "description": "Distribute tasks over N seconds",
          "type": "number",
          "format": "double"
        },
        "concurrency_level": {
          "description": "Run at most N tasks at a time",
          "type": "number",
          "format": "double"
        }
      }
    },
    "body159": {
      "title": "body159",
      "type": "object",
      "properties": {
        "force": {
          "type": "boolean"
        }
      }
    },
    "body160": {
      "title": "body160",
      "type": "object",
      "properties": {
        "failed_only": {
          "type": "boolean"
        }
      }
    },
    "body161": {
      "title": "body161",
      "type": "object",
      "properties": {
        "foreign_input_set": {
          "$ref": "#/definitions/ForeignInputSet"
        }
      },
      "required": [
        "foreign_input_set"
      ]
    },
    "ForeignInputSet": {
      "title": "ForeignInputSet",
      "type": "object",
      "properties": {
        "target_template_id": {
          "description": "Target template ID",
          "type": "string"
        },
        "include_all": {
          "description": "Include all inputs from the foreign template",
          "type": "boolean"
        },
        "include": {
          "description": "A comma separated list of input names to be included from the foreign template.",
          "type": "string"
        },
        "exclude": {
          "description": "A comma separated list of input names to be included from the foreign template.",
          "type": "string"
        },
        "description": {
          "description": "Input set description",
          "type": "string"
        }
      },
      "required": [
        "target_template_id"
      ]
    },
    "body162": {
      "title": "body162",
      "type": "object",
      "properties": {
        "foreign_input_set": {
          "$ref": "#/definitions/ForeignInputSet1"
        }
      },
      "required": [
        "foreign_input_set"
      ]
    },
    "ForeignInputSet1": {
      "title": "ForeignInputSet1",
      "type": "object",
      "properties": {
        "target_template_id": {
          "description": "Target template ID",
          "type": "string"
        },
        "include_all": {
          "description": "Include all inputs from the foreign template",
          "type": "boolean"
        },
        "include": {
          "description": "A comma separated list of input names to be included from the foreign template.",
          "type": "string"
        },
        "exclude": {
          "description": "A comma separated list of input names to be included from the foreign template.",
          "type": "string"
        },
        "description": {
          "description": "Input set description",
          "type": "string"
        }
      }
    },
    "body163": {
      "title": "body163",
      "type": "object",
      "properties": {
        "prefix": {
          "description": "The string all imported templates should begin with.",
          "type": "string"
        },
        "associate": {
          "$ref": "#/definitions/Associate3"
        },
        "force": {
          "description": "Update templates that are locked",
          "type": "boolean"
        },
        "lock": {
          "description": "Lock imported templates",
          "type": "boolean"
        },
        "verbose": {
          "description": "Show template diff in response",
          "type": "boolean"
        },
        "branch": {
          "description": "Branch in Git repo.",
          "type": "string"
        },
        "repo": {
          "description": "Override the default repo from settings.",
          "type": "string"
        },
        "filter": {
          "description": "Export templates with names matching this regex (case-insensitive; snippets are not filtered).",
          "type": "string"
        },
        "negate": {
          "description": "Negate the prefix (for purging).",
          "type": "boolean"
        },
        "dirname": {
          "description": "The directory within Git repo containing the templates",
          "type": "string"
        }
      }
    },
    "Associate3": {
      "title": "Associate3",
      "description": "Associate to OS's, Locations & Organizations. Options are: always, new or never.",
      "example": "always",
      "type": "string",
      "enum": [
        "always",
        "new",
        "never"
      ]
    },
    "body164": {
      "title": "body164",
      "type": "object",
      "properties": {
        "metadata_export_mode": {
          "$ref": "#/definitions/MetadataExportMode"
        },
        "branch": {
          "description": "Branch in Git repo.",
          "type": "string"
        },
        "repo": {
          "description": "Override the default repo from settings.",
          "type": "string"
        },
        "filter": {
          "description": "Export templates with names matching this regex (case-insensitive; snippets are not filtered).",
          "type": "string"
        },
        "negate": {
          "description": "Negate the prefix (for purging).",
          "type": "boolean"
        },
        "dirname": {
          "description": "The directory within Git repo containing the templates",
          "type": "string"
        }
      }
    },
    "MetadataExportMode": {
      "title": "MetadataExportMode",
      "description": "Specify how to handle metadata",
      "example": "refresh",
      "type": "string",
      "enum": [
        "refresh",
        "keep",
        "remove"
      ]
    },
    "body165": {
      "title": "body165",
      "type": "object",
      "properties": {
        "proxy_id": {
          "description": "Smart Proxy to import from",
          "type": "string"
        },
        "role_names": {
          "description": "Ansible role names to import",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "body166": {
      "title": "body166",
      "type": "object",
      "properties": {
        "proxy_id": {
          "description": "Smart Proxy to import from",
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "name": "ansible_roles",
      "description": ""
    },
    {
      "name": "architectures",
      "description": ""
    },
    {
      "name": "audits",
      "description": ""
    },
    {
      "name": "auth_source_externals",
      "description": ""
    },
    {
      "name": "auth_source_internals",
      "description": ""
    },
    {
      "name": "auth_source_ldaps",
      "description": ""
    },
    {
      "name": "auth_sources",
      "description": ""
    },
    {
      "name": "autosign",
      "description": ""
    },
    {
      "name": "bookmarks",
      "description": ""
    },
    {
      "name": "common_parameters",
      "description": ""
    },
    {
      "name": "compute_attributes",
      "description": ""
    },
    {
      "name": "compute_profiles",
      "description": ""
    },
    {
      "name": "compute_resources",
      "description": ""
    },
    {
      "name": "config_groups",
      "description": ""
    },
    {
      "name": "config_reports",
      "description": ""
    },
    {
      "name": "config_templates",
      "description": ""
    },
    {
      "name": "dashboard",
      "description": ""
    },
    {
      "name": "domains",
      "description": ""
    },
    {
      "name": "environments",
      "description": ""
    },
    {
      "name": "external_usergroups",
      "description": ""
    },
    {
      "name": "fact_values",
      "description": ""
    },
    {
      "name": "filters",
      "description": ""
    },
    {
      "name": "foreign_input_sets",
      "description": ""
    },
    {
      "name": "foreman_tasks",
      "description": ""
    },
    {
      "name": "home",
      "description": ""
    },
    {
      "name": "host_classes",
      "description": ""
    },
    {
      "name": "hostgroup_classes",
      "description": ""
    },
    {
      "name": "hostgroups",
      "description": ""
    },
    {
      "name": "hosts",
      "description": ""
    },
    {
      "name": "http_proxies",
      "description": ""
    },
    {
      "name": "images",
      "description": ""
    },
    {
      "name": "interfaces",
      "description": ""
    },
    {
      "name": "job_invocations",
      "description": ""
    },
    {
      "name": "job_templates",
      "description": ""
    },
    {
      "name": "locations",
      "description": ""
    },
    {
      "name": "mail_notifications",
      "description": ""
    },
    {
      "name": "media",
      "description": ""
    },
    {
      "name": "models",
      "description": ""
    },
    {
      "name": "omaha_groups",
      "description": ""
    },
    {
      "name": "omaha_reports",
      "description": ""
    },
    {
      "name": "operatingsystems",
      "description": ""
    },
    {
      "name": "organizations",
      "description": ""
    },
    {
      "name": "os_default_templates",
      "description": ""
    },
    {
      "name": "override_values",
      "description": ""
    },
    {
      "name": "parameters",
      "description": ""
    },
    {
      "name": "permissions",
      "description": ""
    },
    {
      "name": "personal_access_tokens",
      "description": ""
    },
    {
      "name": "plugins",
      "description": ""
    },
    {
      "name": "provisioning_templates",
      "description": ""
    },
    {
      "name": "ptables",
      "description": ""
    },
    {
      "name": "puppet_hosts",
      "description": ""
    },
    {
      "name": "puppetclasses",
      "description": ""
    },
    {
      "name": "realms",
      "description": ""
    },
    {
      "name": "recurring_logics",
      "description": ""
    },
    {
      "name": "remote_execution_features",
      "description": ""
    },
    {
      "name": "report_templates",
      "description": ""
    },
    {
      "name": "reports",
      "description": ""
    },
    {
      "name": "roles",
      "description": ""
    },
    {
      "name": "settings",
      "description": ""
    },
    {
      "name": "smart_class_parameters",
      "description": ""
    },
    {
      "name": "smart_proxies",
      "description": ""
    },
    {
      "name": "smart_variables",
      "description": ""
    },
    {
      "name": "ssh_keys",
      "description": ""
    },
    {
      "name": "statistics",
      "description": ""
    },
    {
      "name": "subnets",
      "description": ""
    },
    {
      "name": "table_preferences",
      "description": ""
    },
    {
      "name": "tasks",
      "description": ""
    },
    {
      "name": "template",
      "description": ""
    },
    {
      "name": "template_combinations",
      "description": ""
    },
    {
      "name": "template_inputs",
      "description": ""
    },
    {
      "name": "template_invocations",
      "description": ""
    },
    {
      "name": "template_kinds",
      "description": ""
    },
    {
      "name": "trends",
      "description": ""
    },
    {
      "name": "usergroups",
      "description": ""
    },
    {
      "name": "users",
      "description": ""
    }
  ]
}